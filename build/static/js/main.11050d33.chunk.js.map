{"version":3,"sources":["services/apiService.js","components/loginPage/loginPage.js","components/signupPage/signupPage.js","components/authPage/authPage.js","components/chatPage/chatPage.js","App.js","serviceWorker.js","index.js"],"names":["callApi","route","email","password","a","name","isLogin","fetch","method","headers","body","JSON","stringify","user","response","json","resultObj","status","window","localStorage","removeItem","setItem","token","refreshToken","alert","accessToken","getItem","console","log","LogInPage","props","passwordCheck","event","passwordInput","target","value","isEmpty","test","setState","isPasswordEmpty","this","checkSubmitDisable","emailCheck","emailInput","isEmailEmpty","isCorrect","state","isDisabled","isLoggedIn","isSpinning","logIn","bind","isSuccessful","setTimeout","updateState","isAuth","className","noValidate","autoComplete","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","TextField","required","id","label","type","onChange","Box","m","Button","disabled","onClick","variant","CircularProgress","size","Component","SignUpPage","nameCheck","nameInput","isFirstTime","regexpFirst","isNotCorrectName","nameValidate","isNotCorrectEmail","emailValidate","isNotCorrectPassword","passwordValidate","confirmPasswordCheck","confirmPasswordInput","isNotCorrectConfirmPassword","confirmPasswordValidate","isSignedUp","signUp","error","helperText","InputProps","endAdornment","InputAdornment","position","Tooltip","title","AuthPage","setAppState","isAuthenticated","newValue","TabContext","style","AppBar","TabList","handleChange","aria-label","Tab","TabPanel","socket","io","connect","ChatPage","onMessageSubmit","isSend","chatInput","current","editElement","childNodes","innerText","parentElement","dataset","editedMessage","emit","message","showContextMenu","preventDefault","stopPropagation","split","includes","anchorEl","isMyMessage","preventShowContextMenu","handleContextMenuClose","handleDialogClose","isDialogOpen","handleKeyDown","key","changeInput","editMessage","elem","previousData","focus","showDeleteMessage","deleteMessage","copyText","text","navigator","clipboard","writeText","selectMessage","isSelectionState","isSelectedMessage","selectedElements","length","push","filter","item","index","arr","join","filteredArray","deleteSelectedMessages","newArray","map","i","array","chat","coordX","coordY","React","createRef","messagesArea","on","messageid","database","sortedResult","sort","b","idx","data-id","onContextMenu","Person","IconButton","Close","ref","renderChat","Menu","keepMounted","MenuItem","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogActions","color","autoFocus","placeholder","margin","InputLabelProps","shrink","inputRef","onKeyDown","Send","App","checkToken","callApiCheckToken","logOut","componentDidMount","Toolbar","to","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.11050d33.chunk.js","sourcesContent":["export async function callApi (route, email, password, name = '') {\n  let isLogin = (route === 'login');\n\n  try {\n    const response = await fetch(`/api/user/${route}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n          user: {\n            name,\n            email,\n            password,\n          }\n      }),});\n    const resultObj = await response.json();\n    if(response.status === 401) {\n      window.localStorage.removeItem('userName');\n      window.localStorage.removeItem('userEmail');\n      window.localStorage.removeItem('token');\n      window.localStorage.removeItem('refreshToken');\n      return false;\n    }\n    window.localStorage.setItem('userName', resultObj.user);\n    window.localStorage.setItem('userEmail', resultObj.email);\n    window.localStorage.setItem('token', resultObj.token);\n    window.localStorage.setItem('refreshToken', resultObj.refreshToken);\n    return true;\n\n  } catch(err) {\n    isLogin ? alert('Incorrect login or password') : alert('This email is already in use!');\n  }\n}\n\nexport async function callApiCheckToken () {\n  try {\n    const response = await fetch(`/api/user/check`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user: {\n          accessToken: window.localStorage.getItem('token'),\n          name: window.localStorage.getItem('userName'),\n          email: window.localStorage.getItem('userEmail'),\n          refreshToken: window.localStorage.getItem('refreshToken'),\n        }\n    }),});\n    const resultObj = await response.json();\n    if(response.status !== 401) {\n      window.localStorage.setItem('token', resultObj.accessToken);\n    }\n\n  } catch(err) {\n    console.log('acces token died');\n  }\n\n}\n  \n","import React, { Component } from 'react';\nimport { TextField, Snackbar } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Alert } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { callApi } from '../../services/apiService';\n\n\nclass LogInPage extends Component {\n    constructor(props) {\n      super(props);\n\n      this.passwordInput = '';\n      this.emailInput = '';\n      \n      this.state = {\n        isPasswordEmpty: null,\n        isEmailEmpty: null,\n        isDisabled: true,\n        isLoggedIn: null,\n        isSpinning: false,\n      }\n      this.logIn = this.logIn.bind(this);\n    }\n  \n    async logIn() {\n      this.setState({ isSpinning: true});\n      const isSuccessful = await callApi('login', this.emailInput, this.passwordInput);\n      console.log(isSuccessful);\n      setTimeout(() => {\n        this.setState({ isLoggedIn: isSuccessful, isSpinning: false });\n      }, 500);\n      setTimeout(() => {\n        this.props.updateState({ isAuth: isSuccessful });\n      }, 1200)\n    }\n\n    passwordCheck = (event) => {\n      const regexp = /^(?!\\s*$).+/;\n      this.passwordInput = event.target.value;\n      const isEmpty = !regexp.test(event.target.value);\n      this.setState({ isPasswordEmpty: isEmpty }, function() {\n        this.checkSubmitDisable();\n      })\n    }\n\n    emailCheck = (event) => {\n      const regexp = /^(?!\\s*$).+/;\n      this.emailInput = event.target.value;\n      const isEmpty = !regexp.test(event.target.value);\n      this.setState({ isEmailEmpty: isEmpty }, function() {\n        this.checkSubmitDisable();\n      })\n    }\n\n    checkSubmitDisable = () => {\n      const isCorrect = ( this.state.isPasswordEmpty === false &&\n        this.state.isEmailEmpty === false ) ? true : false;\n      this.setState({ isDisabled: !isCorrect});\n    }\n  \n    render() {\n  \n      return (\n        <form className='login-form' noValidate autoComplete='on'>\n          <Snackbar open={this.state.isLoggedIn}\n            autoHideDuration={3000}\n            onClose={() => this.setState({ isLoggedIn: null })}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          >\n            <Alert severity=\"success\">\n              You are logged in!\n            </Alert>\n          </Snackbar>\n\n          <Snackbar open={this.state.isLoggedIn === false} \n            autoHideDuration={3000}\n            onClose={() => this.setState({ isLoggedIn: null })}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          >\n            <Alert severity=\"error\">\n              Incorrect login or password!\n            </Alert>\n          </Snackbar>\n\n          <TextField required\n            id='email' \n            label='Email'\n            type='email'\n            onChange={this.emailCheck}\n          />\n          <TextField required\n            id='password'\n            label='Password'\n            type='password'\n            autoComplete='current-password'\n            onChange={this.passwordCheck}\n          />\n          <Box m={2}>\n            <Button\n              disabled={this.state.isDisabled}\n              onClick={this.logIn}\n              className='logInBtn' \n              variant='outlined'\n\n            >\n              { this.state.isSpinning && <CircularProgress size={20} /> }\n              { !this.state.isSpinning && <span>Log In</span> }\n            </Button>\n          </Box>\n        </form>\n      );\n    }\n}\n  \nexport default LogInPage;\n","import React, { Component } from 'react';\nimport { TextField, Snackbar, InputAdornment, Tooltip } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Alert } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nimport { callApi } from '../../services/apiService';\n\n\nclass SignUpPage extends Component {\n    constructor(props) {\n      super(props);\n\n      this.regexpFirst = /^(?!\\s*$).+/;\n      this.nameInput = '';\n      this.passwordInput = '';\n      this.emailInput = '';\n      this.confirmPasswordInput = '';\n\n      this.state = {\n        isNotCorrectName: null,\n        isNotCorrectEmail: null,\n        isNotCorrectPassword: null,\n        isNotCorrectConfirmPassword: null,\n        isDisabled: true,\n        isSignedUp: null,\n        isSpinning: false,\n        isFirstTime: true,\n      }\n      this.signUp = this.signUp.bind(this);\n    }\n  \n    async signUp() {\n      this.nameValidate();\n      this.emailValidate();\n\n      this.passwordValidate();\n      this.confirmPasswordValidate();\n      const isCorrect = this.checkSubmitDisable();\n\n      if(isCorrect) {\n        this.setState({ isSpinning: true, isFirstTime: true, });\n        const isSuccessful = await callApi('signup', this.emailInput, this.passwordInput, this.nameInput);\n\n        setTimeout(() => {\n          this.setState({ isSignedUp: isSuccessful, isSpinning: false });\n\n        }, 500);\n        setTimeout(() => {\n          this.props.updateState({ isAuth: isSuccessful });\n  \n        }, 1200)\n  \n      } else {\n        this.setState({ isFirstTime: false, });\n      }\n    }\n\n    nameCheck = (event) => {\n      this.nameInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectName: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.nameValidate();\n    }\n    emailCheck = (event) => {\n      this.emailInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectEmail: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.emailValidate();\n    }\n    passwordCheck = (event) => {\n      this.passwordInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectPassword: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.passwordValidate();\n    }\n    confirmPasswordCheck = (event) => {\n      this.confirmPasswordInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectConfirmPassword: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.confirmPasswordValidate();\n    }\n\n\n    nameValidate = () => {\n      const regexp = /^[a-zA-Z]+$/;\n      const isCorrect = regexp.test(this.nameInput);\n\n      this.setState({ isNotCorrectName: !isCorrect }, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    emailValidate = () => {\n      const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const isCorrect = regexp.test(this.emailInput);\n      \n      this.setState({ isNotCorrectEmail: !isCorrect }, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    passwordValidate = () => {\n      const regexp = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n      const isCorrect = regexp.test(this.passwordInput);\n\n      this.setState({ isNotCorrectPassword: !isCorrect}, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    confirmPasswordValidate = (event) => {\n      const isCorrect = this.confirmPasswordInput === this.passwordInput;\n      this.setState({ isNotCorrectConfirmPassword: !isCorrect }, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    checkSubmitDisable = () => {\n      const isCorrect = ( this.state.isNotCorrectName === false &&\n        this.state.isNotCorrectEmail === false &&\n        this.state.isNotCorrectPassword === false &&\n        this.state.isNotCorrectConfirmPassword === false) ? true : false;\n      this.setState({ isDisabled: !isCorrect});\n      return isCorrect;\n    }\n    \n    render() {\n  \n      return (\n        <form className='signup-form' noValidate autoComplete='on'>\n\n          <Snackbar open={this.state.isSignedUp}\n            autoHideDuration={3000}\n            onClose={() => this.setState({ isSignedUp: null })}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n            <Alert severity=\"success\">\n              You are signed up!\n            </Alert>\n          </Snackbar>\n\n          <Snackbar open={this.state.isSignedUp === false}\n            autoHideDuration={3000}\n            onClose={() => this.setState({ isSignedUp: null })}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n            <Alert severity=\"error\">\n              This email is already in use!\n            </Alert>\n          </Snackbar>\n          <TextField required\n            error={this.state.isNotCorrectName && !this.state.isFirstTime}\n            id='name' \n            label='Name'\n            onChange={this.nameCheck}\n            helperText={ this.state.isNotCorrectName && !this.state.isFirstTime ? 'Use only alphabet characters' : false }\n          />\n          <TextField required\n            error={this.state.isNotCorrectEmail && !this.state.isFirstTime }\n            id='email' \n            label='Email'\n            type='email'\n            onChange={this.emailCheck}\n            helperText={ this.state.isNotCorrectEmail && !this.state.isFirstTime ? 'Incorrect email' : false }\n          />\n          <TextField required\n            error={this.state.isNotCorrectPassword && !this.state.isFirstTime}\n            id='password'\n            label='Password'\n            type='password'\n            autoComplete='current-password'\n            InputProps={{ \n              endAdornment: <InputAdornment position=\"end\">\n                              <Tooltip title='Password must contain minimum 8 characters, at least 1 letter and 1 number'><HelpOutlineIcon/></Tooltip>\n                            </InputAdornment>\n                        }}\n            onChange={this.passwordCheck}\n            helperText={ this.state.isNotCorrectPassword && !this.state.isFirstTime ? 'Password must contain minimum 8 characters, at least 1 letter and 1 number' : false }\n          />\n          <TextField required\n            error={this.state.isNotCorrectConfirmPassword && !this.state.isFirstTime}\n            id='standard-password'\n            label='Confirm password'\n            type='password'\n            InputProps={{ \n              endAdornment: <InputAdornment position=\"end\">\n                              <Tooltip title='Password and confirm password must match'><HelpOutlineIcon/></Tooltip>\n                            </InputAdornment>\n                        }}\n            onChange={this.confirmPasswordCheck}\n            helperText={ this.state.isNotCorrectConfirmPassword && !this.state.isFirstTime ? `Password and confirm password don't match!` : false }\n          />\n          <Box m={2}>\n            <Button\n              disabled={this.state.isDisabled}\n              onClick={this.signUp}\n              className='signUpBtn'\n              variant='outlined'\n              id='signUpButton'\n            >\n              { this.state.isSpinning && <CircularProgress size={20} /> }\n              { !this.state.isSpinning && <span>Sign Up</span> }\n            </Button>\n          </Box>\n        </form>\n      );\n    }\n}\n  \nexport default SignUpPage;\n","import React, { Component } from 'react';\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport { Tab, AppBar } from '@material-ui/core';\n\nimport LogInPage from '../../components/loginPage/loginPage';\nimport SignUpPage from '../../components/signupPage/signupPage';\n\n\n\nclass AuthPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          value: localStorage.getItem('page') ? localStorage.getItem('page') : '1',\n          isAuthenticated: false,\n        }\n    }\n\n    handleChange(event, newValue) {\n        this.setState({value: newValue});\n        window.localStorage.setItem('page', newValue);\n    }\n\n    setAppState = async (state) => {\n        console.log(state);\n        const { isAuth } = state;\n        this.setState({ isAuthenticated: isAuth });\n        this.props.updateState({ isAuth: isAuth });\n    }\n    \n    render() {\n  \n        return (\n            <div className='tabWrapper'>\n                <TabContext style='backgroundColor: #cbecec' value={this.state.value}>\n                <AppBar position='static'>\n                    <TabList onChange={this.handleChange.bind(this)} aria-label='simple tabs example'>\n                    <Tab label='Sign Up' value='1' />\n                    <Tab label='Log In' value='2' />\n                    </TabList>\n                </AppBar>\n                <TabPanel value='1'>\n                    <SignUpPage updateState = {this.setAppState} />\n                </TabPanel>\n                <TabPanel value='2'>\n                    <LogInPage updateState = {this.setAppState} />\n                </TabPanel>\n                </TabContext>\n          </div>\n\n        );\n    }\n}\n\nexport default AuthPage;\n","import React, { Component } from 'react';\nimport './chatPage.css';\nimport { TextField, Button, IconButton, Menu, MenuItem, Dialog, DialogTitle, DialogActions } from '@material-ui/core';\nimport { Send, Close, Person } from '@material-ui/icons';\nimport io from 'socket.io-client';\n\n// const socket = io.connect('https://login-page-ulyana18.herokuapp.com/');\nconst socket = io.connect('http://localhost:3000');\n\n\n\nclass ChatPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            chat: [],\n            isSend: null,\n            anchorEl: null,\n            editElement: null,\n            isDialogOpen: false,\n            isSelectionState: false,\n            // selectedElements: [],\n        }\n        this.coordX = 0;\n        this.coordY = 0;\n        this.chatInput = React.createRef();\n        this.messagesArea = React.createRef();\n        this.isMyMessage = null;\n        this.selectedElements = [];\n    }\n\n    componentDidMount() {\n        \n        socket.on('chat message', ({ message, name, email }) => {\n            const messageid = (+this.state.chat[this.state.chat.length - 1].messageid + 1) + '';\n          this.setState({\n            chat: [...this.state.chat, { message, name, email, messageid }]\n          });\n        });\n        socket.on('get database', (database) => {\n            let sortedResult = database.sort(function(a, b) { \n                if (+a.messageid > +b.messageid) { \n                  return 1; } \n                if (+a.messageid < +b.messageid) { \n                  return -1; } \n                return 0; \n            });\n            this.setState({\n                chat: sortedResult\n            });\n        });\n        socket.on('edit message', ({ message, messageid }) => {\n            const arr = this.messagesArea.current.childNodes;\n            let i = 0;\n            while(arr[i].dataset.id !== messageid) {\n                i++;\n            }\n            if(arr[i].dataset.id === messageid) {\n                arr[i].childNodes[0].childNodes[1].innerText = message;\n            }\n        });\n        socket.on('delete message', (messageid) => {\n            const filteredArray = this.state.chat.filter(function(item, index, arr) {\n                if(item.messageid !== messageid) return true;\n                return false;\n            });\n            this.setState({ chat: filteredArray, editElement: null });\n        });\n\n        socket.emit('get database');\n    }\n\n    onMessageSubmit = () => {\n        this.setState({ isSend: true });\n        if(this.chatInput.current.value !== '') {\n            if(this.state.editElement !== null) {\n                if(this.chatInput.current.value !== this.state.editElement.childNodes[1].innerText) {\n                    const id = this.state.editElement.parentElement.dataset.id;\n                    const editedMessage = this.chatInput.current.value;\n                    socket.emit('edit message', editedMessage, id);\n                }\n\n            } else socket.emit('chat message', this.chatInput.current.value, window.localStorage.getItem('userName'), window.localStorage.getItem('userEmail'));\n        }\n        this.setState({ message: '', editElement: null });\n        this.chatInput.current.value = '';\n    };\n\n    showContextMenu = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        if(event.target.className.split(' ').includes('message')) {\n            this.setState({ anchorEl: event.target }, function() {\n                if(this.state.anchorEl.className.split(' ').includes('myMessage')) {\n                    this.setState({ isMyMessage: true });\n                } else this.setState({ isMyMessage: false });\n    \n            });\n\n        }\n        if(event.target.parentElement.className.split(' ').includes('message')) {\n            this.setState({ anchorEl: event.target.parentElement }, function() {\n                if(this.state.anchorEl.className.split(' ').includes('myMessage')) {\n                    this.setState({ isMyMessage: true });\n                } else this.setState({ isMyMessage: false });\n    \n            });\n        }\n        \n    }\n    preventShowContextMenu = (event) => {\n        event.preventDefault();\n        return false;\n    }\n\n    handleContextMenuClose = () => {\n        this.setState({ anchorEl: null });\n    }\n\n    handleDialogClose = () => {\n        this.setState({ isDialogOpen: false });\n    }\n\n\n    renderChat() {\n        const { chat } = this.state;\n        return chat.map(({ message, name, email, messageid }, idx) => (\n        \n            <div data-id={messageid} className={ email === window.localStorage.getItem('userEmail') ? 'messageWrapper messageWrapper-myMessage' : 'messageWrapper messageWrapper-otherMessage' }>\n                <div className= { email === window.localStorage.getItem('userEmail') ? 'myMessage message' : 'otherMessage message' }>\n                    <span className='userName noselect' >{name}</span>\n                    <span className='userEmail noselect' onContextMenu={ this.preventShowContextMenu } >{message}</span>\n                    {/* <span className='sendTime'>{sendDate}</span> */}\n                </div>\n                <div className='messageAvatar'>\n                    <Person />\n                </div>\n            </div>\n      \n        ));\n    };\n\n\n    handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            this.onMessageSubmit();\n        }\n    }\n\n    changeInput = (event) => {\n        this.setState({ message: event.target.value });\n    }\n\n    editMessage = () => {\n        const elem = this.state.anchorEl;\n        this.handleContextMenuClose();\n        const previousData = elem.innerText;\n\n        setTimeout(() => {\n            this.chatInput.current.focus();\n        }, 0);\n        this.chatInput.current.value = previousData;\n        this.setState({ editElement: elem, message: previousData });\n\n    }\n\n    showDeleteMessage = () => {\n        const elem = this.state.anchorEl.parentElement;\n        this.handleContextMenuClose();\n\n        this.setState({ isDialogOpen: true, editElement: elem });\n    }\n\n    deleteMessage = () => {\n        this.handleDialogClose();\n        // console.log(this.state.editElement.dataset.id);\n        socket.emit('delete message', this.state.editElement.dataset.id);\n    }\n\n    copyText = () => {\n        const text = this.state.anchorEl.childNodes[1].innerText;\n        navigator.clipboard.writeText(text);\n        this.handleContextMenuClose();\n    }\n\n    selectMessage = async (event) => {\n\n        if(!this.state.isSelectionState) {\n            this.setState({ isSelectionState: true });\n            this.state.anchorEl.className = this.state.anchorEl.className + ' selectedMessage';\n\n            this.selectedElements.push(this.state.anchorEl.parentElement);\n            this.handleContextMenuClose();\n\n        } else {\n            if(event.target.className.split(' ').includes('message')) {\n\n                const elem = event.target;\n\n                this.isSelectedMessage(elem);\n            }\n            if(event.target.parentElement.className.split(' ').includes('message')) {\n\n                const elem = event.target.parentElement;\n\n                this.isSelectedMessage(elem);\n            }\n            if(this.selectedElements.length === 0) this.setState({ isSelectionState: false });\n            else this.setState({ isSelectionState: true });\n\n        }\n    }\n\n    isSelectedMessage = (elem) => {\n        if(elem.className.split(' ').includes('selectedMessage')) {\n            elem.className = elem.className.split(' ').filter(function(item, index, arr) {\n                return item !== 'selectedMessage';\n            }).join(' ');\n\n            const filteredArray = this.selectedElements.filter(function(item, index, arr) {\n                return item.dataset.id !== elem.parentElement.dataset.id;\n            });\n\n            this.selectedElements = filteredArray;\n\n        } else {\n            elem.className = elem.className + ' selectedMessage';\n\n            this.selectedElements.push(elem.parentElement);\n        }\n    }\n\n    deleteSelectedMessages = () => {\n        const newArray = this.selectedElements.map(function(item, index, arr) {\n            item.childNodes[0].className = item.childNodes[0].className.split(' ').filter(function(name, i, array) {\n                return name !== 'selectedMessage';\n            }).join(' ');\n        });\n        this.selectedElements = [];\n        this.setState({ isSelectionState: false });\n        console.log(newArray);\n    }\n\n    render() {\n        return (\n            <div className='chatWrapper'>\n                <div className='chat'>\n                    <div className='chatHeader'>\n                        { !this.state.isSelectionState && <span>Group Chat</span> }\n                        { this.state.isSelectionState && <div className='selectionArea'>\n                            <span className='selectedElemsCount'>Selected items: { this.selectedElements.length } </span>\n                            <IconButton aria-label='delete' \n                                onClick={this.deleteSelectedMessages}\n                            >\n                                <Close />\n                            </IconButton>\n                        </div> }\n                    </div>\n                    <div className='messagesAreaWrapper'>\n                        <div className='messagesArea' ref={ this.messagesArea } \n                            onContextMenu={ this.showContextMenu }\n                            onClick={ this.state.isSelectionState ? this.selectMessage : false }\n                        >\n                            {this.renderChat()}\n                        </div>\n\n                        <Menu\n                            id=\"simple-menu\"\n                            anchorEl={ this.state.anchorEl }\n                            keepMounted\n                            open={ this.state.anchorEl && !this.state.isSelectionState }\n                            onClose={ this.handleContextMenuClose }\n                            anchorOrigin={ { vertical: 'bottom', horizontal: 'right' } }\n                        >\n                            <MenuItem onClick={ this.copyText } >Copy Text</MenuItem>\n                            { this.state.isMyMessage ? <MenuItem onClick={ this.editMessage } >Edit Message</MenuItem> : false }\n                            { this.state.isMyMessage ? <MenuItem onClick={ this.showDeleteMessage } >Delete Message</MenuItem> : false }\n                            {/* <MenuItem >Select Message</MenuItem> */}\n                            <MenuItem onClick={ this.selectMessage } >Select Message</MenuItem>\n                        </Menu>\n\n                        <Dialog\n                            open={ this.state.isDialogOpen }\n                            onClose={ this.handleDialogClose }\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-title\">Are you sure you want to delete message?</DialogTitle>\n                            <DialogActions>\n                            <Button onClick={ this.deleteMessage } color=\"primary\">\n                                Yes, delete\n                            </Button>\n                            <Button onClick={ this.handleDialogClose } color=\"primary\" autoFocus>\n                                No\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                    <div className='inputArea'>\n                        <TextField\n                            id='standard-full-width'\n                            placeholder='Write a message...'\n                            margin='normal'\n                            variant='outlined'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputRef={this.chatInput}\n                            onKeyDown={ this.handleKeyDown }\n                            onChange={this.changeInput}\n                        />\n                        { this.state.message !== '' ? <IconButton aria-label='send'\n                            onClick={this.onMessageSubmit}\n                        >\n                            <Send />\n                        </IconButton> : false }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ChatPage;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { AppBar, Button, Toolbar } from '@material-ui/core';\nimport AuthPage from './components/authPage/authPage';\nimport ChatPage from './components/chatPage/chatPage';\nimport { callApiCheckToken } from './services/apiService';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuth: false,\n    }\n  }\n\n  checkToken = () => callApiCheckToken();\n\n  setAppState = async (state) => {\n    const { isAuth } = state;\n    this.setState({ isAuth: isAuth });\n    window.localStorage.setItem('isAuth', isAuth);\n  }\n\n  logOut = () => {\n    window.localStorage.removeItem('userName');\n    window.localStorage.removeItem('userEmail');\n    window.localStorage.removeItem('token');\n    window.localStorage.removeItem('refreshToken');\n    \n    window.localStorage.setItem('isAuth', false);\n\n    this.setState({ isAuth: false });\n  }\n\n  componentDidMount = () => {\n    this.setState({ isAuth: window.localStorage.getItem('isAuth') || false });\n  }\n\n  render() {\n\n    return (\n        <div className='App'>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Button\n                className='checkTokenBtn' \n                variant='contained'\n                onClick={this.checkToken}\n              >\n                Refresh Access Token\n              </Button>\n              { this.state.isAuth === 'true' || this.state.isAuth === true ? <Button color='inherit' onClick={ this.logOut }>Log out</Button> : false }\n            </Toolbar>\n          </AppBar>\n          <BrowserRouter>\n          { this.state.isAuth === 'true' || this.state.isAuth === true ? <Redirect to='/chat' /> : <Redirect to='/signup' /> }\n            <Switch>\n              <Route path='/signup' component={() => <AuthPage updateState = {this.setAppState} />} />\n              <Route path='/chat' component={() => {\n                return this.state.isAuth === 'true' || this.state.isAuth === true ?  <ChatPage /> : <AuthPage updateState = {this.setAppState} />;\n                }} />\n              <Route component={() => {\n                return this.state.isAuth === 'true' || this.state.isAuth === true ?  <ChatPage /> : <AuthPage updateState = {this.setAppState} />;\n              }} />\n\n            </Switch>\n          </BrowserRouter>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}