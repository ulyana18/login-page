{"version":3,"sources":["services/apiService.js","components/loginPage/loginPage.js","components/signupPage/signupPage.js","components/authPage/authPage.js","components/chatPage/chatPage.js","App.js","serviceWorker.js","index.js"],"names":["callApi","route","email","password","a","name","isLogin","fetch","method","headers","body","JSON","stringify","user","response","json","resultObj","status","window","localStorage","removeItem","setItem","token","refreshToken","alert","accessToken","getItem","console","log","LogInPage","props","detectAutofill","isEmailAutofilled","parse","emailRef","current","labels","dataset","shrink","isPasswordAutofilled","passwordRef","setState","isDisabled","isEmailEmpty","isPasswordEmpty","err","passwordCheck","event","passwordInput","target","value","isEmpty","test","this","checkSubmitDisable","emailCheck","emailInput","isCorrect","state","isLoggedIn","isSpinning","logIn","bind","React","createRef","isSuccessful","setTimeout","updateState","isAuth","addEventListener","className","noValidate","autoComplete","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","TextField","required","id","label","type","inputRef","onChange","Box","m","Button","disabled","onClick","variant","CircularProgress","size","Component","SignUpPage","nameCheck","nameInput","isFirstTime","regexpFirst","isNotCorrectName","nameValidate","isNotCorrectEmail","emailValidate","isNotCorrectPassword","passwordValidate","confirmPasswordCheck","confirmPasswordInput","isNotCorrectConfirmPassword","confirmPasswordValidate","isSignedUp","signUp","error","helperText","InputProps","endAdornment","InputAdornment","position","Tooltip","title","AuthPage","setAppState","isAuthenticated","newValue","TabContext","style","AppBar","TabList","handleChange","aria-label","Tab","TabPanel","socket","io","connect","ChatPage","scrollToRef","height","messagesArea","getBoundingClientRect","parentElement","scrollTo","chatHeight","scrollWithButton","scrollHeight","scrollTop","clientHeight","newClassNames","scrollBtn","split","filter","item","index","arr","join","includes","onMessageSubmit","isSend","chatInput","editElement","childNodes","innerText","editedMessage","emit","message","checkUser","showContextMenu","preventDefault","stopPropagation","anchorEl","isMyMessage","preventShowContextMenu","handleContextMenuClose","handleDialogClose","isDialogOpen","handleKeyDown","key","changeInput","editMessage","elem","previousData","focus","showDeleteMessageDialog","deleteMessage","copyText","text","getSelection","toString","navigator","clipboard","writeText","selectMessage","isSelectionState","isSelectedMessage","selectedElements","length","push","filteredArray","deleteSelectedMessages","map","i","array","chat","isScrolledToTop","userEmail","on","messageid","database","sortedResult","sort","b","is_edited","idx","data-id","onContextMenu","Person","IconButton","Close","onScroll","ref","onLoad","renderChat","buttonRef","ArrowDownward","Menu","keepMounted","MenuItem","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogActions","color","autoFocus","placeholder","margin","InputLabelProps","onKeyDown","Send","App","checkToken","callApiCheckToken","logOut","componentDidMount","Toolbar","to","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"6eAAO,SAAeA,EAAtB,sC,4CAAO,WAAwBC,EAAOC,EAAOC,GAAtC,iCAAAC,EAAA,6DAAgDC,EAAhD,+BAAuD,GACxDC,EAAqB,UAAVL,EADV,kBAIoBM,MAAM,aAAD,OAAcN,GAAS,CACjDO,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBC,KAAM,CACJR,OACAH,QACAC,gBAXL,cAIGW,EAJH,gBAcqBA,EAASC,OAd9B,UAcGC,EAdH,OAeoB,MAApBF,EAASG,OAfT,wBAgBDC,OAAOC,aAAaC,WAAW,YAC/BF,OAAOC,aAAaC,WAAW,aAC/BF,OAAOC,aAAaC,WAAW,SAC/BF,OAAOC,aAAaC,WAAW,gBAnB9B,mBAoBM,GApBN,eAsBHF,OAAOC,aAAaE,QAAQ,WAAYL,EAAUH,MAClDK,OAAOC,aAAaE,QAAQ,YAAaL,EAAUd,OACnDgB,OAAOC,aAAaE,QAAQ,QAASL,EAAUM,OAC/CJ,OAAOC,aAAaE,QAAQ,eAAgBL,EAAUO,cAzBnD,mBA0BI,GA1BJ,kCA6BHjB,EAAUkB,MAAM,+BAAiCA,MAAM,iCA7BpD,2D,kEAiCA,8BAAApB,EAAA,+EAEoBG,MAAM,kBAAmB,CAC9CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,KAAM,CACJY,YAAaP,OAAOC,aAAaO,QAAQ,SACzCrB,KAAMa,OAAOC,aAAaO,QAAQ,YAClCxB,MAAOgB,OAAOC,aAAaO,QAAQ,aACnCH,aAAcL,OAAOC,aAAaO,QAAQ,qBAV7C,cAEGZ,EAFH,gBAaqBA,EAASC,OAb9B,OAaGC,EAbH,OAcoB,MAApBF,EAASG,QACVC,OAAOC,aAAaE,QAAQ,QAASL,EAAUS,aAf9C,kDAmBHE,QAAQC,IAAI,oBAnBT,2D,0BCyGQC,E,kDA/HX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoCRC,eAAiB,WACf,IACE,IAAMC,EAAoBrB,KAAKsB,MAAM,EAAKC,SAASC,QAAQC,OAAO,GAAGC,QAAQC,QACvEC,EAAuB5B,KAAKsB,MAAM,EAAKO,YAAYL,QAAQC,OAAO,GAAGC,QAAQC,QAC/EN,GAAqBO,GACvB,EAAKE,SAAS,CAAEC,YAAY,EAAOC,cAAc,EAAOC,iBAAiB,IAE3E,MAAMC,MA5CS,EA+CnBC,cAAgB,SAACC,GAEf,EAAKC,cAAgBD,EAAME,OAAOC,MAClC,IAAMC,GAFS,cAESC,KAAKL,EAAME,OAAOC,OAC1C,EAAKT,SAAS,CAAEG,gBAAiBO,IAAW,WAC1CE,KAAKC,yBApDU,EAwDnBC,WAAa,SAACR,GAEZ,EAAKS,WAAaT,EAAME,OAAOC,MAC/B,IAAMC,GAFS,cAESC,KAAKL,EAAME,OAAOC,OAC1C,EAAKT,SAAS,CAAEE,aAAcQ,IAAW,WACvCE,KAAKC,yBA7DU,EAiEnBA,mBAAqB,WACnB,IAAMG,GAA6C,IAA/B,EAAKC,MAAMd,kBACD,IAA5B,EAAKc,MAAMf,aACb,EAAKF,SAAS,CAAEC,YAAae,KAjE7B,EAAKT,cAAgB,GACrB,EAAKQ,WAAa,GAElB,EAAKE,MAAQ,CACXd,gBAAiB,KACjBD,aAAc,KACdD,YAAY,EACZiB,WAAY,KACZC,YAAY,GAEd,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAK5B,SAAW6B,IAAMC,YACtB,EAAKxB,YAAcuB,IAAMC,YAfR,E,kLAmBjBX,KAAKZ,SAAS,CAAEmB,YAAY,I,SACD5D,EAAQ,QAASqD,KAAKG,WAAYH,KAAKL,e,OAA5DiB,E,OACNC,YAAW,WACT,EAAKzB,SAAS,CAAEkB,WAAYM,EAAcL,YAAY,MACrD,KACHM,YAAW,WACT,EAAKpC,MAAMqC,YAAY,CAAEC,OAAQH,MAChC,M,gJAICZ,KAAKnB,SAASC,QAAQe,OAASG,KAAKb,YAAYL,QAAQe,QAC1DG,KAAKZ,SAAS,CAAEE,cAAc,EAAOC,iBAAiB,IACtDS,KAAKC,sBAEPpC,OAAOmD,iBAAiB,OAAQhB,KAAKtB,kB,+BAqC7B,IAAD,OAEP,OACE,0BAAMuC,UAAU,aAAaC,YAAU,EAACC,aAAa,MACnD,kBAACC,EAAA,EAAD,CAAUC,KAAMrB,KAAKK,MAAMC,WACzBgB,iBAAkB,IAClBC,QAAS,kBAAM,EAAKnC,SAAS,CAAEkB,WAAY,QAC3CkB,aAAc,CAAEC,SAAU,MAAOC,WAAY,WAE7C,kBAACC,EAAA,EAAD,CAAOC,SAAS,WAAhB,uBAKF,kBAACR,EAAA,EAAD,CAAUC,MAAgC,IAA1BrB,KAAKK,MAAMC,WACzBgB,iBAAkB,IAClBC,QAAS,kBAAM,EAAKnC,SAAS,CAAEkB,WAAY,QAC3CkB,aAAc,CAAEC,SAAU,MAAOC,WAAY,WAE7C,kBAACC,EAAA,EAAD,CAAOC,SAAS,SAAhB,iCAKF,kBAACC,EAAA,EAAD,CAAWC,UAAQ,EACjBC,GAAG,QACHC,MAAM,QACNC,KAAK,QACLC,SAAUlC,KAAKnB,SACfsD,SAAUnC,KAAKE,aAEjB,kBAAC2B,EAAA,EAAD,CAAWC,UAAQ,EACjBC,GAAG,WACHC,MAAM,WACNC,KAAK,WACLd,aAAa,mBACbe,SAAUlC,KAAKb,YACfgD,SAAUnC,KAAKP,gBAEjB,kBAAC2C,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACC,EAAA,EAAD,CACEC,SAAUvC,KAAKK,MAAMhB,WACrBmD,QAASxC,KAAKQ,MACdS,UAAU,WACVwB,QAAQ,YAGNzC,KAAKK,MAAME,YAAc,kBAACmC,EAAA,EAAD,CAAkBC,KAAM,MAChD3C,KAAKK,MAAME,YAAc,+C,GAxHlBqC,a,mCCoNTC,E,kDAlNX,WAAYpE,GAAQ,IAAD,8BACjB,cAAMA,IA+CRqE,UAAY,SAACpD,GAEX,GADA,EAAKqD,UAAYrD,EAAME,OAAOC,MAC3B,EAAKQ,MAAM2C,YAAa,CACzB,IAAMlD,GAAW,EAAKmD,YAAYlD,KAAKL,EAAME,OAAOC,OACpD,EAAKT,SAAS,CAAE8D,iBAAkBpD,IAAW,WAC3CE,KAAKC,6BAEF,EAAKkD,gBAvDK,EAyDnBjD,WAAa,SAACR,GAEZ,GADA,EAAKS,WAAaT,EAAME,OAAOC,MAC5B,EAAKQ,MAAM2C,YAAa,CACzB,IAAMlD,GAAW,EAAKmD,YAAYlD,KAAKL,EAAME,OAAOC,OACpD,EAAKT,SAAS,CAAEgE,kBAAmBtD,IAAW,WAC5CE,KAAKC,6BAEF,EAAKoD,iBAhEK,EAkEnB5D,cAAgB,SAACC,GAEf,GADA,EAAKC,cAAgBD,EAAME,OAAOC,MAC/B,EAAKQ,MAAM2C,YAAa,CACzB,IAAMlD,GAAW,EAAKmD,YAAYlD,KAAKL,EAAME,OAAOC,OACpD,EAAKT,SAAS,CAAEkE,qBAAsBxD,IAAW,WAC/CE,KAAKC,6BAEF,EAAKsD,oBAzEK,EA2EnBC,qBAAuB,SAAC9D,GAEtB,GADA,EAAK+D,qBAAuB/D,EAAME,OAAOC,MACtC,EAAKQ,MAAM2C,YAAa,CACzB,IAAMlD,GAAW,EAAKmD,YAAYlD,KAAKL,EAAME,OAAOC,OACpD,EAAKT,SAAS,CAAEsE,4BAA6B5D,IAAW,WACtDE,KAAKC,6BAEF,EAAK0D,2BAlFK,EAsFnBR,aAAe,WACb,IACM/C,EADS,cACUL,KAAK,EAAKgD,WAEnC,EAAK3D,SAAS,CAAE8D,kBAAmB9C,IAAa,WAC9CJ,KAAKC,yBA3FU,EA+FnBoD,cAAgB,WACd,IACMjD,EADS,uJACUL,KAAK,EAAKI,YAEnC,EAAKf,SAAS,CAAEgE,mBAAoBhD,IAAa,WAC/CJ,KAAKC,yBApGU,EAwGnBsD,iBAAmB,WACjB,IACMnD,EADS,yCACUL,KAAK,EAAKJ,eAEnC,EAAKP,SAAS,CAAEkE,sBAAuBlD,IAAY,WACjDJ,KAAKC,yBA7GU,EAiHnB0D,wBAA0B,SAACjE,GACzB,IAAMU,EAAY,EAAKqD,uBAAyB,EAAK9D,cACrD,EAAKP,SAAS,CAAEsE,6BAA8BtD,IAAa,WACzDJ,KAAKC,yBApHU,EAwHnBA,mBAAqB,WACnB,IAAMG,GAA8C,IAAhC,EAAKC,MAAM6C,mBACI,IAAjC,EAAK7C,MAAM+C,oBACyB,IAApC,EAAK/C,MAAMiD,uBACgC,IAA3C,EAAKjD,MAAMqD,4BAEb,OADA,EAAKtE,SAAS,CAAEC,YAAae,IACtBA,GA3HP,EAAK6C,YAAc,cACnB,EAAKF,UAAY,GACjB,EAAKpD,cAAgB,GACrB,EAAKQ,WAAa,GAClB,EAAKsD,qBAAuB,GAE5B,EAAKpD,MAAQ,CACX6C,iBAAkB,KAClBE,kBAAmB,KACnBE,qBAAsB,KACtBI,4BAA6B,KAC7BrE,YAAY,EACZuE,WAAY,KACZrD,YAAY,EACZyC,aAAa,GAEf,EAAKa,OAAS,EAAKA,OAAOpD,KAAZ,gBAnBG,E,+KAuBjBT,KAAKmD,eACLnD,KAAKqD,gBAELrD,KAAKuD,mBACLvD,KAAK2D,2BACa3D,KAAKC,qB,wBAGrBD,KAAKZ,SAAS,CAAEmB,YAAY,EAAMyC,aAAa,I,SACpBrG,EAAQ,SAAUqD,KAAKG,WAAYH,KAAKL,cAAeK,KAAK+C,W,OAAjFnC,E,OAENC,YAAW,WACT,EAAKzB,SAAS,CAAEwE,WAAYhD,EAAcL,YAAY,MAErD,KACHM,YAAW,WACT,EAAKpC,MAAMqC,YAAY,CAAEC,OAAQH,MAEhC,M,wBAGHZ,KAAKZ,SAAS,CAAE4D,aAAa,I,sIAqFvB,IAAD,OAEP,OACE,0BAAM/B,UAAU,cAAcC,YAAU,EAACC,aAAa,MAEpD,kBAACC,EAAA,EAAD,CAAUC,KAAMrB,KAAKK,MAAMuD,WACzBtC,iBAAkB,IAClBC,QAAS,kBAAM,EAAKnC,SAAS,CAAEwE,WAAY,QAC3CpC,aAAc,CAAEC,SAAU,MAAOC,WAAY,WAC7C,kBAACC,EAAA,EAAD,CAAOC,SAAS,WAAhB,uBAKF,kBAACR,EAAA,EAAD,CAAUC,MAAgC,IAA1BrB,KAAKK,MAAMuD,WACzBtC,iBAAkB,IAClBC,QAAS,kBAAM,EAAKnC,SAAS,CAAEwE,WAAY,QAC3CpC,aAAc,CAAEC,SAAU,MAAOC,WAAY,WAC7C,kBAACC,EAAA,EAAD,CAAOC,SAAS,SAAhB,kCAIF,kBAACC,EAAA,EAAD,CAAWC,UAAQ,EACjBgC,MAAO9D,KAAKK,MAAM6C,mBAAqBlD,KAAKK,MAAM2C,YAClDjB,GAAG,OACHC,MAAM,OACNG,SAAUnC,KAAK8C,UACfiB,cAAa/D,KAAKK,MAAM6C,kBAAqBlD,KAAKK,MAAM2C,cAAc,iCAExE,kBAACnB,EAAA,EAAD,CAAWC,UAAQ,EACjBgC,MAAO9D,KAAKK,MAAM+C,oBAAsBpD,KAAKK,MAAM2C,YACnDjB,GAAG,QACHC,MAAM,QACNC,KAAK,QACLE,SAAUnC,KAAKE,WACf6D,cAAa/D,KAAKK,MAAM+C,mBAAsBpD,KAAKK,MAAM2C,cAAc,oBAEzE,kBAACnB,EAAA,EAAD,CAAWC,UAAQ,EACjBgC,MAAO9D,KAAKK,MAAMiD,uBAAyBtD,KAAKK,MAAM2C,YACtDjB,GAAG,WACHC,MAAM,WACNC,KAAK,WACLd,aAAa,mBACb6C,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACC,EAAA,EAAD,CAASC,MAAM,8EAA6E,kBAAC,IAAD,SAG9GlC,SAAUnC,KAAKP,cACfsE,cAAa/D,KAAKK,MAAMiD,sBAAyBtD,KAAKK,MAAM2C,cAAc,+EAE5E,kBAACnB,EAAA,EAAD,CAAWC,UAAQ,EACjBgC,MAAO9D,KAAKK,MAAMqD,8BAAgC1D,KAAKK,MAAM2C,YAC7DjB,GAAG,oBACHC,MAAM,mBACNC,KAAK,WACL+B,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACC,EAAA,EAAD,CAASC,MAAM,4CAA2C,kBAAC,IAAD,SAG5ElC,SAAUnC,KAAKwD,qBACfO,cAAa/D,KAAKK,MAAMqD,6BAAgC1D,KAAKK,MAAM2C,cAAtD,+CAEf,kBAACZ,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACC,EAAA,EAAD,CACEC,SAAUvC,KAAKK,MAAMhB,WACrBmD,QAASxC,KAAK6D,OACd5C,UAAU,YACVwB,QAAQ,WACRV,GAAG,gBAED/B,KAAKK,MAAME,YAAc,kBAACmC,EAAA,EAAD,CAAkBC,KAAM,MAChD3C,KAAKK,MAAME,YAAc,gD,GA3MjBqC,aCyCV0B,E,kDA3CX,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IAYV8F,YAbmB,uCAaL,WAAOlE,GAAP,eAAAtD,EAAA,sDACFgE,EAAWV,EAAXU,OACR,EAAK3B,SAAS,CAAEoF,gBAAiBzD,IACjC,EAAKtC,MAAMqC,YAAY,CAAEC,OAAQA,IAHvB,2CAbK,sDAEf,EAAKV,MAAQ,CACXR,MAAwC,MAAjC/B,aAAaO,QAAQ,QAAkBP,aAAaO,QAAQ,QAAU,IAC7EmG,iBAAiB,GAJJ,E,yDAQN9E,EAAO+E,GAChBzE,KAAKZ,SAAS,CAACS,MAAO4E,IACtB5G,OAAOC,aAAaE,QAAQ,OAAQyG,K,+BAWpC,OACI,yBAAKxD,UAAU,cACX,kBAACyD,EAAA,EAAD,CAAYC,MAAM,2BAA2B9E,MAAOG,KAAKK,MAAMR,OAC/D,kBAAC+E,EAAA,EAAD,CAAQT,SAAS,UACb,kBAACU,EAAA,EAAD,CAAS1C,SAAUnC,KAAK8E,aAAarE,KAAKT,MAAO+E,aAAW,uBAC5D,kBAACC,EAAA,EAAD,CAAKhD,MAAM,UAAUnC,MAAM,MAC3B,kBAACmF,EAAA,EAAD,CAAKhD,MAAM,SAASnC,MAAM,QAG9B,kBAACoF,EAAA,EAAD,CAAUpF,MAAM,KACZ,kBAAC,EAAD,CAAYiB,YAAed,KAAKuE,eAEpC,kBAACU,EAAA,EAAD,CAAUpF,MAAM,KACZ,kBAAC,EAAD,CAAWiB,YAAed,KAAKuE,qB,GAnC5B3B,a,qHCFjBsC,E,OAASC,EAAGC,QAAQ,yBAwWXC,E,kDAnWX,WAAY5G,GAAQ,IAAD,8BACf,cAAMA,IAkEV6G,YAAc,WACV,IAAMC,EAAS,EAAKC,aAAa1G,QAAQ2G,wBAAwBF,OACjE,EAAKC,aAAa1G,QAAQ4G,cAAcC,SAAS,EAAGJ,GACpD,EAAKK,WAAaL,GAtEH,EAyEnBM,iBAAmB,WACf,IAAMC,EAAe,EAAKN,aAAa1G,QAAQ4G,cAAcK,UACxC,EAAKP,aAAa1G,QAAQ4G,cAAcM,aAE7D,GAAI,EAAKJ,WAAaE,GAAgB,IAAM,CACxC,IAAMG,EAAgB,EAAKC,UAAUpH,QAAQmC,UAAUkF,MAAM,KAAKC,QAAO,SAACC,EAAMC,EAAOC,GAAd,MAA+B,qBAATF,KAA6BG,KAAK,KACjI,EAAKN,UAAUpH,QAAQmC,UAAYgF,OAG/B,EAAKC,UAAUpH,QAAQmC,UAAUkF,MAAM,KAAKM,SAAS,sBACrD,EAAKP,UAAUpH,QAAQmC,UAAY,EAAKiF,UAAUpH,QAAQmC,UAAY,sBAnF/D,EAwFnByF,gBAAkB,WAEd,GADA,EAAKtH,SAAS,CAAEuH,QAAQ,IACa,KAAjC,EAAKC,UAAU9H,QAAQe,MACvB,GAA+B,OAA3B,EAAKQ,MAAMwG,aACX,GAAI,EAAKD,UAAU9H,QAAQe,QAAU,EAAKQ,MAAMwG,YAAYC,WAAW,GAAGC,UAAW,CACjF,IAAMhF,EAAK,EAAK1B,MAAMwG,YAAYnB,cAAc1G,QAAQ+C,GAClDiF,EAAgB,EAAKJ,UAAU9H,QAAQe,MAC7CqF,EAAO+B,KAAK,eAAgBD,EAAejF,SAG5CmD,EAAO+B,KAAK,eAAgB,EAAKL,UAAU9H,QAAQe,MAAOhC,OAAOC,aAAaO,QAAQ,YAAaR,OAAOC,aAAaO,QAAQ,cAE1I,EAAKe,SAAS,CAAE8H,QAAS,GAAIL,YAAa,OAC1C,EAAKD,UAAU9H,QAAQe,MAAQ,IArGhB,EAwGnBsH,UAAY,WACR,EAAK1I,MAAMqC,YAAY,CAAEC,QAAQ,KAzGlB,EA4GnBqG,gBAAkB,SAAC1H,GACfA,EAAM2H,iBACN3H,EAAM4H,kBAEF5H,EAAME,OAAOqB,UAAUkF,MAAM,KAAKM,SAAS,YAC3C,EAAKrH,SAAS,CAAEmI,SAAU7H,EAAME,SAAU,WAClCI,KAAKK,MAAMkH,SAAStG,UAAUkF,MAAM,KAAKM,SAAS,aAClDzG,KAAKZ,SAAS,CAAEoI,aAAa,IAC1BxH,KAAKZ,SAAS,CAAEoI,aAAa,OAKxC9H,EAAME,OAAO8F,cAAczE,UAAUkF,MAAM,KAAKM,SAAS,YACzD,EAAKrH,SAAS,CAAEmI,SAAU7H,EAAME,OAAO8F,gBAAiB,WAChD1F,KAAKK,MAAMkH,SAAStG,UAAUkF,MAAM,KAAKM,SAAS,aAClDzG,KAAKZ,SAAS,CAAEoI,aAAa,IAC1BxH,KAAKZ,SAAS,CAAEoI,aAAa,QA7H7B,EAmInBC,uBAAyB,SAAC/H,GAEtB,OADAA,EAAM2H,kBACC,GArIQ,EAwInBK,uBAAyB,WACrB,EAAKtI,SAAS,CAAEmI,SAAU,QAzIX,EA4InBI,kBAAoB,WAChB,EAAKvI,SAAS,CAAEwI,cAAc,EAAOf,YAAa,QA7InC,EAgJnBgB,cAAgB,SAACnI,GACK,UAAdA,EAAMoI,KAAiB,EAAKpB,mBAjJjB,EAoJnBqB,YAAc,SAACrI,GACX,EAAKN,SAAS,CAAE8H,QAASxH,EAAME,OAAOC,SArJvB,EAiLnBmI,YAAc,WACV,IAAMC,EAAO,EAAK5H,MAAMkH,SACxB,EAAKG,yBACL,IAAMQ,EAAeD,EAAKlB,UAE1BlG,YAAW,WACP,EAAK+F,UAAU9H,QAAQqJ,UACxB,GACH,EAAKvB,UAAU9H,QAAQe,MAAQqI,EAC/B,EAAK9I,SAAS,CAAEyH,YAAaoB,EAAMf,QAASgB,KA1L7B,EA8LnBE,wBAA0B,WACtB,IAAMH,EAAO,EAAK5H,MAAMkH,SAAS7B,cACjC,EAAKgC,yBAEL,EAAKtI,SAAS,CAAEwI,cAAc,EAAMf,YAAaoB,KAlMlC,EAqMnBI,cAAgB,WACZ,EAAKV,oBACLzC,EAAO+B,KAAK,iBAAkB,EAAK5G,MAAMwG,YAAY7H,QAAQ+C,KAvM9C,EA0MnBuG,SAAW,WACP,IAAIC,EACyCA,EAAJ,KAArC1K,OAAO2K,eAAeC,WAA0B,EAAKpI,MAAMkH,SAAST,WAAW,GAAGC,UAC1ElJ,OAAO2K,eAAeC,WAClCC,UAAUC,UAAUC,UAAUL,GAC9B,EAAKb,0BA/MU,EAkNnBmB,cAlNmB,uCAkNH,WAAOnJ,GAAP,iBAAA3C,EAAA,sDAEP,EAAKsD,MAAMyI,kBAQRpJ,EAAME,OAAOqB,UAAUkF,MAAM,KAAKM,SAAS,aAErCwB,EAAOvI,EAAME,OAEnB,EAAKmJ,kBAAkBd,IAEvBvI,EAAME,OAAO8F,cAAczE,UAAUkF,MAAM,KAAKM,SAAS,aAEnDwB,EAAOvI,EAAME,OAAO8F,cAE1B,EAAKqD,kBAAkBd,IAEU,IAAjC,EAAKe,iBAAiBC,OAAc,EAAK7J,SAAS,CAAE0J,kBAAkB,IACrE,EAAK1J,SAAS,CAAE0J,kBAAkB,MApBvC,EAAK1J,SAAS,CAAE0J,kBAAkB,IAClC,EAAKzI,MAAMkH,SAAStG,UAAY,EAAKZ,MAAMkH,SAAStG,UAAY,mBAEhE,EAAK+H,iBAAiBE,KAAK,EAAK7I,MAAMkH,SAAS7B,eAC/C,EAAKgC,0BAPG,2CAlNG,wDA8OnBqB,kBAAoB,SAACd,GACjB,GAAIA,EAAKhH,UAAUkF,MAAM,KAAKM,SAAS,mBAAoB,CACvDwB,EAAKhH,UAAYgH,EAAKhH,UAAUkF,MAAM,KAAKC,QAAO,SAASC,EAAMC,EAAOC,GACpE,MAAgB,oBAATF,KACRG,KAAK,KAER,IAAM2C,EAAgB,EAAKH,iBAAiB5C,QAAO,SAASC,EAAMC,EAAOC,GACrE,OAAOF,EAAKrH,QAAQ+C,KAAOkG,EAAKvC,cAAc1G,QAAQ+C,MAG1D,EAAKiH,iBAAmBG,OAGxBlB,EAAKhH,UAAYgH,EAAKhH,UAAY,mBAElC,EAAK+H,iBAAiBE,KAAKjB,EAAKvC,gBA7PrB,EAiQnB0D,uBAAyB,WACJ,EAAKJ,iBAAiBK,KAAI,SAAShD,EAAMC,EAAOC,GAC7DF,EAAKS,WAAW,GAAG7F,UAAYoF,EAAKS,WAAW,GAAG7F,UAAUkF,MAAM,KAAKC,QAAO,SAASpJ,EAAMsM,EAAGC,GAC5F,MAAgB,oBAATvM,KACRwJ,KAAK,QAEZ,EAAKwC,iBAAmB,GACxB,EAAK5J,SAAS,CAAE0J,kBAAkB,KAtQlC,EAAKzI,MAAQ,CACT6G,QAAS,GACTsC,KAAM,GACN7C,OAAQ,KACRY,SAAU,KACVV,YAAa,KACbe,cAAc,EACd6B,iBAAiB,EACjBX,kBAAkB,GAEtB,EAAKtB,YAAc,KACnB,EAAKwB,iBAAmB,GACxB,EAAKpC,UAAYlG,IAAMC,YACvB,EAAK6E,aAAe9E,IAAMC,YAC1B,EAAKuF,UAAYxF,IAAMC,YACvB,EAAK+I,UAAY,GACjB,EAAK9D,WAAa,EAlBH,E,gEAqBE,IAAD,OAChBV,EAAOyE,GAAG,gBAAgB,YAA+B,IAA5BzC,EAA2B,EAA3BA,QAASlK,EAAkB,EAAlBA,KAAMH,EAAY,EAAZA,MAClC+M,GAAc,EAAKvJ,MAAMmJ,KAAK,EAAKnJ,MAAMmJ,KAAKP,OAAS,GAAGW,UAAY,EAAK,GACjF,EAAKxK,SAAS,CACVoK,KAAK,GAAD,mBAAM,EAAKnJ,MAAMmJ,MAAjB,CAAuB,CAAEtC,UAASlK,OAAMH,QAAO+M,iBACpD,WAAQ,EAAKtE,oBAGpBJ,EAAOyE,GAAG,gBAAgB,SAACE,GACvB,IAAIC,EAAeD,EAASE,MAAK,SAAShN,EAAGiN,GACzC,OAAKjN,EAAE6M,WAAaI,EAAEJ,UACb,GACJ7M,EAAE6M,WAAaI,EAAEJ,WACZ,EACH,KAEX,EAAKxK,SAAS,CACVoK,KAAMM,IACP,WAAQ,EAAKxE,oBAGpBJ,EAAOyE,GAAG,gBAAgB,YAGtB,IAH8D,IAArCzC,EAAoC,EAApCA,QAAS0C,EAA2B,EAA3BA,UAC5BrD,GADuD,EAAhB0D,UACjC,EAAKzE,aAAa1G,QAAQgI,YAClCwC,EAAI,EACD/C,EAAI+C,GAAGtK,QAAQ+C,KAAO6H,GAAWN,IAEpC/C,EAAI+C,GAAGtK,QAAQ+C,KAAO6H,IACtBrD,EAAI+C,GAAGxC,WAAW,GAAGA,WAAW,GAAGC,UAAYG,EAC/CX,EAAI+C,GAAGxC,WAAW,GAAGA,WAAW,GAAG7F,UAAY,0BAGvDiE,EAAOyE,GAAG,kBAAkB,SAACC,GACzB,IAAMT,EAAgB,EAAK9I,MAAMmJ,KAAKpD,QAAO,SAASC,EAAMC,EAAOC,GAC/D,OAAIF,EAAKuD,YAAcA,KAG3B,EAAKxK,SAAS,CAAEoK,KAAML,EAAetC,YAAa,UAGtD3B,EAAO+B,KAAK,gBAEZjH,KAAK0J,UAAY5L,aAAaO,QAAQ,aACtCR,OAAOmD,iBAAiB,UAAWhB,KAAKmH,a,mCAyF9B,IAAD,OAET,OADiBnH,KAAKK,MAAdmJ,KACIH,KAAI,WAAiDa,GAAjD,IAAGhD,EAAH,EAAGA,QAASlK,EAAZ,EAAYA,KAAMH,EAAlB,EAAkBA,MAAO+M,EAAzB,EAAyBA,UAAWK,EAApC,EAAoCA,UAApC,OACZ,yBAAKE,UAAUP,EAAY3I,UAAYpE,IAAUgB,OAAOC,aAAaO,QAAQ,aACzE,0CACE,8CAEF,yBAAK4C,UAAapE,IAAUgB,OAAOC,aAAaO,QAAQ,aACpD,oBACE,wBAEF,0BAAM4C,UAAU,qBAAuBjE,GACvC,0BAAMiE,UAAU,YAAYmJ,cAAgB,EAAK3C,wBAA4BP,GAE7E,0BAAMjG,UAAagJ,EAAY,sBAAwB,0BAAvD,WAGJ,yBAAKhJ,UAAU,iBACX,kBAACoJ,EAAA,EAAD,a,+BAkGZ,OACI,yBAAKpJ,UAAU,eACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACRjB,KAAKK,MAAMyI,kBAAoB,4CAChC9I,KAAKK,MAAMyI,kBAAoB,yBAAK7H,UAAU,iBAC5C,0BAAMA,UAAU,sBAAhB,mBAAuDjB,KAAKgJ,iBAAiBC,OAA7E,KACA,kBAACqB,EAAA,EAAD,CAAYvF,aAAW,SACnBvC,QAASxC,KAAKoJ,wBAEd,kBAACmB,EAAA,EAAD,SAIZ,yBAAKtJ,UAAU,sBAAsBuJ,SAAWxK,KAAK6F,kBACjD,yBAAK5E,UAAU,eAAewJ,IAAMzK,KAAKwF,aACrC4E,cAAgBpK,KAAKoH,gBACrB5E,UAAUxC,KAAKK,MAAMyI,kBAAmB9I,KAAK6I,cAC7C6B,OAAS1K,KAAKsF,aAEbtF,KAAK2K,cAEV,kBAACL,EAAA,EAAD,CAAYM,UAAY5K,KAAKkG,UACzBjF,UAAU,gCACVuB,QAAUxC,KAAKsF,aAEf,kBAACuF,EAAA,EAAD,OAGJ,kBAACC,EAAA,EAAD,CACI/I,GAAG,cACHwF,SAAWvH,KAAKK,MAAMkH,SACtBwD,aAAW,EACX1J,KAAOrB,KAAKK,MAAMkH,WAAavH,KAAKK,MAAMyI,iBAC1CvH,QAAUvB,KAAK0H,uBACflG,aAAe,CAAEC,SAAU,SAAUC,WAAY,UAEjD,kBAACsJ,EAAA,EAAD,CAAUxI,QAAUxC,KAAKsI,UAAzB,eACEtI,KAAKK,MAAMmH,aAAc,kBAACwD,EAAA,EAAD,CAAUxI,QAAUxC,KAAKgI,aAAzB,kBACzBhI,KAAKK,MAAMmH,aAAc,kBAACwD,EAAA,EAAD,CAAUxI,QAAUxC,KAAKoI,yBAAzB,kBAC3B,kBAAC4C,EAAA,EAAD,CAAUxI,QAAUxC,KAAK6I,eAAzB,mBAGJ,kBAACoC,EAAA,EAAD,CACI5J,KAAOrB,KAAKK,MAAMuH,aAClBrG,QAAUvB,KAAK2H,kBACfuD,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAarJ,GAAG,sBAAhB,4CACA,kBAACsJ,EAAA,EAAD,KACA,kBAAC/I,EAAA,EAAD,CAAQE,QAAUxC,KAAKqI,cAAgBiD,MAAM,WAA7C,eAGA,kBAAChJ,EAAA,EAAD,CAAQE,QAAUxC,KAAK2H,kBAAoB2D,MAAM,UAAUC,WAAS,GAApE,SAMR,yBAAKtK,UAAU,aACX,kBAACY,EAAA,EAAD,CACIE,GAAG,sBACHyJ,YAAY,qBACZC,OAAO,SACPhJ,QAAQ,WACRiJ,gBAAiB,CACbzM,QAAQ,GAEZiD,SAAUlC,KAAK4G,UACf+E,UAAY3L,KAAK6H,cACjB1F,SAAUnC,KAAK+H,cAEM,KAAvB/H,KAAKK,MAAM6G,SAAiB,kBAACoD,EAAA,EAAD,CAAYvF,aAAW,OACjD9D,UAAU,UACVuB,QAASxC,KAAK0G,iBAEd,kBAACkF,EAAA,EAAD,c,GA1VLhJ,aCwERiJ,E,kDAvEb,WAAYpN,GAAQ,IAAD,8BACjB,cAAMA,IAMRqN,WAAa,kBLeR,WAAP,+BKfqBC,IAPA,EASnBxH,YATmB,uCASL,WAAOlE,GAAP,eAAAtD,EAAA,uDACJgE,EAAWV,EAAXU,SAGN,EAAK3B,SAAS,CAAE2B,OAAQA,IACxBlD,OAAOC,aAAaE,QAAQ,SAAU+C,IAH3B,EAAKiL,SAFN,2CATK,wDAkBnBA,OAAS,WACPnO,OAAOC,aAAaC,WAAW,YAC/BF,OAAOC,aAAaC,WAAW,aAC/BF,OAAOC,aAAaC,WAAW,SAC/BF,OAAOC,aAAaC,WAAW,gBAE/BF,OAAOC,aAAaE,QAAQ,UAAU,GAEtC,EAAKoB,SAAS,CAAE2B,QAAQ,KA1BP,EA6BnBkL,kBAAoB,WAClB,EAAK7M,SAAS,CAAE2B,OAAQlD,OAAOC,aAAaO,QAAQ,YAAa,KA5BjE,EAAKgC,MAAQ,CACXU,QAAQ,GAHO,E,qDAiCT,IAAD,OAEP,OACI,yBAAKE,UAAU,OACb,kBAAC2D,EAAA,EAAD,CAAQT,SAAS,UACf,kBAAC+H,EAAA,EAAD,MACwB,SAAtBlM,KAAKK,MAAMU,SAA2C,IAAtBf,KAAKK,MAAMU,SAAkB,kBAACuB,EAAA,EAAD,CAC3DrB,UAAU,gBACVwB,QAAQ,YACRD,QAASxC,KAAK8L,YAH6C,yBAOrC,SAAtB9L,KAAKK,MAAMU,SAA2C,IAAtBf,KAAKK,MAAMU,SAAkB,kBAACuB,EAAA,EAAD,CAAQrB,UAAU,YAAYqK,MAAM,UAAU9I,QAAUxC,KAAKgM,QAA7D,aAGnE,kBAAC,IAAD,KACwB,SAAtBhM,KAAKK,MAAMU,SAA2C,IAAtBf,KAAKK,MAAMU,OAAkB,kBAAC,IAAD,CAAUoL,GAAG,UAAa,kBAAC,IAAD,CAAUA,GAAG,YACpG,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UAAUC,UAAW,kBAAM,kBAAC,EAAD,CAAUvL,YAAe,EAAKyD,iBACrE,kBAAC,IAAD,CAAO6H,KAAK,QAAQC,UAAW,WAC7B,MAA6B,SAAtB,EAAKhM,MAAMU,SAA2C,IAAtB,EAAKV,MAAMU,OAChD,kBAAC,EAAD,CAAUD,YAAc,EAAKyD,cAC3B,kBAAC,EAAD,CAAUzD,YAAc,EAAKyD,iBAEnC,kBAAC,IAAD,CAAO8H,UAAW,WAChB,MAA6B,SAAtB,EAAKhM,MAAMU,SAA2C,IAAtB,EAAKV,MAAMU,OAChD,kBAAC,EAAD,CAAUD,YAAc,EAAKyD,cAC3B,kBAAC,EAAD,CAAUzD,YAAa,EAAKyD,wB,GA9D9B3B,aCEE0J,QACW,cAA7BzO,OAAO0O,SAASC,UAEe,UAA7B3O,OAAO0O,SAASC,UAEhB3O,OAAO0O,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBpE,WACrBA,UAAUqE,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtJ,GACLxF,QAAQwF,MAAMA,EAAMoD,c","file":"static/js/main.137a17ad.chunk.js","sourcesContent":["export async function callApi (route, email, password, name = '') {\n  let isLogin = (route === 'login');\n\n  try {\n    const response = await fetch(`/api/user/${route}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n          user: {\n            name,\n            email,\n            password,\n          }\n      }),});\n    const resultObj = await response.json();\n    if(response.status === 401) {\n      window.localStorage.removeItem('userName');\n      window.localStorage.removeItem('userEmail');\n      window.localStorage.removeItem('token');\n      window.localStorage.removeItem('refreshToken');\n      return false;\n    }\n    window.localStorage.setItem('userName', resultObj.user);\n    window.localStorage.setItem('userEmail', resultObj.email);\n    window.localStorage.setItem('token', resultObj.token);\n    window.localStorage.setItem('refreshToken', resultObj.refreshToken);\n    return true;\n\n  } catch(err) {\n    isLogin ? alert('Incorrect login or password') : alert('This email is already in use!');\n  }\n}\n\nexport async function callApiCheckToken () {\n  try {\n    const response = await fetch(`/api/user/check`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user: {\n          accessToken: window.localStorage.getItem('token'),\n          name: window.localStorage.getItem('userName'),\n          email: window.localStorage.getItem('userEmail'),\n          refreshToken: window.localStorage.getItem('refreshToken'),\n        }\n    }),});\n    const resultObj = await response.json();\n    if(response.status !== 401) {\n      window.localStorage.setItem('token', resultObj.accessToken);\n    }\n\n  } catch(err) {\n    console.log('acces token died');\n  }\n\n}\n  \n","import React, { Component } from 'react';\nimport { TextField, Snackbar } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Alert } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { callApi } from '../../services/apiService';\n\n\nclass LogInPage extends Component {\n    constructor(props) {\n      super(props);\n\n      this.passwordInput = '';\n      this.emailInput = '';\n      \n      this.state = {\n        isPasswordEmpty: null,\n        isEmailEmpty: null,\n        isDisabled: true,\n        isLoggedIn: null,\n        isSpinning: false,\n      }\n      this.logIn = this.logIn.bind(this);\n      this.emailRef = React.createRef();\n      this.passwordRef = React.createRef();\n    }\n  \n    async logIn() {\n      this.setState({ isSpinning: true});\n      const isSuccessful = await callApi('login', this.emailInput, this.passwordInput);\n      setTimeout(() => {\n        this.setState({ isLoggedIn: isSuccessful, isSpinning: false });\n      }, 500);\n      setTimeout(() => {\n        this.props.updateState({ isAuth: isSuccessful });\n      }, 2500)\n    }\n\n    componentDidMount() {\n      if (this.emailRef.current.value && this.passwordRef.current.value) {\n        this.setState({ isEmailEmpty: false, isPasswordEmpty: false });\n        this.checkSubmitDisable();\n      }\n      window.addEventListener('load', this.detectAutofill);\n    }\n\n    detectAutofill = () => {\n      try {\n        const isEmailAutofilled = JSON.parse(this.emailRef.current.labels[0].dataset.shrink);\n        const isPasswordAutofilled = JSON.parse(this.passwordRef.current.labels[0].dataset.shrink);\n        if (isEmailAutofilled && isPasswordAutofilled) {\n          this.setState({ isDisabled: false, isEmailEmpty: false, isPasswordEmpty: false });\n        }\n      } catch(err) { }\n    }\n\n    passwordCheck = (event) => {\n      const regexp = /^(?!\\s*$).+/;\n      this.passwordInput = event.target.value;\n      const isEmpty = !regexp.test(event.target.value);\n      this.setState({ isPasswordEmpty: isEmpty }, function() {\n        this.checkSubmitDisable();\n      })\n    }\n\n    emailCheck = (event) => {\n      const regexp = /^(?!\\s*$).+/;\n      this.emailInput = event.target.value;\n      const isEmpty = !regexp.test(event.target.value);\n      this.setState({ isEmailEmpty: isEmpty }, function() {\n        this.checkSubmitDisable();\n      })\n    }\n\n    checkSubmitDisable = () => {\n      const isCorrect = ( this.state.isPasswordEmpty === false &&\n        this.state.isEmailEmpty === false ) ? true : false;\n      this.setState({ isDisabled: !isCorrect});\n    }\n  \n    render() {\n  \n      return (\n        <form className='login-form' noValidate autoComplete='on'>\n          <Snackbar open={this.state.isLoggedIn}\n            autoHideDuration={3000}\n            onClose={() => this.setState({ isLoggedIn: null })}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          >\n            <Alert severity=\"success\">\n              You are logged in!\n            </Alert>\n          </Snackbar>\n\n          <Snackbar open={this.state.isLoggedIn === false} \n            autoHideDuration={3000}\n            onClose={() => this.setState({ isLoggedIn: null })}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          >\n            <Alert severity=\"error\">\n              Incorrect login or password!\n            </Alert>\n          </Snackbar>\n\n          <TextField required\n            id='email' \n            label='Email'\n            type='email'\n            inputRef={this.emailRef}\n            onChange={this.emailCheck}\n          />\n          <TextField required\n            id='password'\n            label='Password'\n            type='password'\n            autoComplete='current-password'\n            inputRef={this.passwordRef}\n            onChange={this.passwordCheck}\n          />\n          <Box m={2}>\n            <Button\n              disabled={this.state.isDisabled}\n              onClick={this.logIn}\n              className='logInBtn' \n              variant='outlined'\n\n            >\n              { this.state.isSpinning && <CircularProgress size={17} /> }\n              { !this.state.isSpinning && <span>Log In</span> }\n            </Button>\n          </Box>\n        </form>\n      );\n    }\n}\n  \nexport default LogInPage;\n","import React, { Component } from 'react';\nimport { TextField, Snackbar, InputAdornment, Tooltip } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Alert } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nimport { callApi } from '../../services/apiService';\n\n\nclass SignUpPage extends Component {\n    constructor(props) {\n      super(props);\n\n      this.regexpFirst = /^(?!\\s*$).+/;\n      this.nameInput = '';\n      this.passwordInput = '';\n      this.emailInput = '';\n      this.confirmPasswordInput = '';\n\n      this.state = {\n        isNotCorrectName: null,\n        isNotCorrectEmail: null,\n        isNotCorrectPassword: null,\n        isNotCorrectConfirmPassword: null,\n        isDisabled: true,\n        isSignedUp: null,\n        isSpinning: false,\n        isFirstTime: true,\n      }\n      this.signUp = this.signUp.bind(this);\n    }\n  \n    async signUp() {\n      this.nameValidate();\n      this.emailValidate();\n\n      this.passwordValidate();\n      this.confirmPasswordValidate();\n      const isCorrect = this.checkSubmitDisable();\n\n      if(isCorrect) {\n        this.setState({ isSpinning: true, isFirstTime: true, });\n        const isSuccessful = await callApi('signup', this.emailInput, this.passwordInput, this.nameInput);\n\n        setTimeout(() => {\n          this.setState({ isSignedUp: isSuccessful, isSpinning: false });\n\n        }, 500);\n        setTimeout(() => {\n          this.props.updateState({ isAuth: isSuccessful });\n  \n        }, 2500)\n  \n      } else {\n        this.setState({ isFirstTime: false, });\n      }\n    }\n\n    nameCheck = (event) => {\n      this.nameInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectName: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.nameValidate();\n    }\n    emailCheck = (event) => {\n      this.emailInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectEmail: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.emailValidate();\n    }\n    passwordCheck = (event) => {\n      this.passwordInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectPassword: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.passwordValidate();\n    }\n    confirmPasswordCheck = (event) => {\n      this.confirmPasswordInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectConfirmPassword: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.confirmPasswordValidate();\n    }\n\n\n    nameValidate = () => {\n      const regexp = /^[a-zA-Z]+$/;\n      const isCorrect = regexp.test(this.nameInput);\n\n      this.setState({ isNotCorrectName: !isCorrect }, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    emailValidate = () => {\n      const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const isCorrect = regexp.test(this.emailInput);\n      \n      this.setState({ isNotCorrectEmail: !isCorrect }, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    passwordValidate = () => {\n      const regexp = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n      const isCorrect = regexp.test(this.passwordInput);\n\n      this.setState({ isNotCorrectPassword: !isCorrect}, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    confirmPasswordValidate = (event) => {\n      const isCorrect = this.confirmPasswordInput === this.passwordInput;\n      this.setState({ isNotCorrectConfirmPassword: !isCorrect }, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    checkSubmitDisable = () => {\n      const isCorrect = ( this.state.isNotCorrectName === false &&\n        this.state.isNotCorrectEmail === false &&\n        this.state.isNotCorrectPassword === false &&\n        this.state.isNotCorrectConfirmPassword === false) ? true : false;\n      this.setState({ isDisabled: !isCorrect});\n      return isCorrect;\n    }\n    \n    render() {\n  \n      return (\n        <form className='signup-form' noValidate autoComplete='on'>\n\n          <Snackbar open={this.state.isSignedUp}\n            autoHideDuration={3000}\n            onClose={() => this.setState({ isSignedUp: null })}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n            <Alert severity=\"success\">\n              You are signed up!\n            </Alert>\n          </Snackbar>\n\n          <Snackbar open={this.state.isSignedUp === false}\n            autoHideDuration={3000}\n            onClose={() => this.setState({ isSignedUp: null })}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n            <Alert severity=\"error\">\n              This email is already in use!\n            </Alert>\n          </Snackbar>\n          <TextField required\n            error={this.state.isNotCorrectName && !this.state.isFirstTime}\n            id='name' \n            label='Name'\n            onChange={this.nameCheck}\n            helperText={ this.state.isNotCorrectName && !this.state.isFirstTime ? 'Use only alphabet characters' : false }\n          />\n          <TextField required\n            error={this.state.isNotCorrectEmail && !this.state.isFirstTime }\n            id='email' \n            label='Email'\n            type='email'\n            onChange={this.emailCheck}\n            helperText={ this.state.isNotCorrectEmail && !this.state.isFirstTime ? 'Incorrect email' : false }\n          />\n          <TextField required\n            error={this.state.isNotCorrectPassword && !this.state.isFirstTime}\n            id='password'\n            label='Password'\n            type='password'\n            autoComplete='current-password'\n            InputProps={{ \n              endAdornment: <InputAdornment position=\"end\">\n                              <Tooltip title='Password must contain minimum 8 characters, at least 1 letter and 1 number'><HelpOutlineIcon/></Tooltip>\n                            </InputAdornment>\n                        }}\n            onChange={this.passwordCheck}\n            helperText={ this.state.isNotCorrectPassword && !this.state.isFirstTime ? 'Password must contain minimum 8 characters, at least 1 letter and 1 number' : false }\n          />\n          <TextField required\n            error={this.state.isNotCorrectConfirmPassword && !this.state.isFirstTime}\n            id='standard-password'\n            label='Confirm password'\n            type='password'\n            InputProps={{ \n              endAdornment: <InputAdornment position=\"end\">\n                              <Tooltip title='Password and confirm password must match'><HelpOutlineIcon/></Tooltip>\n                            </InputAdornment>\n                        }}\n            onChange={this.confirmPasswordCheck}\n            helperText={ this.state.isNotCorrectConfirmPassword && !this.state.isFirstTime ? `Password and confirm password don't match!` : false }\n          />\n          <Box m={2}>\n            <Button\n              disabled={this.state.isDisabled}\n              onClick={this.signUp}\n              className='signUpBtn'\n              variant='outlined'\n              id='signUpButton'\n            >\n              { this.state.isSpinning && <CircularProgress size={17} /> }\n              { !this.state.isSpinning && <span>Sign Up</span> }\n            </Button>\n          </Box>\n        </form>\n      );\n    }\n}\n  \nexport default SignUpPage;\n","import React, { Component } from 'react';\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport { Tab, AppBar } from '@material-ui/core';\n\nimport LogInPage from '../../components/loginPage/loginPage';\nimport SignUpPage from '../../components/signupPage/signupPage';\n\n\nclass AuthPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          value: localStorage.getItem('page') === '2' ? localStorage.getItem('page') : '1',\n          isAuthenticated: false,\n        }\n    }\n\n    handleChange(event, newValue) {\n        this.setState({value: newValue});\n        window.localStorage.setItem('page', newValue);\n    }\n\n    setAppState = async (state) => {\n        const { isAuth } = state;\n        this.setState({ isAuthenticated: isAuth });\n        this.props.updateState({ isAuth: isAuth });\n    }\n    \n    render() {\n  \n        return (\n            <div className='tabWrapper'>\n                <TabContext style='backgroundColor: #cbecec' value={this.state.value}>\n                <AppBar position='static'>\n                    <TabList onChange={this.handleChange.bind(this)} aria-label='simple tabs example'>\n                    <Tab label='Sign Up' value='1' />\n                    <Tab label='Log In' value='2' />\n                    </TabList>\n                </AppBar>\n                <TabPanel value='1'>\n                    <SignUpPage updateState = {this.setAppState} />\n                </TabPanel>\n                <TabPanel value='2'>\n                    <LogInPage updateState = {this.setAppState} />\n                </TabPanel>\n                </TabContext>\n          </div>\n\n        );\n    }\n}\n\nexport default AuthPage;\n","import React, { Component } from 'react';\nimport './chatPage.css';\nimport { TextField, Button, IconButton, Menu, MenuItem, Dialog, DialogTitle, DialogActions } from '@material-ui/core';\nimport { Send, Close, Person, ArrowDownward } from '@material-ui/icons';\nimport io from 'socket.io-client';\n\nconst socket = io.connect('http://localhost:3000');\n\n\n\nclass ChatPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            chat: [],\n            isSend: null,\n            anchorEl: null,\n            editElement: null,\n            isDialogOpen: false,\n            isScrolledToTop: false,\n            isSelectionState: false,\n        }\n        this.isMyMessage = null;\n        this.selectedElements = [];\n        this.chatInput = React.createRef();\n        this.messagesArea = React.createRef();\n        this.scrollBtn = React.createRef();\n        this.userEmail = '';\n        this.chatHeight = 0;\n    }\n\n    componentDidMount() {\n        socket.on('chat message', ({ message, name, email }) => {\n            const messageid = (+this.state.chat[this.state.chat.length - 1].messageid + 1) + '';\n            this.setState({\n                chat: [...this.state.chat, { message, name, email, messageid }]\n            }, () => { this.scrollToRef(); });\n\n        });\n        socket.on('get database', (database) => {\n            let sortedResult = database.sort(function(a, b) { \n                if (+a.messageid > +b.messageid) { \n                  return 1; } \n                if (+a.messageid < +b.messageid) { \n                  return -1; } \n                return 0; \n            });\n            this.setState({\n                chat: sortedResult\n            }, () => { this.scrollToRef(); });\n\n        });\n        socket.on('edit message', ({ message, messageid, is_edited }) => {\n            const arr = this.messagesArea.current.childNodes;\n            let i = 0;\n            while (arr[i].dataset.id !== messageid) i++;\n\n            if (arr[i].dataset.id === messageid) {\n                arr[i].childNodes[0].childNodes[1].innerText = message;\n                arr[i].childNodes[0].childNodes[2].className = 'userEdited noselect';\n            }\n        });\n        socket.on('delete message', (messageid) => {\n            const filteredArray = this.state.chat.filter(function(item, index, arr) {\n                if (item.messageid !== messageid) return true;\n                return false;\n            });\n            this.setState({ chat: filteredArray, editElement: null });\n        });\n\n        socket.emit('get database');\n\n        this.userEmail = localStorage.getItem('userEmail');\n        window.addEventListener('storage', this.checkUser);\n    }\n\n\n    scrollToRef = () => {\n        const height = this.messagesArea.current.getBoundingClientRect().height;\n        this.messagesArea.current.parentElement.scrollTo(0, height);\n        this.chatHeight = height;\n    }\n\n    scrollWithButton = () => {\n        const scrollHeight = this.messagesArea.current.parentElement.scrollTop;\n        const clientHeight = this.messagesArea.current.parentElement.clientHeight;\n\n        if (this.chatHeight - scrollHeight >= 1000) {\n            const newClassNames = this.scrollBtn.current.className.split(' ').filter((item, index, arr) => item !== 'scrollBtn-hidden').join(' ');\n            this.scrollBtn.current.className = newClassNames;\n        } else {\n\n            if(!this.scrollBtn.current.className.split(' ').includes('scrollBtn-hidden')) {\n                this.scrollBtn.current.className = this.scrollBtn.current.className + ' scrollBtn-hidden';\n            }\n        }\n    }\n\n    onMessageSubmit = () => {\n        this.setState({ isSend: true });\n        if (this.chatInput.current.value !== '') {\n            if (this.state.editElement !== null) {\n                if (this.chatInput.current.value !== this.state.editElement.childNodes[1].innerText) {\n                    const id = this.state.editElement.parentElement.dataset.id;\n                    const editedMessage = this.chatInput.current.value;\n                    socket.emit('edit message', editedMessage, id);\n                }\n\n            } else socket.emit('chat message', this.chatInput.current.value, window.localStorage.getItem('userName'), window.localStorage.getItem('userEmail'));\n        }\n        this.setState({ message: '', editElement: null });\n        this.chatInput.current.value = '';\n    };\n\n    checkUser = () => {\n        this.props.updateState({ isAuth: false });\n    }\n\n    showContextMenu = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.target.className.split(' ').includes('message')) {\n            this.setState({ anchorEl: event.target }, function() {\n                if (this.state.anchorEl.className.split(' ').includes('myMessage')) {\n                    this.setState({ isMyMessage: true });\n                } else this.setState({ isMyMessage: false });\n    \n            });\n\n        }\n        if (event.target.parentElement.className.split(' ').includes('message')) {\n            this.setState({ anchorEl: event.target.parentElement }, function() {\n                if (this.state.anchorEl.className.split(' ').includes('myMessage')) {\n                    this.setState({ isMyMessage: true });\n                } else this.setState({ isMyMessage: false });\n    \n            });\n        }\n        \n    }\n    preventShowContextMenu = (event) => {\n        event.preventDefault();\n        return false;\n    }\n\n    handleContextMenuClose = () => {\n        this.setState({ anchorEl: null });\n    }\n\n    handleDialogClose = () => {\n        this.setState({ isDialogOpen: false, editElement: null });\n    }\n\n    handleKeyDown = (event) => {\n        if (event.key === 'Enter') this.onMessageSubmit();\n    }\n\n    changeInput = (event) => {\n        this.setState({ message: event.target.value });\n    }\n\n    renderChat() {\n        const { chat } = this.state;\n        return chat.map(({ message, name, email, messageid, is_edited }, idx) => (\n            <div data-id={ messageid } className={ email === window.localStorage.getItem('userEmail') ?\n                'messageWrapper messageWrapper-myMessage' \n                : 'messageWrapper messageWrapper-otherMessage' }\n            >\n                <div className= { email === window.localStorage.getItem('userEmail') ?\n                    'myMessage message' \n                    : 'otherMessage message' }\n                >\n                    <span className='userName noselect' >{ name }</span>\n                    <span className='userEmail' onContextMenu={ this.preventShowContextMenu } >{ message }</span>\n\n                    <span className= { is_edited ? 'userEdited noselect' : 'userNotEdited noselect' }>Edited</span>\n                    {/* <span className='sendTime'>{sendDate}</span> */}\n                </div>\n                <div className='messageAvatar'>\n                    <Person />\n                </div>\n            </div>\n        ));\n    };\n\n\n    editMessage = () => {\n        const elem = this.state.anchorEl;\n        this.handleContextMenuClose();\n        const previousData = elem.innerText;\n\n        setTimeout(() => {\n            this.chatInput.current.focus();\n        }, 0);\n        this.chatInput.current.value = previousData;\n        this.setState({ editElement: elem, message: previousData });\n\n    }\n\n    showDeleteMessageDialog = () => {\n        const elem = this.state.anchorEl.parentElement;\n        this.handleContextMenuClose();\n\n        this.setState({ isDialogOpen: true, editElement: elem });\n    }\n\n    deleteMessage = () => {\n        this.handleDialogClose();\n        socket.emit('delete message', this.state.editElement.dataset.id);\n    }\n\n    copyText = () => {\n        let text;\n        if (window.getSelection().toString() === '') text = this.state.anchorEl.childNodes[1].innerText;\n        else text = window.getSelection().toString();\n        navigator.clipboard.writeText(text);\n        this.handleContextMenuClose();\n    }\n\n    selectMessage = async (event) => {\n\n        if (!this.state.isSelectionState) {\n            this.setState({ isSelectionState: true });\n            this.state.anchorEl.className = this.state.anchorEl.className + ' selectedMessage';\n\n            this.selectedElements.push(this.state.anchorEl.parentElement);\n            this.handleContextMenuClose();\n\n        } else {\n            if (event.target.className.split(' ').includes('message')) {\n\n                const elem = event.target;\n\n                this.isSelectedMessage(elem);\n            }\n            if (event.target.parentElement.className.split(' ').includes('message')) {\n\n                const elem = event.target.parentElement;\n\n                this.isSelectedMessage(elem);\n            }\n            if (this.selectedElements.length === 0) this.setState({ isSelectionState: false });\n            else this.setState({ isSelectionState: true });\n\n        }\n    }\n\n    isSelectedMessage = (elem) => {\n        if (elem.className.split(' ').includes('selectedMessage')) {\n            elem.className = elem.className.split(' ').filter(function(item, index, arr) {\n                return item !== 'selectedMessage';\n            }).join(' ');\n\n            const filteredArray = this.selectedElements.filter(function(item, index, arr) {\n                return item.dataset.id !== elem.parentElement.dataset.id;\n            });\n\n            this.selectedElements = filteredArray;\n\n        } else {\n            elem.className = elem.className + ' selectedMessage';\n\n            this.selectedElements.push(elem.parentElement);\n        }\n    }\n\n    deleteSelectedMessages = () => {\n        const newArray = this.selectedElements.map(function(item, index, arr) {\n            item.childNodes[0].className = item.childNodes[0].className.split(' ').filter(function(name, i, array) {\n                return name !== 'selectedMessage';\n            }).join(' ');\n        });\n        this.selectedElements = [];\n        this.setState({ isSelectionState: false });\n    }\n\n    render() {\n        return (\n            <div className='chatWrapper'>\n                <div className='chat'>\n                    <div className='chatHeader'>\n                        { !this.state.isSelectionState && <span>Group Chat</span> }\n                        { this.state.isSelectionState && <div className='selectionArea'>\n                            <span className='selectedElemsCount'>Selected items: { this.selectedElements.length } </span>\n                            <IconButton aria-label='delete' \n                                onClick={this.deleteSelectedMessages}\n                            >\n                                <Close />\n                            </IconButton>\n                        </div> }\n                    </div>\n                    <div className='messagesAreaWrapper' onScroll={ this.scrollWithButton } >\n                        <div className='messagesArea' ref={ this.messagesArea } \n                            onContextMenu={ this.showContextMenu }\n                            onClick={ this.state.isSelectionState ? this.selectMessage : false }\n                            onLoad={ this.scrollToRef }\n                        >\n                            {this.renderChat()}\n                        </div>\n                        <IconButton buttonRef={ this.scrollBtn }\n                            className='scrollButton scrollBtn-hidden'\n                            onClick={ this.scrollToRef }\n                        >\n                            <ArrowDownward />\n                        </IconButton>\n\n                        <Menu\n                            id=\"simple-menu\"\n                            anchorEl={ this.state.anchorEl }\n                            keepMounted\n                            open={ this.state.anchorEl && !this.state.isSelectionState }\n                            onClose={ this.handleContextMenuClose }\n                            anchorOrigin={ { vertical: 'bottom', horizontal: 'right' } }\n                        >\n                            <MenuItem onClick={ this.copyText } >Copy Text</MenuItem>\n                            { this.state.isMyMessage ? <MenuItem onClick={ this.editMessage } >Edit Message</MenuItem> : false }\n                            { this.state.isMyMessage ? <MenuItem onClick={ this.showDeleteMessageDialog } >Delete Message</MenuItem> : false }\n                            <MenuItem onClick={ this.selectMessage } >Select Message</MenuItem>\n                        </Menu>\n\n                        <Dialog\n                            open={ this.state.isDialogOpen }\n                            onClose={ this.handleDialogClose }\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-title\">Are you sure you want to delete message?</DialogTitle>\n                            <DialogActions>\n                            <Button onClick={ this.deleteMessage } color=\"primary\">\n                                Yes, delete\n                            </Button>\n                            <Button onClick={ this.handleDialogClose } color=\"primary\" autoFocus>\n                                No\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                    <div className='inputArea'>\n                        <TextField\n                            id='standard-full-width'\n                            placeholder='Write a message...'\n                            margin='normal'\n                            variant='outlined'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputRef={this.chatInput}\n                            onKeyDown={ this.handleKeyDown }\n                            onChange={this.changeInput}\n                        />\n                        { this.state.message !== '' ? <IconButton aria-label='send'\n                            className='sendBtn'\n                            onClick={this.onMessageSubmit}\n                        >\n                            <Send />\n                        </IconButton> : false }\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ChatPage;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { AppBar, Button, Toolbar } from '@material-ui/core';\nimport AuthPage from './components/authPage/authPage';\nimport ChatPage from './components/chatPage/chatPage';\nimport { callApiCheckToken } from './services/apiService';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuth: false,\n    }\n  }\n\n  checkToken = () => callApiCheckToken();\n\n  setAppState = async (state) => {\n    const { isAuth } = state;\n    if (!isAuth) this.logOut();\n    else {\n      this.setState({ isAuth: isAuth });\n      window.localStorage.setItem('isAuth', isAuth);\n    }\n  }\n\n  logOut = () => {\n    window.localStorage.removeItem('userName');\n    window.localStorage.removeItem('userEmail');\n    window.localStorage.removeItem('token');\n    window.localStorage.removeItem('refreshToken');\n    \n    window.localStorage.setItem('isAuth', false);\n\n    this.setState({ isAuth: false });\n  }\n\n  componentDidMount = () => {\n    this.setState({ isAuth: window.localStorage.getItem('isAuth') || false });\n  }\n\n  render() {\n\n    return (\n        <div className='App'>\n          <AppBar position=\"static\">\n            <Toolbar>\n            { this.state.isAuth === 'true' || this.state.isAuth === true ? <Button\n                className='checkTokenBtn' \n                variant='contained'\n                onClick={this.checkToken}\n              >\n                Refresh Access Token\n              </Button> : false }\n              { this.state.isAuth === 'true' || this.state.isAuth === true ? <Button className='logOutBtn' color='inherit' onClick={ this.logOut }>Log out</Button> : false }\n            </Toolbar>\n          </AppBar>\n          <BrowserRouter>\n          { this.state.isAuth === 'true' || this.state.isAuth === true ? <Redirect to='/chat' /> : <Redirect to='/signup' /> }\n            <Switch>\n              <Route path='/signup' component={() => <AuthPage updateState = {this.setAppState} />} />\n              <Route path='/chat' component={() => {\n                return this.state.isAuth === 'true' || this.state.isAuth === true ?\n                  <ChatPage updateState={ this.setAppState } /> \n                  : <AuthPage updateState={ this.setAppState } />;\n                }} />\n              <Route component={() => {\n                return this.state.isAuth === 'true' || this.state.isAuth === true ?\n                  <ChatPage updateState={ this.setAppState } /> \n                  : <AuthPage updateState={this.setAppState} />;\n              }} />\n\n            </Switch>\n          </BrowserRouter>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}