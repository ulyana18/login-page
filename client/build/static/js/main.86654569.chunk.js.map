{"version":3,"sources":["services/apiService.js","components/loginPage/loginPage.js","components/signupPage/signupPage.js","components/authPage/authPage.js","components/chatPage/chatPage.js","App.js","serviceWorker.js","index.js"],"names":["callApi","route","email","password","a","name","isLogin","fetch","method","headers","body","JSON","stringify","user","response","json","resultObj","status","window","localStorage","removeItem","setItem","token","refreshToken","alert","accessToken","getItem","console","log","LogInPage","props","logIn","setState","isSpinning","emailInput","passwordInput","isSuccessful","setTimeout","isLoggedIn","updateState","isAuth","detectAutofill","isEmailAutofilled","parse","emailRef","current","labels","dataset","shrink","isPasswordAutofilled","passwordRef","isDisabled","isEmailEmpty","isPasswordEmpty","err","passwordCheck","event","target","value","isEmpty","test","checkSubmitDisable","emailCheck","isCorrect","state","React","createRef","this","addEventListener","classes","className","noValidate","autoComplete","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","TextField","required","id","label","type","inputRef","onChange","Box","m","Button","disabled","onClick","logInButton","variant","CircularProgress","size","Component","withStyles","theme","backgroundColor","transition","marginTop","color","SignUpPage","signUp","nameValidate","emailValidate","passwordValidate","confirmPasswordValidate","isFirstTime","nameInput","isSignedUp","isNotCorrectName","isNotCorrectEmail","isNotCorrectPassword","confirmPasswordInput","isNotCorrectConfirmPassword","nameCheck","regexpFirst","confirmPasswordCheck","error","form","helperText","InputProps","endAdornment","InputAdornment","position","Tooltip","title","signUpButton","AuthPage","componentDidMount","tabPage","handleChange","newValue","setAppState","TabContext","tabContext","AppBar","TabList","aria-label","Tab","TabPanel","borderRadius","socket","io","connect","ChatPage","on","message","messageChat","chat","messageid","length","scrollToRef","database","sortedResult","sort","b","elem","Object","entries","messagesArea","childNodes","find","item","undefined","messageData","innerText","filteredArray","filter","editElement","emit","userEmail","height","getBoundingClientRect","parentElement","scrollTo","chatHeight","scrollWithButton","scrollHeight","scrollTop","buttonClassName","scrollBtn","newClassNames","replace","split","includes","onSearchButton","isSearchState","searchMessage","searchValue","clearFoundMessages","map","foundMessages","push","messageYCoord","offsetTop","currentFoundMessage","currentFoundMessageIndex","changeCurrentFoundMessage","direction","currentMessage","i","onCloseSearchButton","onMessageSubmit","isSend","inputValue","chatInput","editedMessage","showContextMenu","preventDefault","stopPropagation","isSelectionState","anchorEl","isMyMessage","preventShowContextMenu","handleContextMenuClose","handleDialogClose","isDialogOpen","handleKeyDown","key","changeInput","editMessage","previousData","focus","showDeleteMessageDialog","deleteMessage","copyText","text","getSelection","toString","navigator","clipboard","writeText","selectMessage","isSelectedMessage","noSelectedElems","selectedElements","deleteSelectedMessages","childNode","isScrolledToTop","idx","is_edited","data-id","onContextMenu","Person","IconButton","Search","arrowSearchButton","ArrowUpward","arrowSearchIcon","ArrowDownward","autoFocus","Close","onScroll","ref","onLoad","renderChat","buttonRef","scrollButton","Menu","keepMounted","MenuItem","Dialog","dialog","aria-labelledby","aria-describedby","DialogTitle","DialogActions","messageInput","placeholder","margin","InputLabelProps","onKeyDown","sendButton","Send","padding","width","fontSize","right","bottom","zIndex","visibility","marginRight","App","checkToken","callApiCheckToken","logOut","clearLocalStorage","checkUser","Toolbar","headerButton","to","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"8eAAO,SAAeA,EAAtB,sC,4CAAO,WAAwBC,EAAOC,EAAOC,GAAtC,iCAAAC,EAAA,6DAAgDC,EAAhD,+BAAuD,GACxDC,EAAqB,UAAVL,EADV,kBAIoBM,MAAM,aAAD,OAAcN,GAAS,CACjDO,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBC,KAAM,CACJR,OACAH,QACAC,gBAXL,cAIGW,EAJH,gBAcqBA,EAASC,OAd9B,UAcGC,EAdH,OAeoB,MAApBF,EAASG,OAfT,wBAgBDC,OAAOC,aAAaC,WAAW,YAC/BF,OAAOC,aAAaC,WAAW,aAC/BF,OAAOC,aAAaC,WAAW,SAC/BF,OAAOC,aAAaC,WAAW,gBAnB9B,mBAoBM,GApBN,eAsBHF,OAAOC,aAAaE,QAAQ,WAAYL,EAAUH,MAClDK,OAAOC,aAAaE,QAAQ,YAAaL,EAAUd,OACnDgB,OAAOC,aAAaE,QAAQ,QAASL,EAAUM,OAC/CJ,OAAOC,aAAaE,QAAQ,eAAgBL,EAAUO,cAzBnD,mBA0BI,GA1BJ,kCA6BHjB,EAAUkB,MAAM,+BAAiCA,MAAM,iCA7BpD,2D,kEAiCA,8BAAApB,EAAA,+EAEoBG,MAAM,kBAAmB,CAC9CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,KAAM,CACJY,YAAaP,OAAOC,aAAaO,QAAQ,SACzCrB,KAAMa,OAAOC,aAAaO,QAAQ,YAClCxB,MAAOgB,OAAOC,aAAaO,QAAQ,aACnCH,aAAcL,OAAOC,aAAaO,QAAQ,qBAV7C,cAEGZ,EAFH,gBAaqBA,EAASC,OAb9B,OAaGC,EAbH,OAcoB,MAApBF,EAASG,QACVC,OAAOC,aAAaE,QAAQ,QAASL,EAAUS,aAf9C,kDAmBHE,QAAQC,IAAI,oBAnBT,2D,sBCrBP,IAiBMC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgBRC,MAjBmB,sBAiBX,4BAAA3B,EAAA,6DACN,EAAK4B,SAAS,CAAEC,YAAY,IADtB,SAGqBjC,EAAQ,QAAS,EAAKkC,WAAY,EAAKC,eAH5D,OAGAC,EAHA,OAKNC,YAAW,WACT,EAAKL,SAAS,CAAEM,WAAYF,EAAcH,YAAY,MACrD,KAEHI,YAAW,WACT,EAAKP,MAAMS,YAAY,CAAEC,OAAQJ,MAChC,MAXG,2CAjBW,EAwCnBK,eAAiB,WACf,IACE,IAAMC,EAAoB/B,KAAKgC,MAAM,EAAKC,SAASC,QAAQC,OAAO,GAAGC,QAAQC,QACvEC,EAAuBtC,KAAKgC,MAAM,EAAKO,YAAYL,QAAQC,OAAO,GAAGC,QAAQC,QAE/EN,GAAqBO,GACvB,EAAKjB,SAAS,CAAEmB,YAAY,EAAOC,cAAc,EAAOC,iBAAiB,IAG3E,MAAMC,MAjDS,EAoDnBC,cAAgB,SAACC,GAEf,EAAKrB,cAAgBqB,EAAMC,OAAOC,MAClC,IAAMC,GAFS,cAESC,KAAKJ,EAAMC,OAAOC,OAE1C,EAAK1B,SAAS,CAAEqB,gBAAiBM,IAAW,WAC1C,EAAKE,yBA1DU,EA8DnBC,WAAa,SAACN,GAEZ,EAAKtB,WAAasB,EAAMC,OAAOC,MAC/B,IAAMC,GAFS,cAESC,KAAKJ,EAAMC,OAAOC,OAE1C,EAAK1B,SAAS,CAAEoB,aAAcO,IAAW,WACvC,EAAKE,yBApEU,EAwEnBA,mBAAqB,WACnB,IAAME,GAA6C,IAA/B,EAAKC,MAAMX,kBAAyD,IAA5B,EAAKW,MAAMZ,aACvE,EAAKpB,SAAS,CAAEmB,YAAaY,KAvE7B,EAAKC,MAAQ,CACXb,YAAY,EACZb,WAAY,KACZL,YAAY,EACZmB,aAAc,KACdC,gBAAiB,MAGnB,EAAKnB,WAAa,GAClB,EAAKC,cAAgB,GACrB,EAAKS,SAAWqB,IAAMC,YACtB,EAAKhB,YAAce,IAAMC,YAdR,E,gEAgCbC,KAAKvB,SAASC,QAAQa,OAASS,KAAKjB,YAAYL,QAAQa,QAC1DS,KAAKnC,SAAS,CAAEoB,cAAc,EAAOC,iBAAiB,IACtDc,KAAKN,sBAGP3C,OAAOkD,iBAAiB,OAAQD,KAAK1B,kB,+BAwC7B,IAAD,OAEC4B,EAAYF,KAAKrC,MAAjBuC,QAER,OACE,0BAAMC,UAAU,aAAaC,YAAU,EAACC,aAAa,MACnD,kBAACC,EAAA,EAAD,CAAUC,KAAOP,KAAKH,MAAM1B,WAC1BqC,iBAAmB,IACnBC,QAAU,kBAAM,EAAK5C,SAAS,CAAEM,WAAY,QAC5CuC,aAAe,CAAEC,SAAU,MAAOC,WAAY,WAE9C,kBAACC,EAAA,EAAD,CAAOC,SAAS,WAAhB,uBAKF,kBAACR,EAAA,EAAD,CAAUC,MAAiC,IAA1BP,KAAKH,MAAM1B,WAC1BqC,iBAAmB,IACnBC,QAAU,kBAAM,EAAK5C,SAAS,CAAEM,WAAY,QAC5CuC,aAAe,CAAEC,SAAU,MAAOC,WAAY,WAE9C,kBAACC,EAAA,EAAD,CAAOC,SAAS,SAAhB,iCAKF,kBAACC,EAAA,EAAD,CAAWC,UAAQ,EACjBC,GAAG,QACHC,MAAM,QACNC,KAAK,QACLC,SAAWpB,KAAKvB,SAChB4C,SAAWrB,KAAKL,aAElB,kBAACoB,EAAA,EAAD,CAAWC,UAAQ,EACjBC,GAAG,WACHC,MAAM,WACNC,KAAK,WACLd,aAAa,mBACbe,SAAWpB,KAAKjB,YAChBsC,SAAWrB,KAAKZ,gBAElB,kBAACkC,EAAA,EAAD,CAAKC,EAAI,GACP,kBAACC,EAAA,EAAD,CACEC,SAAWzB,KAAKH,MAAMb,WACtB0C,QAAU1B,KAAKpC,MACfuC,UAAYD,EAAQyB,YACpBC,QAAQ,YAGN5B,KAAKH,MAAM/B,YAAc,kBAAC+D,EAAA,EAAD,CAAkBC,KAAO,MACjD9B,KAAKH,MAAM/B,YAAc,+C,GAhIhBiE,aA6ITC,eA9JA,SAAAC,GAAK,MAAK,CACvBN,YAAa,CACXO,gBAAiB,UACjBC,WAAY,wBACZC,UAAW,OAEX,iBAAkB,CAChBF,gBAAiB,6BACjBG,MAAO,wBAET,UAAW,CACTH,gBAAiB,iBAmJRF,CAAmBtE,G,mCC5I5B4E,E,kDACF,WAAY3E,GAAQ,IAAD,8BACjB,cAAMA,IAoBR4E,OArBmB,sBAqBV,4BAAAtG,EAAA,sEACD,EAAKuG,eADJ,uBAED,EAAKC,gBAFJ,uBAGD,EAAKC,mBAHJ,uBAID,EAAKC,0BAJJ,WAQU,IAFC,EAAKjD,qBANhB,wBASL,EAAK7B,SAAS,CAAEC,YAAY,EAAM8E,aAAa,IAT1C,UAWsB/G,EAAQ,SAAU,EAAKkC,WAAY,EAAKC,cAAe,EAAK6E,WAXlF,QAWC5E,EAXD,OAaLC,YAAW,WACT,EAAKL,SAAS,CAAEiF,WAAY7E,EAAcH,YAAY,MACrD,KAEHI,YAAW,WACT,EAAKP,MAAMS,YAAY,CAAEC,OAAQJ,MAChC,MAnBE,wBAsBL,EAAKJ,SAAS,CAAE+E,aAAa,IAtBxB,4CArBU,EA+CnBJ,aAAe,WACb,IACM5C,EADS,cACUH,KAAK,EAAKoD,WAEnC,EAAKhF,SAAS,CAAEkF,kBAAmBnD,IAAa,WAC9C,EAAKF,yBApDU,EAwDnB+C,cAAgB,WACd,IACM7C,EADS,uJACUH,KAAK,EAAK1B,YAEnC,EAAKF,SAAS,CAAEmF,mBAAoBpD,IAAa,WAC/C,EAAKF,yBA7DU,EAiEnBgD,iBAAmB,WACjB,IACM9C,EADS,yCACUH,KAAK,EAAKzB,eAEnC,EAAKH,SAAS,CAAEoF,sBAAuBrD,IAAY,WACjD,EAAKF,yBAtEU,EA0EnBiD,wBAA0B,WACxB,IAAM/C,EAAY,EAAKsD,uBAAyB,EAAKlF,cAErD,EAAKH,SAAS,CAAEsF,6BAA8BvD,IAAa,WACzD,EAAKF,yBA9EU,EAkFnBA,mBAAqB,WACnB,IAAME,GAA+C,IAAjC,EAAKC,MAAMkD,mBACO,IAAjC,EAAKlD,MAAMmD,oBACyB,IAApC,EAAKnD,MAAMoD,uBACgC,IAA3C,EAAKpD,MAAMsD,4BAIhB,OADA,EAAKtF,SAAS,CAAEmB,YAAaY,IACtBA,GA1FU,EA6FnBwD,UAAY,SAAC/D,GAGX,GAFA,EAAKwD,UAAYxD,EAAMC,OAAOC,MAE1B,EAAKM,MAAM+C,YAAa,CAC1B,IAAMpD,GAAW,EAAK6D,YAAY5D,KAAKJ,EAAMC,OAAOC,OAEpD,EAAK1B,SAAS,CAAEkF,iBAAkBvD,IAAW,WAC3C,EAAKE,6BAGF,EAAK8C,gBAvGK,EA0GnB7C,WAAa,SAACN,GAEZ,GADA,EAAKtB,WAAasB,EAAMC,OAAOC,MAC3B,EAAKM,MAAM+C,YAAa,CAC1B,IAAMpD,GAAW,EAAK6D,YAAY5D,KAAKJ,EAAMC,OAAOC,OAEpD,EAAK1B,SAAS,CAAEmF,kBAAmBxD,IAAW,WAC5C,EAAKE,6BAGF,EAAK+C,iBAnHK,EAsHnBrD,cAAgB,SAACC,GAEf,GADA,EAAKrB,cAAgBqB,EAAMC,OAAOC,MAC9B,EAAKM,MAAM+C,YAAa,CAC1B,IAAMpD,GAAW,EAAK6D,YAAY5D,KAAKJ,EAAMC,OAAOC,OAEpD,EAAK1B,SAAS,CAAEoF,qBAAsBzD,IAAW,WAC/C,EAAKE,6BAGF,EAAKgD,oBA/HK,EAkInBY,qBAAuB,SAACjE,GAEtB,GADA,EAAK6D,qBAAuB7D,EAAMC,OAAOC,MACrC,EAAKM,MAAM+C,YAAa,CAC1B,IAAMpD,GAAW,EAAK6D,YAAY5D,KAAKJ,EAAMC,OAAOC,OAEpD,EAAK1B,SAAS,CAAEsF,4BAA6B3D,IAAW,WACtD,EAAKE,6BAGF,EAAKiD,2BAxIZ,EAAK9C,MAAQ,CACXb,YAAY,EACZ8D,WAAY,KACZhF,YAAY,EACZ8E,aAAa,EACbG,iBAAkB,KAClBC,kBAAmB,KACnBC,qBAAsB,KACtBE,4BAA6B,MAG/B,EAAKN,UAAY,GACjB,EAAK9E,WAAa,GAClB,EAAKC,cAAgB,GACrB,EAAKkF,qBAAuB,GAC5B,EAAKG,YAAc,cAlBF,E,qDAgJT,IAAD,OACCnD,EAAYF,KAAKrC,MAAjBuC,QAER,OACE,0BAAMC,UAAU,cAAcC,YAAU,EAACC,aAAa,MAEpD,kBAACC,EAAA,EAAD,CAAUC,KAAOP,KAAKH,MAAMiD,WAC1BtC,iBAAmB,IACnBC,QAAU,kBAAM,EAAK5C,SAAS,CAAEiF,WAAY,QAC5CpC,aAAe,CAAEC,SAAU,MAAOC,WAAY,WAC9C,kBAACC,EAAA,EAAD,CAAOC,SAAS,WAAhB,uBAKF,kBAACR,EAAA,EAAD,CAAUC,MAAiC,IAA1BP,KAAKH,MAAMiD,WAC1BtC,iBAAmB,IACnBC,QAAU,kBAAM,EAAK5C,SAAS,CAAEiF,WAAY,QAC5CpC,aAAe,CAAEC,SAAU,MAAOC,WAAY,WAC9C,kBAACC,EAAA,EAAD,CAAOC,SAAS,SAAhB,kCAIF,kBAACC,EAAA,EAAD,CAAWC,UAAQ,EACjBuC,MAAQvD,KAAKH,MAAMkD,mBAAqB/C,KAAKH,MAAM+C,YACnD3B,GAAG,OACHd,UAAYD,EAAQsD,KACpBtC,MAAM,OACNG,SAAWrB,KAAKoD,UAChBK,WAAazD,KAAKH,MAAMkD,mBAAqB/C,KAAKH,MAAM+C,aAAe,iCAEzE,kBAAC7B,EAAA,EAAD,CAAWC,UAAQ,EACjBuC,MAAQvD,KAAKH,MAAMmD,oBAAsBhD,KAAKH,MAAM+C,YACpD3B,GAAG,QACHC,MAAM,QACNC,KAAK,QACLE,SAAWrB,KAAKL,WAChB8D,WAAazD,KAAKH,MAAMmD,oBAAsBhD,KAAKH,MAAM+C,aAAe,oBAE1E,kBAAC7B,EAAA,EAAD,CAAWC,UAAQ,EACjBuC,MAAQvD,KAAKH,MAAMoD,uBAAyBjD,KAAKH,MAAM+C,YACvD3B,GAAG,WACHC,MAAM,WACNC,KAAK,WACLd,aAAa,mBACbqD,WAAa,CACXC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACC,EAAA,EAAD,CAASC,MAAM,8EACb,kBAAC,IAAD,SAIpB1C,SAAWrB,KAAKZ,cAChBqE,WAAazD,KAAKH,MAAMoD,uBAClBjD,KAAKH,MAAM+C,aACZ,+EAEP,kBAAC7B,EAAA,EAAD,CAAWC,UAAQ,EACjBuC,MAAQvD,KAAKH,MAAMsD,8BAAgCnD,KAAKH,MAAM+C,YAC9D3B,GAAG,oBACHC,MAAM,mBACNC,KAAK,WACLuC,WAAa,CACXC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACC,EAAA,EAAD,CAASC,MAAM,4CACb,kBAAC,IAAD,SAIpB1C,SAAWrB,KAAKsD,qBAChBG,WAAazD,KAAKH,MAAMsD,8BAClBnD,KAAKH,MAAM+C,aADJ,+CAIf,kBAACtB,EAAA,EAAD,CAAKC,EAAI,GACP,kBAACC,EAAA,EAAD,CACEC,SAAWzB,KAAKH,MAAMb,WACtB0C,QAAU1B,KAAKuC,OACfpC,UAAYD,EAAQ8D,aACpBpC,QAAQ,WACRX,GAAG,gBAEDjB,KAAKH,MAAM/B,YAAc,kBAAC+D,EAAA,EAAD,CAAkBC,KAAO,MACjD9B,KAAKH,MAAM/B,YAAc,gD,GApOjBiE,aAiPVC,eAlQA,SAAAC,GAAK,MAAK,CACvB+B,aAAc,CACZ9B,gBAAiB,UACjBC,WAAY,wBACZC,UAAW,OAEX,iBAAkB,CAChBF,gBAAiB,6BACjBG,MAAO,wBAET,UAAW,CACTH,gBAAiB,iBAuPRF,CAAmBM,GC7P5B2B,E,kDACF,WAAYtG,GAAQ,IAAD,8BACf,cAAMA,IAMVuG,kBAAoB,WAChB,IAAMC,EAAUnH,aAAaO,QAAQ,WACrC,EAAKM,SAAS,CAAE,QAAuB,MAAZsG,EAAkBA,EAAU,OATxC,EAYnBC,aAAe,SAAC/E,EAAOgF,GACnB,EAAKxG,SAAS,CAAEsG,QAASE,IACzBrH,aAAaE,QAAQ,UAAWmH,IAdjB,EAiBnBC,YAAc,SAACzE,GAAW,IACdxB,EAAWwB,EAAXxB,OACR,EAAKV,MAAMS,YAAY,CAAEC,YAjBzB,EAAKwB,MAAQ,CACXsE,QAAS,KAHI,E,qDAsBT,IACEjE,EAAYF,KAAKrC,MAAjBuC,QAER,OACI,yBAAKC,UAAU,cACX,kBAACoE,EAAA,EAAD,CAAYpE,UAAYD,EAAQsE,WAAajF,MAAQS,KAAKH,MAAMsE,SAChE,kBAACM,EAAA,EAAD,CAAQZ,SAAS,UACb,kBAACa,EAAA,EAAD,CAASrD,SAAWrB,KAAKoE,aAAeO,aAAW,uBACnD,kBAACC,EAAA,EAAD,CAAK1D,MAAM,UAAU3B,MAAM,MAC3B,kBAACqF,EAAA,EAAD,CAAK1D,MAAM,SAAS3B,MAAM,QAG9B,kBAACsF,EAAA,EAAD,CAAUtF,MAAM,KACZ,kBAAC,EAAD,CAAYnB,YAAgB4B,KAAKsE,eAErC,kBAACO,EAAA,EAAD,CAAUtF,MAAM,KACZ,kBAAC,EAAD,CAAWnB,YAAgB4B,KAAKsE,qB,GAvC7BvC,aAoDRC,eA5DA,SAAAC,GAAK,MAAK,CACrBuC,WAAY,CACRM,aAAc,IACd5C,gBAAiB,cAyDVF,CAAmBiC,G,kJC/D5Bc,G,QAASC,EAAGC,QAAQ,yBA2DpBC,G,kDACF,WAAYvH,GAAQ,IAAD,8BACf,cAAMA,IA0BVuG,kBAAoB,WAEhBa,GAAOI,GAAG,gBAAgB,YAA+B,IAA5BC,EAA2B,EAA3BA,QAASlJ,EAAkB,EAAlBA,KAAMH,EAAY,EAAZA,MACxC,IACI,IAAMsJ,EAAc,EAAKxF,MAAMyF,KACzBC,GAAcF,EAAYA,EAAYG,OAAS,GAAGD,UAAY,EAAK,GACzE,EAAK1H,SAAS,CACVyH,KAAK,GAAD,mBAAMD,GAAN,CAAmB,CAAED,UAASlJ,OAAMH,QAAOwJ,gBAChD,EAAKE,aAEV,MAAMtG,QAIZ4F,GAAOI,GAAG,gBAAgB,SAACO,GACvB,IAAIC,EAAeD,EAASE,MAAK,SAAC3J,EAAG4J,GACjC,OAAK5J,EAAEsJ,WAAaM,EAAEN,UACb,GAEJtJ,EAAEsJ,WAAaM,EAAEN,WACZ,EAEH,KAEX,EAAK1H,SAAS,CACVyH,KAAMK,GACP,EAAKF,gBAIZV,GAAOI,GAAG,gBAAgB,YAA6B,IAA1BC,EAAyB,EAAzBA,QAASG,EAAgB,EAAhBA,UAClC,IACI,IAEMO,EAFMC,OAAOC,QAAQ,EAAKC,aAAavH,QAAQwH,YAEpCC,MAAK,SAACC,GAAD,OAAUA,EAAK,GAAGxH,QAAQqC,KAAOsE,KAEvD,QAAac,IAATP,EAAoB,CACpB,IAAMQ,EAAcR,EAAK,GAAGI,WAAW,GAAGA,WAC1CI,EAAY,GAAGC,UAAYnB,EAC3BkB,EAAY,GAAGnG,UAAY,uBAGjC,MAAMhB,QAGZ4F,GAAOI,GAAG,kBAAkB,SAACI,GACzB,IAAMiB,EAAgB,EAAK3G,MAAMyF,KAAKmB,QAAO,SAACL,GAC1C,OAAOA,EAAKb,YAAcA,KAE9B,EAAK1H,SAAS,CAAEyH,KAAMkB,EAAeE,YAAa,UAGtD3B,GAAO4B,KAAK,gBAEZ,EAAKC,UAAY5J,aAAaO,QAAQ,cAjFvB,EAqFnBkI,YAAc,WACV,IAAMoB,EAAS,EAAKZ,aAAavH,QAAQoI,wBAAwBD,OACjE,EAAKZ,aAAavH,QAAQqI,cAAcC,SAAS,EAAGH,GACpD,EAAKI,WAAaJ,GAxFH,EA2FnBK,iBAAmB,WACf,IAAMC,EAAe,EAAKlB,aAAavH,QAAQqI,cAAcK,UACzDC,EAAkB,EAAKC,UAAU5I,QAAQyB,UAE7C,GAAI,EAAK8G,WAAaE,GAAgB,IAAM,CAExC,IAAMI,EAAgBF,EAAgBG,QAAQ,oBAAqB,IAEnE,EAAKF,UAAU5I,QAAQyB,UAAYoH,MAEhC,CACoBF,EAAgBI,MAAM,KAAKC,SAAS,sBAEvD,EAAKJ,UAAU5I,QAAQyB,UAAYkH,EAAkB,uBAxG9C,EA6GnBM,eAAiB,WACb,EAAK9J,SAAS,CAAE+J,eAAe,KA9GhB,EAiHnBC,cAAgB,SAACxI,GACb,IAAMyI,EAAczI,EAAMC,OAAOC,MAIjC,IAFA,EAAKwI,qBAEAD,KAIiB/B,OAAOC,QAAQ,EAAKC,aAAavH,QAAQwH,YAEjD8B,KAAI,SAAC5B,GACCA,EAAK,GAAGF,WAAW,GAAGA,WAAW,GAAGK,UAExCmB,SAASI,KACjB,EAAKG,cAAcC,KAAK9B,EAAK,IAE7BA,EAAK,GAAGjG,WAAa,oBAKzB,EAAK8H,cAAczC,QAAQ,CAC3B,IAAM2C,EAAgB,EAAKF,cAAc,GAAGG,UAC5C,EAAKnC,aAAavH,QAAQqI,cAAcC,SAAS,EAAGmB,GACpD,EAAKtK,SAAS,CAAEwK,oBAAqB,EAAKJ,cAAc,GAAIK,yBAA0B,IACtF,EAAKL,cAAc,GAAG9H,WAAa,yBA3IxB,EAgJnBoI,0BAA4B,SAACC,GAEzB,GAAK,EAAK3I,MAAMwI,oBAAhB,CAIA,IAAII,EAAiB,EAAK5I,MAAMwI,oBAChCI,EAAetI,UAAYsI,EAAetI,UAAUqH,QAAQ,sBAAuB,IACnF,IAAIkB,EAAI,EAAK7I,MAAMyI,yBAEnB,OAAQE,GACJ,IAAK,MAAOE,IAAK,MACjB,IAAK,SAAUA,KAGfA,EAAI,GAAKA,GAAK,EAAKT,cAAczC,UACjCkD,EAAKA,EAAI,EAAK,EAAKT,cAAczC,OAAS,EAAI,GAGlDiD,EAAiB,EAAKR,cAAcS,GACpC,EAAK7K,SAAS,CAAEwK,oBAAqBI,EAAgBH,yBAA0BI,IAC/ED,EAAetI,WAAa,uBAE5B,IAAMgI,EAAgBM,EAAeL,UACrC,EAAKnC,aAAavH,QAAQqI,cAAcC,SAAS,EAAGmB,KAxKrC,EA2KnBQ,oBAAsB,WAClB,EAAK9K,SAAS,CAAE+J,eAAe,IAC/B,EAAKG,sBA7KU,EAgLnBA,mBAAqB,WAEjB,GAAI,EAAKlI,MAAMwI,oBAAqB,CAChC,IAAMI,EAAiB,EAAK5I,MAAMwI,oBAClCI,EAAetI,UAAYsI,EAAetI,UAAUqH,QAAQ,sBAAuB,IAGvF,EAAKS,cAAcD,KAAI,SAAC5B,GACpBA,EAAKjG,UAAYiG,EAAKjG,UAAUqH,QAAQ,gBAAiB,OAG7D,EAAKS,cAAgB,GACrB,EAAKpK,SAAS,CAAEwK,oBAAqB,KAAMC,yBAA0B,KA5LtD,EA+LnBM,gBAAkB,WACd,EAAK/K,SAAS,CAAEgL,QAAQ,IACxB,IAAMC,EAAa,EAAKC,UAAUrK,QAAQa,MAClCmH,EAAgB,EAAK7G,MAArB6G,YAER,GAA+B,OAA3B,EAAK7G,MAAM6G,aACX,GAAIoC,IAAepC,EAAYR,WAAW,GAAGK,UAAW,CACpD,IAAMtF,EAAKyF,EAAYK,cAAcnI,QAAQqC,GACvC+H,EAAgBF,EACtB/D,GAAO4B,KAAK,eAAgBqC,EAAe/H,SAG5C8D,GAAO4B,KAAK,eAAgBmC,EAAY9L,aAAaO,QAAQ,YAAaP,aAAaO,QAAQ,cAEtG,EAAKM,SAAS,CAAEuH,QAAS,GAAIsB,YAAa,OAC1C,EAAKqC,UAAUrK,QAAQa,MAAQ,IA9MhB,EAiNnB0J,gBAAkB,SAAC5J,GACfA,EAAM6J,iBACN7J,EAAM8J,kBAEF,EAAKtJ,MAAMuJ,mBAIX/J,EAAMC,OAAOa,UAAUsH,MAAM,KAAKC,SAAS,YAC3C,EAAK7J,SAAS,CAAEwL,SAAUhK,EAAMC,SAAU,WAEtC,IAAMgK,EAAc,EAAKzJ,MAAMwJ,SAASlJ,UAAUuH,SAAS,aAC3D,EAAK7J,SAAS,CAAEyL,YAAaA,OAIjCjK,EAAMC,OAAOyH,cAAc5G,UAAUsH,MAAM,KAAKC,SAAS,YACzD,EAAK7J,SAAS,CAAEwL,SAAUhK,EAAMC,OAAOyH,gBAAiB,WAEpD,IAAMuC,EAAc,EAAKzJ,MAAMwJ,SAASlJ,UAAUuH,SAAS,aAC3D,EAAK7J,SAAS,CAAEyL,YAAaA,SArOtB,EA2OnBC,uBAAyB,SAAClK,GAEtB,OADAA,EAAM6J,kBACC,GA7OQ,EAgPnBM,uBAAyB,WACrB,EAAK3L,SAAS,CAAEwL,SAAU,QAjPX,EAoPnBI,kBAAoB,WAChB,EAAK5L,SAAS,CAAE6L,cAAc,EAAOhD,YAAa,QArPnC,EAwPnBiD,cAAgB,SAACtK,GACK,UAAdA,EAAMuK,KAA0C,KAAvB,EAAK/J,MAAMuF,SACpC,EAAKwD,mBA1PM,EA8PnBiB,YAAc,SAACxK,GACX,EAAKxB,SAAS,CAAEuH,QAAS/F,EAAMC,OAAOC,SA/PvB,EA2RnBuK,YAAc,WACV,IAAMhE,EAAO,EAAKjG,MAAMwJ,SACxB,EAAKG,yBACL,IAAMO,EAAejE,EAAKI,WAAW,GAAGK,UAExCrI,YAAW,WACP,EAAK6K,UAAUrK,QAAQsL,UACxB,GAEH,EAAKjB,UAAUrK,QAAQa,MAAQwK,EAC/B,EAAKlM,SAAS,CAAE6I,YAAaZ,EAAMV,QAAS2E,KArS7B,EAwSnBE,wBAA0B,WACtB,IAAMnE,EAAO,EAAKjG,MAAMwJ,SAAStC,cACjC,EAAKyC,yBAEL,EAAK3L,SAAS,CAAE6L,cAAc,EAAMhD,YAAaZ,KA5SlC,EA+SnBoE,cAAgB,WACZ,EAAKT,oBACL1E,GAAO4B,KAAK,iBAAkB,EAAK9G,MAAM6G,YAAY9H,QAAQqC,KAjT9C,EAoTnBkJ,SAAW,WACP,IAAIC,EAEAA,EADqC,KAArCrN,OAAOsN,eAAeC,WACf,EAAKzK,MAAMwJ,SAASnD,WAAW,GAAGK,UAGlCxJ,OAAOsN,eAAeC,WAEjCC,UAAUC,UAAUC,UAAUL,GAC9B,EAAKZ,0BA7TU,EAgUnBkB,cAAgB,SAACrL,GACb,GAAK,EAAKQ,MAAMuJ,iBAOT,CACH,GAAI/J,EAAMC,OAAOa,UAAUsH,MAAM,KAAKC,SAAS,WAAY,CAEvD,IAAM5B,EAAOzG,EAAMC,OAEnB,EAAKqL,kBAAkB7E,GAE3B,GAAIzG,EAAMC,OAAOyH,cAAc5G,UAAUsH,MAAM,KAAKC,SAAS,WAAY,CAErE,IAAM5B,EAAOzG,EAAMC,OAAOyH,cAE1B,EAAK4D,kBAAkB7E,GAI3B,IAAM8E,EAAmD,IAAjC,EAAKC,iBAAiBrF,OAC9C,EAAK3H,SAAS,CAAEuL,kBAAmBwB,SAtBnC,EAAK/M,SAAS,CAAEuL,kBAAkB,IAClC,EAAKvJ,MAAMwJ,SAASlJ,UAAY,EAAKN,MAAMwJ,SAASlJ,UAAY,mBAEhE,EAAK0K,iBAAiB3C,KAAK,EAAKrI,MAAMwJ,SAAStC,eAC/C,EAAKyC,0BAtUM,EA4VnBmB,kBAAoB,SAAC7E,GAEjB,GAAIA,EAAK3F,UAAUsH,MAAM,KAAKC,SAAS,mBAAoB,CACvD5B,EAAK3F,UAAY2F,EAAK3F,UAAUqH,QAAQ,mBAAoB,IAE5D,IAAMhB,EAAgB,EAAKqE,iBAAiBpE,QAAO,SAACL,GAChD,OAAOA,EAAKxH,QAAQqC,KAAO6E,EAAKiB,cAAcnI,QAAQqC,MAG1D,EAAK4J,iBAAmBrE,OAGxBV,EAAK3F,UAAY2F,EAAK3F,UAAY,mBAElC,EAAK0K,iBAAiB3C,KAAKpC,EAAKiB,gBA1WrB,EA8WnB+D,uBAAyB,WACrB,EAAKD,iBAAiB7C,KAAI,SAAC5B,GACvB,IAAM2E,EAAY3E,EAAKF,WAAW,GAElC6E,EAAU5K,UAAY4K,EAAU5K,UAAUqH,QAAQ,mBAAoB,OAG1E,EAAKqD,iBAAmB,GACxB,EAAKhN,SAAS,CAAEuL,kBAAkB,KAnXlC,EAAKvJ,MAAQ,CACTyF,KAAM,GACNF,QAAS,GACTyD,OAAQ,KACRQ,SAAU,KACV3C,YAAa,KACbgD,cAAc,EACd9B,eAAe,EACfoD,iBAAiB,EACjB5B,kBAAkB,EAClBf,oBAAqB,KACrBC,yBAA0B,GAG9B,EAAK1B,UAAY,GACjB,EAAKK,WAAa,EAClB,EAAKqC,YAAc,KACnB,EAAKrB,cAAgB,GACrB,EAAK4C,iBAAmB,GACxB,EAAK9B,UAAYjJ,IAAMC,YACvB,EAAKuH,UAAYxH,IAAMC,YACvB,EAAKkG,aAAenG,IAAMC,YAxBX,E,yDAkQL,IAAD,OAGT,OAFiBC,KAAKH,MAAdyF,KAEI0C,KAAI,WAAiDiD,GAAjD,IAAG7F,EAAH,EAAGA,QAASlJ,EAAZ,EAAYA,KAAMH,EAAlB,EAAkBA,MAAOwJ,EAAzB,EAAyBA,UAAW2F,EAApC,EAAoCA,UAApC,OACZ,yBAAKC,UAAU5F,EAAYpF,UAAYpE,IAAUiB,aAAaO,QAAQ,aAClE,0CACE,8CAEF,yBAAK4C,UAAapE,IAAUiB,aAAaO,QAAQ,aAC7C,oBACE,wBAEF,0BAAM4C,UAAU,qBAAuBjE,GACvC,0BAAMiE,UAAU,YAAYiL,cAAgB,EAAK7B,wBAA4BnE,GAE7E,0BAAMjF,UAAa+K,EAAY,sBAAwB,0BAAvD,WAGJ,yBAAK/K,UAAU,iBACX,kBAACkL,EAAA,EAAD,a,+BAoGN,IAAD,OACGnL,EAAYF,KAAKrC,MAAjBuC,QAER,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACRH,KAAKH,MAAMuJ,kBAAoB,6CAC/BpJ,KAAKH,MAAMuJ,mBAAqBpJ,KAAKH,MAAM+H,eAC1C,kBAAC0D,EAAA,EAAD,CACInL,UAAU,eACVwE,aAAW,SACXjD,QAAU1B,KAAK2H,gBAEf,kBAAC4D,EAAA,EAAD,OAGNvL,KAAKH,MAAM+H,eACT,yBAAKzH,UAAU,cACX,0BAAMA,UAAU,gBACTH,KAAKiI,cAAczC,OAEhBxF,KAAKH,MAAMyI,yBAA2B,EAAI,MAAQtI,KAAKiI,cAAczC,OADvE,cAIR,kBAAC8F,EAAA,EAAD,CAAYnL,UAAYD,EAAQsL,kBAC5B9J,QAAU,kBAAM,EAAK6G,0BAA0B,SAE/C,kBAACkD,EAAA,EAAD,CAAatL,UAAYD,EAAQwL,mBAErC,kBAACJ,EAAA,EAAD,CAAYnL,UAAYD,EAAQsL,kBAC5B9J,QAAU,kBAAM,EAAK6G,0BAA0B,YAE/C,kBAACoD,EAAA,EAAD,CAAexL,UAAYD,EAAQwL,mBAGvC,kBAAC3K,EAAA,EAAD,CACIE,GAAG,iBACHC,MAAM,YACNG,SAAWrB,KAAK6H,cAChB+D,WAAS,IAEb,kBAACN,EAAA,EAAD,CACInL,UAAU,oBACVwE,aAAW,QACXjD,QAAU1B,KAAK2I,qBAEf,kBAACkD,GAAA,EAAD,QAIV7L,KAAKH,MAAMuJ,kBAAoB,yBAAKjJ,UAAU,iBAC5C,0BAAMA,UAAU,sBAAhB,mBAAuDH,KAAK6K,iBAAiBrF,OAA7E,KACA,kBAAC8F,EAAA,EAAD,CAAY3G,aAAW,SACnBjD,QAAU1B,KAAK8K,wBAEf,kBAACe,GAAA,EAAD,SAIZ,yBAAK1L,UAAU,sBAAsB2L,SAAW9L,KAAKkH,kBACjD,yBACI/G,UAAU,eACV4L,IAAM/L,KAAKiG,aACXmF,cAAgBpL,KAAKiJ,gBACrBvH,UAAU1B,KAAKH,MAAMuJ,kBAAmBpJ,KAAK0K,cAC7CsB,OAAShM,KAAKyF,aAEZzF,KAAKiM,cAEX,kBAACX,EAAA,EAAD,CACIY,UAAYlM,KAAKsH,UACjBnH,UAAYD,EAAQiM,aACpBzK,QAAU1B,KAAKyF,aAEf,kBAACkG,EAAA,EAAD,OAGJ,kBAACS,EAAA,EAAD,CACInL,GAAG,cACHoI,SAAWrJ,KAAKH,MAAMwJ,SACtBgD,aAAW,EACX9L,KAAOP,KAAKH,MAAMwJ,WAAarJ,KAAKH,MAAMuJ,iBAC1C3I,QAAUT,KAAKwJ,uBACf9I,aAAe,CAAEC,SAAU,SAAUC,WAAY,UAEjD,kBAAC0L,EAAA,EAAD,CAAU5K,QAAU1B,KAAKmK,UAAzB,aACEnK,KAAKH,MAAMyJ,aAAe,kBAACgD,EAAA,EAAD,CAAU5K,QAAU1B,KAAK8J,aAAzB,gBAC1B9J,KAAKH,MAAMyJ,aAAe,kBAACgD,EAAA,EAAD,CAAU5K,QAAU1B,KAAKiK,yBAAzB,kBAC5B,kBAACqC,EAAA,EAAD,CAAU5K,QAAU1B,KAAK0K,eAAzB,mBAGJ,kBAAC6B,EAAA,EAAD,CACIpM,UAAYD,EAAQsM,OACpBjM,KAAOP,KAAKH,MAAM6J,aAClBjJ,QAAUT,KAAKyJ,kBACfgD,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAa1L,GAAG,sBAAhB,4CACA,kBAAC2L,EAAA,EAAD,KACA,kBAACpL,EAAA,EAAD,CAAQE,QAAU1B,KAAKkK,cAAgB7H,MAAM,WAA7C,eAGA,kBAACb,EAAA,EAAD,CAAQE,QAAU1B,KAAKyJ,kBAAoBpH,MAAM,UAAUuJ,WAAS,GAApE,SAMR,yBAAKzL,UAAU,aACX,kBAACY,EAAA,EAAD,CACIE,GAAG,sBACHd,UAAYD,EAAQ2M,aACpBC,YAAY,qBACZC,OAAO,SACPnL,QAAQ,WACRoL,gBAAiB,CACbnO,QAAQ,GAEZuC,SAAWpB,KAAK+I,UAChBkE,UAAYjN,KAAK2J,cACjBtI,SAAWrB,KAAK6J,cAEK,KAAvB7J,KAAKH,MAAMuF,SAAkB,kBAACkG,EAAA,EAAD,CAAY3G,aAAW,OAClDxE,UAAYD,EAAQgN,WACpBxL,QAAU1B,KAAK4I,iBAEf,kBAACuE,GAAA,EAAD,c,GA1fLpL,aAwgBRC,gBAhkBA,SAAAC,GAAK,YAAK,CACrBuJ,kBAAmB,CACf4B,QAAS,OAEb1B,gBAAiB,CACb7E,OAAQ,QACRwG,MAAO,SAEXb,OAAO,aACHa,MAAO,OACPN,OAAQ,SACRO,SAAU,QAET,4BAA8B,CAC3BD,MAAO,OACPC,SAAU,WAGlBnB,cAAY,GACRtI,SAAU,QACV0J,MAAO,OACPC,OAAQ,OACRC,OAAQ,OAERvL,gBAAiB,OACjBC,WAAY,YAEZ,qBAAsB,CAClBuL,WAAY,UAEhB,UAAW,CACPxL,gBAAiB,uBAbb,cAeP,2BAA6B,CAC1BqL,MAAO,SAhBH,cAkBP,2BAA6B,CAC1BA,MAAO,MACPC,OAAQ,SApBJ,GAuBZX,aAAc,CACV3K,gBAAiB,UACjBG,MAAO,OACPgL,MAAO,MACPN,OAAQ,SACRY,YAAa,MAGjBT,WAAY,CACRrJ,SAAU,WACV0J,MAAO,SA6gBAvL,CAAmBkD,ICjjB5B0I,G,kDACJ,WAAYjQ,GAAQ,IAAD,8BACjB,cAAMA,IAMRkQ,WAAa,kBLAR,WAAP,+BKAqBC,IAPA,EASnBxJ,YATmB,uCASL,WAAOzE,GAAP,eAAA5D,EAAA,uDACJoC,EAAWwB,EAAXxB,SAGN,EAAKR,SAAS,CAAEQ,OAAQ7B,KAAKgC,MAAMH,KACnCrB,aAAaE,QAAQ,SAAUmB,IAHpB,EAAK0P,SAFN,2CATK,wDAkBnBA,OAAS,WACP,EAAKC,qBAnBY,EAsBnB9J,kBAAoB,WAClB,EAAKrG,SAAS,CAAEQ,OAAQ7B,KAAKgC,MAAMxB,aAAaO,QAAQ,aAAc,IAEtER,OAAOkD,iBAAiB,UAAW,EAAKgO,YAzBvB,EA4BnBA,UAAY,WACV,EAAKD,qBA7BY,EAgCnBA,kBAAoB,WAClB,EAAKnQ,SAAS,CAAEQ,QAAQ,IAExBrB,aAAaC,WAAW,YACxBD,aAAaC,WAAW,aACxBD,aAAaC,WAAW,SACxBD,aAAaC,WAAW,gBAExBD,aAAaE,QAAQ,UAAU,IAtC/B,EAAK2C,MAAQ,CACXxB,QAAQ,GAHO,E,qDA4CT,IAAD,OAEC6B,EAAYF,KAAKrC,MAAjBuC,QACA7B,EAAW2B,KAAKH,MAAhBxB,OAER,OACI,yBAAK8B,UAAU,OACb,kBAACsE,EAAA,EAAD,CAAQZ,SAAS,UACf,kBAACqK,EAAA,EAAD,KACE7P,GAAU,kBAACmD,EAAA,EAAD,CACRrB,UAAYD,EAAQiO,aACpBvM,QAAQ,YACRF,QAAU1B,KAAK6N,YAHP,wBAQVxP,GAAU,kBAACmD,EAAA,EAAD,CACRrB,UAAYD,EAAQiO,aACpB9L,MAAM,UACNX,QAAU1B,KAAK+N,QAHP,aASd,kBAAC,IAAD,KACE/N,KAAKH,MAAMxB,OAAS,kBAAC,IAAD,CAAU+P,GAAG,UAAa,kBAAC,IAAD,CAAUA,GAAG,YAC3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UAAUC,UAAW,kBAAM,kBAAC,EAAD,CAAUlQ,YAAgB,EAAKkG,iBACtE,kBAAC,IAAD,CAAO+J,KAAK,QAAQC,UAAW,kBAAM,kBAAC,GAAD,CAAUlQ,YAAc,EAAKkG,wB,GA3E9DvC,aAwFHC,gBAtGA,SAAAC,GAAK,MAAK,CACvBkM,aAAc,CACZf,QAAS,WACTE,SAAU,UACVjL,MAAO,sBACPH,gBAAiB,YAEjB,UAAW,CACTA,gBAAiB,iBA8FRF,CAAmB4L,ICrGdW,QACW,cAA7BxR,OAAOyR,SAASC,UAEe,UAA7B1R,OAAOyR,SAASC,UAEhB1R,OAAOyR,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBxE,WACrBA,UAAUyE,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9L,GACL/F,QAAQ+F,MAAMA,EAAM6B,c","file":"static/js/main.86654569.chunk.js","sourcesContent":["export async function callApi (route, email, password, name = '') {\n  let isLogin = (route === 'login');\n\n  try {\n    const response = await fetch(`/api/user/${route}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n          user: {\n            name,\n            email,\n            password,\n          }\n      }),});\n    const resultObj = await response.json();\n    if(response.status === 401) {\n      window.localStorage.removeItem('userName');\n      window.localStorage.removeItem('userEmail');\n      window.localStorage.removeItem('token');\n      window.localStorage.removeItem('refreshToken');\n      return false;\n    }\n    window.localStorage.setItem('userName', resultObj.user);\n    window.localStorage.setItem('userEmail', resultObj.email);\n    window.localStorage.setItem('token', resultObj.token);\n    window.localStorage.setItem('refreshToken', resultObj.refreshToken);\n    return true;\n\n  } catch(err) {\n    isLogin ? alert('Incorrect login or password') : alert('This email is already in use!');\n  }\n}\n\nexport async function callApiCheckToken () {\n  try {\n    const response = await fetch(`/api/user/check`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user: {\n          accessToken: window.localStorage.getItem('token'),\n          name: window.localStorage.getItem('userName'),\n          email: window.localStorage.getItem('userEmail'),\n          refreshToken: window.localStorage.getItem('refreshToken'),\n        }\n    }),});\n    const resultObj = await response.json();\n    if(response.status !== 401) {\n      window.localStorage.setItem('token', resultObj.accessToken);\n    }\n\n  } catch(err) {\n    console.log('acces token died');\n  }\n\n}\n  \n","import React, { Component } from 'react';\nimport { TextField, Snackbar } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Alert } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\n\nimport { callApi } from '../../services/apiService';\n\n\nconst styles = theme => ({\n  logInButton: {\n    backgroundColor: '#FB9039',\n    transition: 'background-color 0.5s',\n    marginTop: '30px',\n  \n    '&.Mui-disabled': {\n      backgroundColor: 'rgba(255, 255, 255, 0.226)',\n      color: 'rgba(0, 0, 0, 0.473)',\n    },\n    '&:hover': {\n      backgroundColor: '#fb903988',\n    }\n  }\n});\n\n\nclass LogInPage extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      isDisabled: true,\n      isLoggedIn: null,\n      isSpinning: false,\n      isEmailEmpty: null,\n      isPasswordEmpty: null,\n    }\n\n    this.emailInput = '';\n    this.passwordInput = '';\n    this.emailRef = React.createRef();\n    this.passwordRef = React.createRef();\n  }\n\n  logIn = async () => {\n    this.setState({ isSpinning: true});\n\n    const isSuccessful = await callApi('login', this.emailInput, this.passwordInput);\n    \n    setTimeout(() => {\n      this.setState({ isLoggedIn: isSuccessful, isSpinning: false });\n    }, 500);\n\n    setTimeout(() => {\n      this.props.updateState({ isAuth: isSuccessful });\n    }, 2500)\n  }\n\n  componentDidMount() {\n    if (this.emailRef.current.value && this.passwordRef.current.value) {\n      this.setState({ isEmailEmpty: false, isPasswordEmpty: false });\n      this.checkSubmitDisable();\n    }\n\n    window.addEventListener('load', this.detectAutofill);\n  }\n\n  detectAutofill = () => {\n    try {\n      const isEmailAutofilled = JSON.parse(this.emailRef.current.labels[0].dataset.shrink);\n      const isPasswordAutofilled = JSON.parse(this.passwordRef.current.labels[0].dataset.shrink);\n\n      if (isEmailAutofilled && isPasswordAutofilled) {\n        this.setState({ isDisabled: false, isEmailEmpty: false, isPasswordEmpty: false });\n      }\n\n    } catch(err) { }\n  }\n\n  passwordCheck = (event) => {\n    const regexp = /^(?!\\s*$).+/;\n    this.passwordInput = event.target.value;\n    const isEmpty = !regexp.test(event.target.value);\n\n    this.setState({ isPasswordEmpty: isEmpty }, () => {\n      this.checkSubmitDisable();\n    })\n  }\n\n  emailCheck = (event) => {\n    const regexp = /^(?!\\s*$).+/;\n    this.emailInput = event.target.value;\n    const isEmpty = !regexp.test(event.target.value);\n\n    this.setState({ isEmailEmpty: isEmpty }, () => {\n      this.checkSubmitDisable();\n    })\n  }\n\n  checkSubmitDisable = () => {\n    const isCorrect = ( this.state.isPasswordEmpty === false && this.state.isEmailEmpty === false );\n    this.setState({ isDisabled: !isCorrect });\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <form className='login-form' noValidate autoComplete='on'>\n        <Snackbar open={ this.state.isLoggedIn }\n          autoHideDuration={ 3000 }\n          onClose={ () => this.setState({ isLoggedIn: null }) }\n          anchorOrigin={ { vertical: 'top', horizontal: 'center' } }\n        >\n          <Alert severity=\"success\">\n            You are logged in!\n          </Alert>\n        </Snackbar>\n\n        <Snackbar open={ this.state.isLoggedIn === false } \n          autoHideDuration={ 3000 }\n          onClose={ () => this.setState({ isLoggedIn: null }) }\n          anchorOrigin={ { vertical: 'top', horizontal: 'center' } }\n        >\n          <Alert severity=\"error\">\n            Incorrect login or password!\n          </Alert>\n        </Snackbar>\n\n        <TextField required\n          id='email' \n          label='Email'\n          type='email'\n          inputRef={ this.emailRef }\n          onChange={ this.emailCheck }\n        />\n        <TextField required\n          id='password'\n          label='Password'\n          type='password'\n          autoComplete='current-password'\n          inputRef={ this.passwordRef }\n          onChange={ this.passwordCheck }\n        />\n        <Box m={ 2 }>\n          <Button\n            disabled={ this.state.isDisabled }\n            onClick={ this.logIn }\n            className={ classes.logInButton } \n            variant='outlined'\n\n          >\n            { this.state.isSpinning && <CircularProgress size={ 17 } /> }\n            { !this.state.isSpinning && <span>Log In</span> }\n          </Button>\n        </Box>\n      </form>\n    );\n  }\n}\n  \n\nLogInPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LogInPage);\n","import React, { Component } from 'react';\nimport { TextField, Snackbar, InputAdornment, Tooltip } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Alert } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\n\nimport { callApi } from '../../services/apiService';\n\n\nconst styles = theme => ({\n  signUpButton: {\n    backgroundColor: '#FB9039',\n    transition: 'background-color 0.5s',\n    marginTop: '30px',\n  \n    '&.Mui-disabled': {\n      backgroundColor: 'rgba(255, 255, 255, 0.226)',\n      color: 'rgba(0, 0, 0, 0.473)',\n    },\n    '&:hover': {\n      backgroundColor: '#fb903988',\n    }\n  }\n});\n\n\nclass SignUpPage extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        isDisabled: true,\n        isSignedUp: null,\n        isSpinning: false,\n        isFirstTime: true,\n        isNotCorrectName: null,\n        isNotCorrectEmail: null,\n        isNotCorrectPassword: null,\n        isNotCorrectConfirmPassword: null,\n      }\n\n      this.nameInput = '';\n      this.emailInput = '';\n      this.passwordInput = '';\n      this.confirmPasswordInput = '';\n      this.regexpFirst = /^(?!\\s*$).+/;\n    }\n  \n    signUp = async () => {\n      await this.nameValidate();\n      await this.emailValidate();\n      await this.passwordValidate();\n      await this.confirmPasswordValidate();\n\n      const isCorrect = this.checkSubmitDisable();\n\n      if(isCorrect === true) {\n        this.setState({ isSpinning: true, isFirstTime: true });\n\n        const isSuccessful = await callApi('signup', this.emailInput, this.passwordInput, this.nameInput);\n\n        setTimeout(() => {\n          this.setState({ isSignedUp: isSuccessful, isSpinning: false });\n        }, 500);\n\n        setTimeout(() => {\n          this.props.updateState({ isAuth: isSuccessful });\n        }, 2500)\n  \n      } else {\n        this.setState({ isFirstTime: false });\n      }\n    }\n\n    nameValidate = () => {\n      const regexp = /^[a-zA-Z]+$/;\n      const isCorrect = regexp.test(this.nameInput);\n\n      this.setState({ isNotCorrectName: !isCorrect }, () => {\n        this.checkSubmitDisable();\n      });\n    }\n\n    emailValidate = () => {\n      const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const isCorrect = regexp.test(this.emailInput);\n      \n      this.setState({ isNotCorrectEmail: !isCorrect }, () => {\n        this.checkSubmitDisable();\n      });\n    }\n\n    passwordValidate = () => {\n      const regexp = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n      const isCorrect = regexp.test(this.passwordInput);\n\n      this.setState({ isNotCorrectPassword: !isCorrect}, () => {\n        this.checkSubmitDisable();\n      });\n    }\n\n    confirmPasswordValidate = () => {\n      const isCorrect = this.confirmPasswordInput === this.passwordInput;\n\n      this.setState({ isNotCorrectConfirmPassword: !isCorrect }, () => {\n        this.checkSubmitDisable();\n      });\n    }\n\n    checkSubmitDisable = () => {\n      const isCorrect = ( this.state.isNotCorrectName  === false   // здесь по-другому не сделаешь, тк this.state.isNotCorrectName\n        && this.state.isNotCorrectEmail === false                 // принимает значения true, false или null. И если я проверяю как\n        && this.state.isNotCorrectPassword === false              // !this.state.isNotCorrectName, то будет проскакивать и  null\n        && this.state.isNotCorrectConfirmPassword === false\n      );\n\n      this.setState({ isDisabled: !isCorrect});\n      return isCorrect;\n    }\n\n    nameCheck = (event) => {\n      this.nameInput = event.target.value;\n\n      if (this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n\n        this.setState({ isNotCorrectName: isEmpty }, () => {\n          this.checkSubmitDisable();\n        });\n\n      } else this.nameValidate();\n    }\n\n    emailCheck = (event) => {\n      this.emailInput = event.target.value;\n      if (this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n\n        this.setState({ isNotCorrectEmail: isEmpty }, () => {\n          this.checkSubmitDisable();\n        });\n\n      } else this.emailValidate();\n    }\n\n    passwordCheck = (event) => {\n      this.passwordInput = event.target.value;\n      if (this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n\n        this.setState({ isNotCorrectPassword: isEmpty }, () => {\n          this.checkSubmitDisable();\n        });\n\n      } else this.passwordValidate();\n    }\n\n    confirmPasswordCheck = (event) => {\n      this.confirmPasswordInput = event.target.value;\n      if (this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n\n        this.setState({ isNotCorrectConfirmPassword: isEmpty }, () => {\n          this.checkSubmitDisable();\n        });\n\n      } else this.confirmPasswordValidate();\n    }\n\n\n    \n    render() {\n      const { classes } = this.props;\n\n      return (\n        <form className='signup-form' noValidate autoComplete='on'>\n\n          <Snackbar open={ this.state.isSignedUp }\n            autoHideDuration={ 3000 }\n            onClose={ () => this.setState({ isSignedUp: null }) }\n            anchorOrigin={ { vertical: 'top', horizontal: 'center' } }>\n            <Alert severity='success'>\n              You are signed up!\n            </Alert>\n          </Snackbar>\n\n          <Snackbar open={ this.state.isSignedUp === false }\n            autoHideDuration={ 3000 }\n            onClose={ () => this.setState({ isSignedUp: null }) }\n            anchorOrigin={ { vertical: 'top', horizontal: 'center' } }>\n            <Alert severity='error'>\n              This email is already in use!\n            </Alert>\n          </Snackbar>\n          <TextField required\n            error={ this.state.isNotCorrectName && !this.state.isFirstTime }\n            id='name' \n            className={ classes.form }\n            label='Name'\n            onChange={ this.nameCheck }\n            helperText={ this.state.isNotCorrectName && !this.state.isFirstTime && 'Use only alphabet characters' }\n          />\n          <TextField required\n            error={ this.state.isNotCorrectEmail && !this.state.isFirstTime }\n            id='email' \n            label='Email'\n            type='email'\n            onChange={ this.emailCheck }\n            helperText={ this.state.isNotCorrectEmail && !this.state.isFirstTime && 'Incorrect email' }\n          />\n          <TextField required\n            error={ this.state.isNotCorrectPassword && !this.state.isFirstTime }\n            id='password'\n            label='Password'\n            type='password'\n            autoComplete='current-password'\n            InputProps={ { \n              endAdornment: <InputAdornment position='end'>\n                              <Tooltip title='Password must contain minimum 8 characters, at least 1 letter and 1 number'>\n                                <HelpOutlineIcon/>\n                              </Tooltip>\n                            </InputAdornment>\n                        } }\n            onChange={ this.passwordCheck }\n            helperText={ this.state.isNotCorrectPassword\n              && !this.state.isFirstTime\n              && 'Password must contain minimum 8 characters, at least 1 letter and 1 number' }\n          />\n          <TextField required\n            error={ this.state.isNotCorrectConfirmPassword && !this.state.isFirstTime }\n            id='standard-password'\n            label='Confirm password'\n            type='password'\n            InputProps={ { \n              endAdornment: <InputAdornment position=\"end\">\n                              <Tooltip title='Password and confirm password must match'>\n                                <HelpOutlineIcon/>\n                              </Tooltip>\n                            </InputAdornment>\n                        } }\n            onChange={ this.confirmPasswordCheck }\n            helperText={ this.state.isNotCorrectConfirmPassword\n              && !this.state.isFirstTime\n              && `Password and confirm password don't match!` }\n          />\n          <Box m={ 2 }>\n            <Button\n              disabled={ this.state.isDisabled }\n              onClick={ this.signUp }\n              className={ classes.signUpButton }\n              variant='outlined'\n              id='signUpButton'\n            >\n              { this.state.isSpinning && <CircularProgress size={ 17 } /> }\n              { !this.state.isSpinning && <span>Sign Up</span> }\n            </Button>\n          </Box>\n        </form>\n      );\n    }\n}\n\n\nSignUpPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SignUpPage);\n","import React, { Component } from 'react';\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport { Tab, AppBar } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\n\nimport LogInPage from '../../components/loginPage/loginPage';\nimport SignUpPage from '../../components/signupPage/signupPage';\n\n\nconst styles = theme => ({\n    tabContext: {\n        borderRadius: '0',\n        backgroundColor: '#1F3044',      \n    }\n});\n\n\nclass AuthPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          tabPage: '2',\n        }\n    }\n\n    componentDidMount = () => {\n        const tabPage = localStorage.getItem('tabPage');\n        this.setState({ 'tabPage': tabPage === '1' ? tabPage : '2' });\n    }\n\n    handleChange = (event, newValue) => {\n        this.setState({ tabPage: newValue });\n        localStorage.setItem('tabPage', newValue);\n    }\n\n    setAppState = (state) => {\n        const { isAuth } = state;\n        this.props.updateState({ isAuth });\n    }\n    \n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='tabWrapper'> \n                <TabContext className={ classes.tabContext } value={ this.state.tabPage }>\n                <AppBar position='static'>\n                    <TabList onChange={ this.handleChange } aria-label='simple tabs example'>\n                    <Tab label='Sign Up' value='1' />\n                    <Tab label='Log In' value='2' />\n                    </TabList>\n                </AppBar>\n                <TabPanel value='1'>\n                    <SignUpPage updateState = { this.setAppState } />\n                </TabPanel>\n                <TabPanel value='2'>\n                    <LogInPage updateState = { this.setAppState } />\n                </TabPanel>\n                </TabContext>\n          </div>\n        );\n    }\n}\n\n\nAuthPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AuthPage);\n","import React, { Component } from 'react';\nimport '../../components/chatPage/chatPage.css';\nimport { TextField, Button, IconButton, Menu, MenuItem, Dialog, DialogTitle, DialogActions } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport { Send, Close, Person, ArrowDownward, ArrowUpward, Search } from '@material-ui/icons';\nimport io from 'socket.io-client';\nconst socket = io.connect('http://localhost:3000');\n\n\nconst styles = theme => ({\n    arrowSearchButton: {\n        padding: '3px',\n    },\n    arrowSearchIcon: {\n        height: '0.9em',\n        width: '0.9em',\n    },\n    dialog: {\n        width: '25vw',\n        margin: '0 auto',\n        fontSize: '1rem',\n\n        ['@media (max-width:1100px)']: {\n            width: '70vw',\n            fontSize: '0.6rem',\n        }\n    },\n    scrollButton: {\n        position: 'fixed',\n        right: '24vw',\n        bottom: '20vh',\n        zIndex: '1000',\n    \n        backgroundColor: '#fff',\n        transition: 'all 150ms',\n    \n        '&.scrollBtn-hidden': {\n            visibility: 'hidden',\n        },\n        '&:hover': {\n            backgroundColor: 'rgb(230, 230, 230)',\n        },\n        ['@media (max-width:780px)']: {\n            right: '13vw',\n        },\n        ['@media(max-width: 470px)']: {\n            right: '8vw',\n            bottom: '18vh',\n        }\n    },\n    messageInput: {\n        backgroundColor: '#d9e3eb',\n        color: '#000',\n        width: '75%',\n        margin: '15px 0',\n        marginRight: '3%',\n\n    },\n    sendButton: {\n        position: 'absolute',\n        right: '2%',\n    }\n});\n  \n\nclass ChatPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chat: [],\n            message: '',\n            isSend: null,\n            anchorEl: null,\n            editElement: null,\n            isDialogOpen: false,\n            isSearchState: false,\n            isScrolledToTop: false,\n            isSelectionState: false,\n            currentFoundMessage: null,\n            currentFoundMessageIndex: 0,\n        }\n\n        this.userEmail = '';\n        this.chatHeight = 0;\n        this.isMyMessage = null;\n        this.foundMessages = [];\n        this.selectedElements = [];\n        this.chatInput = React.createRef();\n        this.scrollBtn = React.createRef();\n        this.messagesArea = React.createRef();\n    }\n\n    componentDidMount = () => {\n\n        socket.on('chat message', ({ message, name, email }) => {\n            try {\n                const messageChat = this.state.chat;\n                const messageid = (+messageChat[messageChat.length - 1].messageid + 1) + '';\n                this.setState({\n                    chat: [...messageChat, { message, name, email, messageid }]\n                }, this.scrollToRef);\n\n            } catch(err) {}\n\n        });\n\n        socket.on('get database', (database) => {\n            let sortedResult = database.sort((a, b) => { \n                if (+a.messageid > +b.messageid) { \n                  return 1;\n                } \n                if (+a.messageid < +b.messageid) { \n                  return -1;\n                } \n                return 0; \n            });\n            this.setState({\n                chat: sortedResult\n            }, this.scrollToRef);\n\n        });\n\n        socket.on('edit message', ({ message, messageid }) => {\n            try {\n                const arr = Object.entries(this.messagesArea.current.childNodes);\n\n                const elem = arr.find((item) => item[1].dataset.id === messageid);\n\n                if (elem !== undefined) {\n                    const messageData = elem[1].childNodes[0].childNodes;\n                    messageData[1].innerText = message;\n                    messageData[2].className = 'userEdited noselect';\n                }\n\n            } catch(err) {}\n        });\n\n        socket.on('delete message', (messageid) => {\n            const filteredArray = this.state.chat.filter((item) => {\n                return item.messageid !== messageid;\n            });\n            this.setState({ chat: filteredArray, editElement: null });\n        });\n\n        socket.emit('get database');\n\n        this.userEmail = localStorage.getItem('userEmail');\n    }\n\n\n    scrollToRef = () => {\n        const height = this.messagesArea.current.getBoundingClientRect().height;\n        this.messagesArea.current.parentElement.scrollTo(0, height);\n        this.chatHeight = height;\n    }\n\n    scrollWithButton = () => {\n        const scrollHeight = this.messagesArea.current.parentElement.scrollTop;\n        let buttonClassName = this.scrollBtn.current.className;\n\n        if (this.chatHeight - scrollHeight >= 1000) {\n\n            const newClassNames = buttonClassName.replace(' scrollBtn-hidden', '');\n\n            this.scrollBtn.current.className = newClassNames;\n\n        } else {\n            const isButtonHidden = buttonClassName.split(' ').includes('scrollBtn-hidden');\n            if (!isButtonHidden) {\n                this.scrollBtn.current.className = buttonClassName + ' scrollBtn-hidden';\n            }\n        }\n    }\n\n    onSearchButton = () => {\n        this.setState({ isSearchState: true });\n    }\n\n    searchMessage = (event) => {\n        const searchValue = event.target.value;\n\n        this.clearFoundMessages();\n\n        if (!searchValue) {\n            return;\n        }\n\n        const messagesArray = Object.entries(this.messagesArea.current.childNodes);\n\n        messagesArray.map((item) => {\n            const message = item[1].childNodes[0].childNodes[1].innerText;\n\n            if (message.includes(searchValue)) {\n                this.foundMessages.push(item[1]);\n\n                item[1].className += ' foundMessage';\n            }\n\n        });\n\n        if (this.foundMessages.length) {\n            const messageYCoord = this.foundMessages[0].offsetTop;\n            this.messagesArea.current.parentElement.scrollTo(0, messageYCoord);\n            this.setState({ currentFoundMessage: this.foundMessages[0], currentFoundMessageIndex: 0 });\n            this.foundMessages[0].className += ' currentFoundMessage';\n        }\n\n    }\n\n    changeCurrentFoundMessage = (direction) => {\n        \n        if (!this.state.currentFoundMessage) {\n            return;\n        }\n\n        let currentMessage = this.state.currentFoundMessage;\n        currentMessage.className = currentMessage.className.replace('currentFoundMessage', '');\n        let i = this.state.currentFoundMessageIndex;\n\n        switch (direction) {\n            case 'top': i--; break;\n            case 'bottom': i++; break;\n        }\n\n        if (i < 0 || i >= this.foundMessages.length) {\n            i = (i < 0) ? this.foundMessages.length - 1 : 0;\n        }\n\n        currentMessage = this.foundMessages[i];\n        this.setState({ currentFoundMessage: currentMessage, currentFoundMessageIndex: i });\n        currentMessage.className += ' currentFoundMessage';\n\n        const messageYCoord = currentMessage.offsetTop;\n        this.messagesArea.current.parentElement.scrollTo(0, messageYCoord);\n    }\n\n    onCloseSearchButton = () => {\n        this.setState({ isSearchState: false });\n        this.clearFoundMessages();\n    }\n\n    clearFoundMessages = () => {\n\n        if (this.state.currentFoundMessage) {\n            const currentMessage = this.state.currentFoundMessage;\n            currentMessage.className = currentMessage.className.replace('currentFoundMessage', '');\n        }\n\n        this.foundMessages.map((item) => {\n            item.className = item.className.replace(' foundMessage', '');\n        });\n\n        this.foundMessages = [];\n        this.setState({ currentFoundMessage: null, currentFoundMessageIndex: 0 });\n    }\n\n    onMessageSubmit = () => {\n        this.setState({ isSend: true });\n        const inputValue = this.chatInput.current.value;\n        const { editElement } = this.state;\n\n        if (this.state.editElement !== null) {\n            if (inputValue !== editElement.childNodes[1].innerText) {\n                const id = editElement.parentElement.dataset.id;\n                const editedMessage = inputValue;\n                socket.emit('edit message', editedMessage, id);\n            }\n\n        } else socket.emit('chat message', inputValue, localStorage.getItem('userName'), localStorage.getItem('userEmail'));\n\n        this.setState({ message: '', editElement: null });\n        this.chatInput.current.value = '';\n    };\n\n    showContextMenu = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.state.isSelectionState) {\n            return;\n        }\n\n        if (event.target.className.split(' ').includes('message')) {\n            this.setState({ anchorEl: event.target }, () => {\n\n                const isMyMessage = this.state.anchorEl.className.includes('myMessage');\n                this.setState({ isMyMessage: isMyMessage });    \n            });\n        }\n\n        if (event.target.parentElement.className.split(' ').includes('message')) {\n            this.setState({ anchorEl: event.target.parentElement }, () => {\n\n                const isMyMessage = this.state.anchorEl.className.includes('myMessage');\n                this.setState({ isMyMessage: isMyMessage });    \n            });\n        }\n        \n    }\n\n    preventShowContextMenu = (event) => {\n        event.preventDefault();\n        return false;\n    }\n\n    handleContextMenuClose = () => {\n        this.setState({ anchorEl: null });\n    }\n\n    handleDialogClose = () => {\n        this.setState({ isDialogOpen: false, editElement: null });\n    }\n\n    handleKeyDown = (event) => {\n        if (event.key === 'Enter' && this.state.message !== '') {\n            this.onMessageSubmit();\n        }\n    }\n\n    changeInput = (event) => {\n        this.setState({ message: event.target.value });\n    }\n\n    renderChat() {\n        const { chat } = this.state;\n\n        return chat.map(({ message, name, email, messageid, is_edited }, idx) => (\n            <div data-id={ messageid } className={ email === localStorage.getItem('userEmail') ?\n                'messageWrapper messageWrapper-myMessage' \n                : 'messageWrapper messageWrapper-otherMessage' }\n            >\n                <div className= { email === localStorage.getItem('userEmail') ?\n                    'myMessage message' \n                    : 'otherMessage message' }\n                >\n                    <span className='userName noselect' >{ name }</span>\n                    <span className='userEmail' onContextMenu={ this.preventShowContextMenu } >{ message }</span>\n\n                    <span className= { is_edited ? 'userEdited noselect' : 'userNotEdited noselect' }>Edited</span>\n                    {/* <span className='sendTime'>{sendDate}</span> */}\n                </div>\n                <div className='messageAvatar'>\n                    <Person />\n                </div>\n            </div>\n        ));\n    };\n\n    editMessage = () => {\n        const elem = this.state.anchorEl;\n        this.handleContextMenuClose();\n        const previousData = elem.childNodes[1].innerText;\n\n        setTimeout(() => {\n            this.chatInput.current.focus();\n        }, 0);\n\n        this.chatInput.current.value = previousData;\n        this.setState({ editElement: elem, message: previousData });\n    }\n\n    showDeleteMessageDialog = () => {\n        const elem = this.state.anchorEl.parentElement;\n        this.handleContextMenuClose();\n\n        this.setState({ isDialogOpen: true, editElement: elem });\n    }\n\n    deleteMessage = () => {\n        this.handleDialogClose();\n        socket.emit('delete message', this.state.editElement.dataset.id);\n    }\n\n    copyText = () => {\n        let text;\n        if (window.getSelection().toString() === '') {\n            text = this.state.anchorEl.childNodes[1].innerText;\n        }\n        else {\n            text = window.getSelection().toString();\n        }\n        navigator.clipboard.writeText(text);\n        this.handleContextMenuClose();\n    }\n\n    selectMessage = (event) => {\n        if (!this.state.isSelectionState) {\n            this.setState({ isSelectionState: true });\n            this.state.anchorEl.className = this.state.anchorEl.className + ' selectedMessage';\n\n            this.selectedElements.push(this.state.anchorEl.parentElement);\n            this.handleContextMenuClose();\n\n        } else {\n            if (event.target.className.split(' ').includes('message')) {\n\n                const elem = event.target;\n\n                this.isSelectedMessage(elem);\n            }\n            if (event.target.parentElement.className.split(' ').includes('message')) {\n\n                const elem = event.target.parentElement;\n\n                this.isSelectedMessage(elem);\n\n            }\n\n            const noSelectedElems = this.selectedElements.length === 0;\n            this.setState({ isSelectionState: !noSelectedElems });\n        }\n    }\n\n    isSelectedMessage = (elem) => {\n\n        if (elem.className.split(' ').includes('selectedMessage')) {\n            elem.className = elem.className.replace(' selectedMessage', '');\n\n            const filteredArray = this.selectedElements.filter((item) => {\n                return item.dataset.id !== elem.parentElement.dataset.id;\n            });\n\n            this.selectedElements = filteredArray;\n\n        } else {\n            elem.className = elem.className + ' selectedMessage';\n\n            this.selectedElements.push(elem.parentElement);\n        }\n    }\n\n    deleteSelectedMessages = () => {\n        this.selectedElements.map((item) => {\n            const childNode = item.childNodes[0];\n\n            childNode.className = childNode.className.replace(' selectedMessage', '');\n        });\n\n        this.selectedElements = [];\n        this.setState({ isSelectionState: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='chatWrapper'>\n                <div className='chat'>\n                    <div className='chatHeader'>\n                        { !this.state.isSelectionState && <span>Group Chat</span> }\n                        { !this.state.isSelectionState && !this.state.isSearchState &&\n                            <IconButton\n                                className='searchButton'\n                                aria-label='search'\n                                onClick={ this.onSearchButton }\n                            >\n                                <Search />\n                            </IconButton> \n                        }\n                        { this.state.isSearchState && \n                            <div className='searchArea'>\n                                <span className='resultsCount'>\n                                    { !this.foundMessages.length ? \n                                        'No results' \n                                        : this.state.currentFoundMessageIndex + 1 + ' / ' + this.foundMessages.length\n                                    }\n                                </span>\n                                <IconButton className={ classes.arrowSearchButton } \n                                    onClick={ () => this.changeCurrentFoundMessage('top') }\n                                >\n                                    <ArrowUpward className={ classes.arrowSearchIcon } /> \n                                </IconButton>\n                                <IconButton className={ classes.arrowSearchButton }\n                                    onClick={ () => this.changeCurrentFoundMessage('bottom') }\n                                >\n                                    <ArrowDownward className={ classes.arrowSearchIcon } />\n                                </IconButton>\n\n                                <TextField\n                                    id='outlined-basic'\n                                    label='Search...'\n                                    onChange={ this.searchMessage }\n                                    autoFocus\n                                />\n                                <IconButton\n                                    className='closeSearchButton'\n                                    aria-label='close'\n                                    onClick={ this.onCloseSearchButton }\n                                >\n                                    <Close />\n                                </IconButton> \n                            </div> \n                        }\n                        { this.state.isSelectionState && <div className='selectionArea'>\n                            <span className='selectedElemsCount'>Selected items: { this.selectedElements.length } </span>\n                            <IconButton aria-label='delete' \n                                onClick={ this.deleteSelectedMessages }\n                            >\n                                <Close />\n                            </IconButton>\n                        </div> }\n                    </div>\n                    <div className='messagesAreaWrapper' onScroll={ this.scrollWithButton } >\n                        <div \n                            className='messagesArea'\n                            ref={ this.messagesArea } \n                            onContextMenu={ this.showContextMenu }\n                            onClick={ this.state.isSelectionState ? this.selectMessage : false }\n                            onLoad={ this.scrollToRef }\n                        >\n                            { this.renderChat() }\n                        </div>\n                        <IconButton \n                            buttonRef={ this.scrollBtn }\n                            className={ classes.scrollButton }\n                            onClick={ this.scrollToRef }\n                        >\n                            <ArrowDownward />\n                        </IconButton>\n\n                        <Menu\n                            id='simple-menu'\n                            anchorEl={ this.state.anchorEl }\n                            keepMounted\n                            open={ this.state.anchorEl && !this.state.isSelectionState }\n                            onClose={ this.handleContextMenuClose }\n                            anchorOrigin={ { vertical: 'bottom', horizontal: 'right' } }\n                        >\n                            <MenuItem onClick={ this.copyText } >Copy Text</MenuItem>\n                            { this.state.isMyMessage && <MenuItem onClick={ this.editMessage } >Edit Message</MenuItem> }\n                            { this.state.isMyMessage && <MenuItem onClick={ this.showDeleteMessageDialog } >Delete Message</MenuItem> }\n                            <MenuItem onClick={ this.selectMessage } >Select Message</MenuItem>\n                        </Menu>\n\n                        <Dialog\n                            className={ classes.dialog }\n                            open={ this.state.isDialogOpen }\n                            onClose={ this.handleDialogClose }\n                            aria-labelledby='alert-dialog-title'\n                            aria-describedby='alert-dialog-description'\n                        >\n                            <DialogTitle id='alert-dialog-title'>Are you sure you want to delete message?</DialogTitle>\n                            <DialogActions>\n                            <Button onClick={ this.deleteMessage } color='primary'>\n                                Yes, delete\n                            </Button>\n                            <Button onClick={ this.handleDialogClose } color='primary' autoFocus>\n                                No\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                    <div className='inputArea'>\n                        <TextField\n                            id='standard-full-width'\n                            className={ classes.messageInput }\n                            placeholder='Write a message...'\n                            margin='normal'\n                            variant='outlined'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputRef={ this.chatInput }\n                            onKeyDown={ this.handleKeyDown }\n                            onChange={ this.changeInput }\n                        />\n                        { this.state.message !== '' && <IconButton aria-label='send'\n                            className={ classes.sendButton }\n                            onClick={ this.onMessageSubmit }\n                        >\n                            <Send />\n                        </IconButton> }\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ChatPage);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { AppBar, Button, Toolbar } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport AuthPage from './components/authPage/authPage';\nimport ChatPage from './components/chatPage/chatPage';\nimport { callApiCheckToken } from './services/apiService';\n\n\nconst styles = theme => ({\n  headerButton: {\n    padding: '6px 16px',\n    fontSize: '0.85rem',\n    color: 'rgba(0, 0, 0, 0.87)',\n    backgroundColor: '#fb9039af',\n\n    '&:hover': {\n      backgroundColor: '#f3984d8f',\n    }\n  }\n});\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuth: false,\n    }\n  }\n\n  checkToken = () => callApiCheckToken();\n\n  setAppState = async (state) => {\n    const { isAuth } = state;\n    if (!isAuth) this.logOut();\n    else {\n      this.setState({ isAuth: JSON.parse(isAuth) });\n      localStorage.setItem('isAuth', isAuth);\n    }\n  }\n\n  logOut = () => {\n    this.clearLocalStorage();\n  }\n\n  componentDidMount = () => {\n    this.setState({ isAuth: JSON.parse(localStorage.getItem('isAuth')) || false });\n\n    window.addEventListener('storage', this.checkUser);\n  }\n\n  checkUser = () => {\n    this.clearLocalStorage();\n  }\n\n  clearLocalStorage = () => {\n    this.setState({ isAuth: false });\n\n    localStorage.removeItem('userName');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    \n    localStorage.setItem('isAuth', false);\n  }\n\n\n  render() {\n\n    const { classes } = this.props;\n    const { isAuth } = this.state;\n\n    return (\n        <div className='App'>\n          <AppBar position='static'>\n            <Toolbar>\n            { isAuth && <Button\n                className={ classes.headerButton }\n                variant='contained'\n                onClick={ this.checkToken }\n              >\n                Refresh Access Token\n              </Button> }\n\n            { isAuth && <Button\n                className={ classes.headerButton }\n                color='inherit' \n                onClick={ this.logOut }\n              >\n                Log out\n              </Button> }\n            </Toolbar>\n          </AppBar>\n          <BrowserRouter>\n          { this.state.isAuth ? <Redirect to='/chat' /> : <Redirect to='/signup' /> }\n            <Switch>\n              <Route path='/signup' component={() => <AuthPage updateState = { this.setAppState } />} />\n              <Route path='/chat' component={() => <ChatPage updateState={ this.setAppState } /> } />\n            </Switch>\n          </BrowserRouter>\n        </div>\n    );\n  }\n}\n\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}