{"version":3,"sources":["services/apiService.js","components/loginPage/loginPage.js","components/signupPage/signupPage.js","components/authPage/authPage.js","components/chatPage/chatPage.js","App.js","serviceWorker.js","index.js"],"names":["callApi","route","email","password","a","name","isLogin","fetch","method","headers","body","JSON","stringify","user","response","json","resultObj","status","window","localStorage","removeItem","setItem","token","refreshToken","alert","accessToken","getItem","console","log","LogInPage","props","detectAutofill","isEmailAutofilled","parse","emailRef","current","labels","dataset","shrink","isPasswordAutofilled","passwordRef","setState","isDisabled","isEmailEmpty","isPasswordEmpty","err","passwordCheck","event","passwordInput","target","value","isEmpty","test","this","checkSubmitDisable","emailCheck","emailInput","isCorrect","state","isLoggedIn","isSpinning","logIn","bind","React","createRef","isSuccessful","setTimeout","updateState","isAuth","addEventListener","className","noValidate","autoComplete","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","TextField","required","id","label","type","inputRef","onChange","Box","m","Button","disabled","onClick","variant","CircularProgress","size","Component","SignUpPage","nameCheck","nameInput","isFirstTime","regexpFirst","isNotCorrectName","nameValidate","isNotCorrectEmail","emailValidate","isNotCorrectPassword","passwordValidate","confirmPasswordCheck","confirmPasswordInput","isNotCorrectConfirmPassword","confirmPasswordValidate","isSignedUp","signUp","error","helperText","InputProps","endAdornment","InputAdornment","position","Tooltip","title","AuthPage","setAppState","isAuthenticated","newValue","TabContext","style","AppBar","TabList","handleChange","aria-label","Tab","TabPanel","socket","io","connect","process","IO_CONNECT_LINK_FRONT","ChatPage","makeStyles","root","width","scrollToRef","height","messagesArea","getBoundingClientRect","parentElement","scrollTo","chatHeight","scrollWithButton","scrollHeight","scrollTop","newClassNames","scrollBtn","split","filter","item","index","arr","join","includes","onMessageSubmit","isSend","chatInput","editElement","childNodes","innerText","editedMessage","emit","message","checkUser","showContextMenu","preventDefault","stopPropagation","isSelectionState","anchorEl","isMyMessage","preventShowContextMenu","handleContextMenuClose","handleDialogClose","isDialogOpen","handleKeyDown","key","changeInput","editMessage","elem","previousData","focus","showDeleteMessageDialog","deleteMessage","copyText","text","getSelection","toString","navigator","clipboard","writeText","selectMessage","isSelectedMessage","selectedElements","length","push","filteredArray","deleteSelectedMessages","map","i","array","chat","isScrolledToTop","userEmail","on","messageid","database","sortedResult","sort","b","is_edited","idx","data-id","onContextMenu","Person","IconButton","Close","onScroll","ref","onLoad","renderChat","buttonRef","ArrowDownward","Menu","keepMounted","MenuItem","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogActions","color","autoFocus","placeholder","margin","InputLabelProps","onKeyDown","Send","App","checkToken","callApiCheckToken","logOut","componentDidMount","Toolbar","to","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6ad4ba69.chunk.js","sourcesContent":["export async function callApi (route, email, password, name = '') {\n  let isLogin = (route === 'login');\n\n  try {\n    const response = await fetch(`/api/user/${route}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n          user: {\n            name,\n            email,\n            password,\n          }\n      }),});\n    const resultObj = await response.json();\n    if(response.status === 401) {\n      window.localStorage.removeItem('userName');\n      window.localStorage.removeItem('userEmail');\n      window.localStorage.removeItem('token');\n      window.localStorage.removeItem('refreshToken');\n      return false;\n    }\n    window.localStorage.setItem('userName', resultObj.user);\n    window.localStorage.setItem('userEmail', resultObj.email);\n    window.localStorage.setItem('token', resultObj.token);\n    window.localStorage.setItem('refreshToken', resultObj.refreshToken);\n    return true;\n\n  } catch(err) {\n    isLogin ? alert('Incorrect login or password') : alert('This email is already in use!');\n  }\n}\n\nexport async function callApiCheckToken () {\n  try {\n    const response = await fetch(`/api/user/check`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user: {\n          accessToken: window.localStorage.getItem('token'),\n          name: window.localStorage.getItem('userName'),\n          email: window.localStorage.getItem('userEmail'),\n          refreshToken: window.localStorage.getItem('refreshToken'),\n        }\n    }),});\n    const resultObj = await response.json();\n    if(response.status !== 401) {\n      window.localStorage.setItem('token', resultObj.accessToken);\n    }\n\n  } catch(err) {\n    console.log('acces token died');\n  }\n\n}\n  \n","import React, { Component } from 'react';\nimport { TextField, Snackbar } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Alert } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { callApi } from '../../services/apiService';\n\n\nclass LogInPage extends Component {\n    constructor(props) {\n      super(props);\n      \n      this.state = {\n        isPasswordEmpty: null,\n        isEmailEmpty: null,\n        isDisabled: true,\n        isLoggedIn: null,\n        isSpinning: false,\n      }\n\n      this.passwordInput = '';\n      this.emailInput = '';\n      this.logIn = this.logIn.bind(this);\n      this.emailRef = React.createRef();\n      this.passwordRef = React.createRef();\n    }\n  \n    async logIn() {\n      this.setState({ isSpinning: true});\n      const isSuccessful = await callApi('login', this.emailInput, this.passwordInput);\n      setTimeout(() => {\n        this.setState({ isLoggedIn: isSuccessful, isSpinning: false });\n      }, 500);\n      setTimeout(() => {\n        this.props.updateState({ isAuth: isSuccessful });\n      }, 2500)\n    }\n\n    componentDidMount() {\n      if (this.emailRef.current.value && this.passwordRef.current.value) {\n        this.setState({ isEmailEmpty: false, isPasswordEmpty: false });\n        this.checkSubmitDisable();\n      }\n      window.addEventListener('load', this.detectAutofill);\n    }\n\n    detectAutofill = () => {\n      try {\n        const isEmailAutofilled = JSON.parse(this.emailRef.current.labels[0].dataset.shrink);\n        const isPasswordAutofilled = JSON.parse(this.passwordRef.current.labels[0].dataset.shrink);\n        if (isEmailAutofilled && isPasswordAutofilled) {\n          this.setState({ isDisabled: false, isEmailEmpty: false, isPasswordEmpty: false });\n        }\n      } catch(err) { }\n    }\n\n    passwordCheck = (event) => {\n      const regexp = /^(?!\\s*$).+/;\n      this.passwordInput = event.target.value;\n      const isEmpty = !regexp.test(event.target.value);\n      this.setState({ isPasswordEmpty: isEmpty }, function() {\n        this.checkSubmitDisable();\n      })\n    }\n\n    emailCheck = (event) => {\n      const regexp = /^(?!\\s*$).+/;\n      this.emailInput = event.target.value;\n      const isEmpty = !regexp.test(event.target.value);\n      this.setState({ isEmailEmpty: isEmpty }, function() {\n        this.checkSubmitDisable();\n      })\n    }\n\n    checkSubmitDisable = () => {\n      const isCorrect = ( this.state.isPasswordEmpty === false &&\n        this.state.isEmailEmpty === false ) ? true : false;\n      this.setState({ isDisabled: !isCorrect });\n    }\n  \n    render() {\n  \n      return (\n        <form className='login-form' noValidate autoComplete='on'>\n          <Snackbar open={ this.state.isLoggedIn }\n            autoHideDuration={ 3000 }\n            onClose={ () => this.setState({ isLoggedIn: null }) }\n            anchorOrigin={ { vertical: 'top', horizontal: 'center' } }\n          >\n            <Alert severity=\"success\">\n              You are logged in!\n            </Alert>\n          </Snackbar>\n\n          <Snackbar open={ this.state.isLoggedIn === false } \n            autoHideDuration={ 3000 }\n            onClose={ () => this.setState({ isLoggedIn: null }) }\n            anchorOrigin={ { vertical: 'top', horizontal: 'center' } }\n          >\n            <Alert severity=\"error\">\n              Incorrect login or password!\n            </Alert>\n          </Snackbar>\n\n          <TextField required\n            id='email' \n            label='Email'\n            type='email'\n            inputRef={ this.emailRef }\n            onChange={ this.emailCheck }\n          />\n          <TextField required\n            id='password'\n            label='Password'\n            type='password'\n            autoComplete='current-password'\n            inputRef={ this.passwordRef }\n            onChange={ this.passwordCheck }\n          />\n          <Box m={ 2 }>\n            <Button\n              disabled={ this.state.isDisabled }\n              onClick={ this.logIn }\n              className='logInBtn' \n              variant='outlined'\n\n            >\n              { this.state.isSpinning && <CircularProgress size={ 17 } /> }\n              { !this.state.isSpinning && <span>Log In</span> }\n            </Button>\n          </Box>\n        </form>\n      );\n    }\n}\n  \nexport default LogInPage;\n","import React, { Component } from 'react';\nimport { TextField, Snackbar, InputAdornment, Tooltip } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Alert } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nimport { callApi } from '../../services/apiService';\n\n\nclass SignUpPage extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        isDisabled: true,\n        isSignedUp: null,\n        isSpinning: false,\n        isFirstTime: true,\n        isNotCorrectName: null,\n        isNotCorrectEmail: null,\n        isNotCorrectPassword: null,\n        isNotCorrectConfirmPassword: null,\n      }\n\n      this.regexpFirst = /^(?!\\s*$).+/;\n      this.nameInput = '';\n      this.passwordInput = '';\n      this.emailInput = '';\n      this.confirmPasswordInput = '';\n      this.signUp = this.signUp.bind(this);\n    }\n  \n    async signUp() {\n      this.nameValidate();\n      this.emailValidate();\n\n      this.passwordValidate();\n      this.confirmPasswordValidate();\n      const isCorrect = this.checkSubmitDisable();\n\n      if(isCorrect) {\n        this.setState({ isSpinning: true, isFirstTime: true, });\n        const isSuccessful = await callApi('signup', this.emailInput, this.passwordInput, this.nameInput);\n\n        setTimeout(() => {\n          this.setState({ isSignedUp: isSuccessful, isSpinning: false });\n\n        }, 500);\n        setTimeout(() => {\n          this.props.updateState({ isAuth: isSuccessful });\n  \n        }, 2500)\n  \n      } else {\n        this.setState({ isFirstTime: false });\n      }\n    }\n\n    nameCheck = (event) => {\n      this.nameInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectName: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.nameValidate();\n    }\n    emailCheck = (event) => {\n      this.emailInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectEmail: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.emailValidate();\n    }\n    passwordCheck = (event) => {\n      this.passwordInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectPassword: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.passwordValidate();\n    }\n    confirmPasswordCheck = (event) => {\n      this.confirmPasswordInput = event.target.value;\n      if(this.state.isFirstTime) {\n        const isEmpty = !this.regexpFirst.test(event.target.value);\n        this.setState({ isNotCorrectConfirmPassword: isEmpty }, function() {\n          this.checkSubmitDisable();\n        });\n      } else this.confirmPasswordValidate();\n    }\n\n\n    nameValidate = () => {\n      const regexp = /^[a-zA-Z]+$/;\n      const isCorrect = regexp.test(this.nameInput);\n\n      this.setState({ isNotCorrectName: !isCorrect }, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    emailValidate = () => {\n      const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const isCorrect = regexp.test(this.emailInput);\n      \n      this.setState({ isNotCorrectEmail: !isCorrect }, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    passwordValidate = () => {\n      const regexp = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n      const isCorrect = regexp.test(this.passwordInput);\n\n      this.setState({ isNotCorrectPassword: !isCorrect}, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    confirmPasswordValidate = (event) => {\n      const isCorrect = this.confirmPasswordInput === this.passwordInput;\n\n      this.setState({ isNotCorrectConfirmPassword: !isCorrect }, function() {\n        this.checkSubmitDisable();\n      });\n    }\n\n    checkSubmitDisable = () => {\n      const isCorrect = ( this.state.isNotCorrectName === false &&\n        this.state.isNotCorrectEmail === false &&\n        this.state.isNotCorrectPassword === false &&\n        this.state.isNotCorrectConfirmPassword === false) ? true : false;\n\n      this.setState({ isDisabled: !isCorrect});\n      return isCorrect;\n    }\n    \n    render() {\n  \n      return (\n        <form className='signup-form' noValidate autoComplete='on'>\n\n          <Snackbar open={ this.state.isSignedUp }\n            autoHideDuration={ 3000 }\n            onClose={ () => this.setState({ isSignedUp: null }) }\n            anchorOrigin={ { vertical: 'top', horizontal: 'center' } }>\n            <Alert severity=\"success\">\n              You are signed up!\n            </Alert>\n          </Snackbar>\n\n          <Snackbar open={ this.state.isSignedUp === false }\n            autoHideDuration={ 3000 }\n            onClose={ () => this.setState({ isSignedUp: null }) }\n            anchorOrigin={ { vertical: 'top', horizontal: 'center' } }>\n            <Alert severity=\"error\">\n              This email is already in use!\n            </Alert>\n          </Snackbar>\n          <TextField required\n            error={ this.state.isNotCorrectName && !this.state.isFirstTime }\n            id='name' \n            label='Name'\n            onChange={ this.nameCheck }\n            helperText={ this.state.isNotCorrectName && !this.state.isFirstTime ? 'Use only alphabet characters' : false }\n          />\n          <TextField required\n            error={ this.state.isNotCorrectEmail && !this.state.isFirstTime }\n            id='email' \n            label='Email'\n            type='email'\n            onChange={ this.emailCheck }\n            helperText={ this.state.isNotCorrectEmail && !this.state.isFirstTime ? 'Incorrect email' : false }\n          />\n          <TextField required\n            error={ this.state.isNotCorrectPassword && !this.state.isFirstTime }\n            id='password'\n            label='Password'\n            type='password'\n            autoComplete='current-password'\n            InputProps={ { \n              endAdornment: <InputAdornment position=\"end\">\n                              <Tooltip title='Password must contain minimum 8 characters, at least 1 letter and 1 number'><HelpOutlineIcon/></Tooltip>\n                            </InputAdornment>\n                        } }\n            onChange={ this.passwordCheck }\n            helperText={ this.state.isNotCorrectPassword && !this.state.isFirstTime ? 'Password must contain minimum 8 characters, at least 1 letter and 1 number' : false }\n          />\n          <TextField required\n            error={ this.state.isNotCorrectConfirmPassword && !this.state.isFirstTime }\n            id='standard-password'\n            label='Confirm password'\n            type='password'\n            InputProps={ { \n              endAdornment: <InputAdornment position=\"end\">\n                              <Tooltip title='Password and confirm password must match'><HelpOutlineIcon/></Tooltip>\n                            </InputAdornment>\n                        } }\n            onChange={ this.confirmPasswordCheck }\n            helperText={ this.state.isNotCorrectConfirmPassword && !this.state.isFirstTime ? `Password and confirm password don't match!` : false }\n          />\n          <Box m={ 2 }>\n            <Button\n              disabled={ this.state.isDisabled }\n              onClick={ this.signUp }\n              className='signUpBtn'\n              variant='outlined'\n              id='signUpButton'\n            >\n              { this.state.isSpinning && <CircularProgress size={ 17 } /> }\n              { !this.state.isSpinning && <span>Sign Up</span> }\n            </Button>\n          </Box>\n        </form>\n      );\n    }\n}\n  \nexport default SignUpPage;\n","import React, { Component } from 'react';\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport { Tab, AppBar } from '@material-ui/core';\n\nimport LogInPage from '../../components/loginPage/loginPage';\nimport SignUpPage from '../../components/signupPage/signupPage';\n\n\nclass AuthPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          value: localStorage.getItem('page') === '2' ? localStorage.getItem('page') : '1',\n          isAuthenticated: false,\n        }\n    }\n\n    handleChange(event, newValue) {\n        this.setState({value: newValue});\n        localStorage.setItem('page', newValue);\n    }\n\n    setAppState = async (state) => {\n        const { isAuth } = state;\n        this.setState({ isAuthenticated: isAuth });\n        this.props.updateState({ isAuth: isAuth });\n    }\n    \n    render() {\n  \n        return (\n            <div className='tabWrapper'>\n                <TabContext style='backgroundColor: #cbecec' value={ this.state.value }>\n                <AppBar position='static'>\n                    <TabList onChange={ this.handleChange.bind(this) } aria-label='simple tabs example'>\n                    <Tab label='Sign Up' value='1' />\n                    <Tab label='Log In' value='2' />\n                    </TabList>\n                </AppBar>\n                <TabPanel value='1'>\n                    <SignUpPage updateState = { this.setAppState } />\n                </TabPanel>\n                <TabPanel value='2'>\n                    <LogInPage updateState = { this.setAppState } />\n                </TabPanel>\n                </TabContext>\n          </div>\n\n        );\n    }\n}\n\nexport default AuthPage;\n","import React, { Component } from 'react';\nimport '../../components/chatPage/chatPage.css';\nimport { TextField, Button, IconButton, Menu, MenuItem, Dialog, DialogTitle, DialogActions, makeStyles } from '@material-ui/core';\nimport { Send, Close, Person, ArrowDownward } from '@material-ui/icons';\nimport io from 'socket.io-client';\nconst socket = io.connect(process.env.IO_CONNECT_LINK_FRONT);\n\nconst useStyles = makeStyles({\n    root: {\n        width: '25vw',\n    }\n});\n\nclass ChatPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            chat: [],\n            isSend: null,\n            anchorEl: null,\n            editElement: null,\n            isDialogOpen: false,\n            isScrolledToTop: false,\n            isSelectionState: false,\n        }\n        this.isMyMessage = null;\n        this.selectedElements = [];\n        this.chatInput = React.createRef();\n        this.messagesArea = React.createRef();\n        this.scrollBtn = React.createRef();\n        this.userEmail = '';\n        this.chatHeight = 0;\n        // this.classes = useStyles();\n\n    }\n\n    componentDidMount() {\n        socket.on('chat message', ({ message, name, email }) => {\n            const messageid = (+this.state.chat[this.state.chat.length - 1].messageid + 1) + '';\n            this.setState({\n                chat: [...this.state.chat, { message, name, email, messageid }]\n            }, () => { this.scrollToRef(); });\n\n        });\n        socket.on('get database', (database) => {\n            let sortedResult = database.sort(function(a, b) { \n                if (+a.messageid > +b.messageid) { \n                  return 1; } \n                if (+a.messageid < +b.messageid) { \n                  return -1; } \n                return 0; \n            });\n            this.setState({\n                chat: sortedResult\n            }, () => { this.scrollToRef(); });\n\n        });\n        socket.on('edit message', ({ message, messageid, is_edited }) => {\n            const arr = this.messagesArea.current.childNodes;\n            let i = 0;\n            while (arr[i].dataset.id !== messageid) i++;\n\n            if (arr[i].dataset.id === messageid) {\n                arr[i].childNodes[0].childNodes[1].innerText = message;\n                arr[i].childNodes[0].childNodes[2].className = 'userEdited noselect';\n            }\n        });\n        socket.on('delete message', (messageid) => {\n            const filteredArray = this.state.chat.filter(function(item, index, arr) {\n                if (item.messageid !== messageid) return true;\n                return false;\n            });\n            this.setState({ chat: filteredArray, editElement: null });\n        });\n\n        socket.emit('get database');\n\n        this.userEmail = localStorage.getItem('userEmail');\n        window.addEventListener('storage', this.checkUser);\n    }\n\n\n    scrollToRef = () => {\n        const height = this.messagesArea.current.getBoundingClientRect().height;\n        this.messagesArea.current.parentElement.scrollTo(0, height);\n        this.chatHeight = height;\n    }\n\n    scrollWithButton = () => {\n        const scrollHeight = this.messagesArea.current.parentElement.scrollTop;\n\n        if (this.chatHeight - scrollHeight >= 1000) {\n            const newClassNames = this.scrollBtn.current.className.split(' ').filter((item, index, arr) => item !== 'scrollBtn-hidden').join(' ');\n            this.scrollBtn.current.className = newClassNames;\n        } else {\n\n            if(!this.scrollBtn.current.className.split(' ').includes('scrollBtn-hidden')) {\n                this.scrollBtn.current.className = this.scrollBtn.current.className + ' scrollBtn-hidden';\n            }\n        }\n    }\n\n    onMessageSubmit = () => {\n        this.setState({ isSend: true });\n        if (this.chatInput.current.value !== '') {\n            if (this.state.editElement !== null) {\n                if (this.chatInput.current.value !== this.state.editElement.childNodes[1].innerText) {\n                    const id = this.state.editElement.parentElement.dataset.id;\n                    const editedMessage = this.chatInput.current.value;\n                    socket.emit('edit message', editedMessage, id);\n                }\n\n            } else socket.emit('chat message', this.chatInput.current.value, localStorage.getItem('userName'), localStorage.getItem('userEmail'));\n        }\n        this.setState({ message: '', editElement: null });\n        this.chatInput.current.value = '';\n    };\n\n    checkUser = () => {\n        this.props.updateState({ isAuth: false });\n    }\n\n    showContextMenu = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.state.isSelectionState) return;\n        if (event.target.className.split(' ').includes('message')) {\n            this.setState({ anchorEl: event.target }, function() {\n                if (this.state.anchorEl.className.split(' ').includes('myMessage')) {\n                    this.setState({ isMyMessage: true });\n                } else this.setState({ isMyMessage: false });\n    \n            });\n\n        }\n        if (event.target.parentElement.className.split(' ').includes('message')) {\n            this.setState({ anchorEl: event.target.parentElement }, function() {\n                if (this.state.anchorEl.className.split(' ').includes('myMessage')) {\n                    this.setState({ isMyMessage: true });\n                } else this.setState({ isMyMessage: false });\n    \n            });\n        }\n        \n    }\n    preventShowContextMenu = (event) => {\n        event.preventDefault();\n        return false;\n    }\n\n    handleContextMenuClose = () => {\n        this.setState({ anchorEl: null });\n    }\n\n    handleDialogClose = () => {\n        this.setState({ isDialogOpen: false, editElement: null });\n    }\n\n    handleKeyDown = (event) => {\n        if (event.key === 'Enter') this.onMessageSubmit();\n    }\n\n    changeInput = (event) => {\n        this.setState({ message: event.target.value });\n    }\n\n    renderChat() {\n        const { chat } = this.state;\n        return chat.map(({ message, name, email, messageid, is_edited }, idx) => (\n            <div data-id={ messageid } className={ email === localStorage.getItem('userEmail') ?\n                'messageWrapper messageWrapper-myMessage' \n                : 'messageWrapper messageWrapper-otherMessage' }\n            >\n                <div className= { email === localStorage.getItem('userEmail') ?\n                    'myMessage message' \n                    : 'otherMessage message' }\n                >\n                    <span className='userName noselect' >{ name }</span>\n                    <span className='userEmail' onContextMenu={ this.preventShowContextMenu } >{ message }</span>\n\n                    <span className= { is_edited ? 'userEdited noselect' : 'userNotEdited noselect' }>Edited</span>\n                    {/* <span className='sendTime'>{sendDate}</span> */}\n                </div>\n                <div className='messageAvatar'>\n                    <Person />\n                </div>\n            </div>\n        ));\n    };\n\n\n    editMessage = () => {\n        const elem = this.state.anchorEl;\n        this.handleContextMenuClose();\n        const previousData = elem.innerText;\n\n        setTimeout(() => {\n            this.chatInput.current.focus();\n        }, 0);\n        this.chatInput.current.value = previousData;\n        this.setState({ editElement: elem, message: previousData });\n\n    }\n\n    showDeleteMessageDialog = () => {\n        const elem = this.state.anchorEl.parentElement;\n        this.handleContextMenuClose();\n\n        this.setState({ isDialogOpen: true, editElement: elem });\n    }\n\n    deleteMessage = () => {\n        this.handleDialogClose();\n        socket.emit('delete message', this.state.editElement.dataset.id);\n    }\n\n    copyText = () => {\n        let text;\n        if (window.getSelection().toString() === '') text = this.state.anchorEl.childNodes[1].innerText;\n        else text = window.getSelection().toString();\n        navigator.clipboard.writeText(text);\n        this.handleContextMenuClose();\n    }\n\n    selectMessage = async (event) => {\n\n        if (!this.state.isSelectionState) {\n            this.setState({ isSelectionState: true });\n            this.state.anchorEl.className = this.state.anchorEl.className + ' selectedMessage';\n\n            this.selectedElements.push(this.state.anchorEl.parentElement);\n            this.handleContextMenuClose();\n\n        } else {\n            if (event.target.className.split(' ').includes('message')) {\n\n                const elem = event.target;\n\n                this.isSelectedMessage(elem);\n            }\n            if (event.target.parentElement.className.split(' ').includes('message')) {\n\n                const elem = event.target.parentElement;\n\n                this.isSelectedMessage(elem);\n            }\n            if (this.selectedElements.length === 0) this.setState({ isSelectionState: false });\n            else this.setState({ isSelectionState: true });\n\n        }\n    }\n\n    isSelectedMessage = (elem) => {\n        if (elem.className.split(' ').includes('selectedMessage')) {\n            elem.className = elem.className.split(' ').filter(function(item, index, arr) {\n                return item !== 'selectedMessage';\n            }).join(' ');\n\n            const filteredArray = this.selectedElements.filter(function(item, index, arr) {\n                return item.dataset.id !== elem.parentElement.dataset.id;\n            });\n\n            this.selectedElements = filteredArray;\n\n        } else {\n            elem.className = elem.className + ' selectedMessage';\n\n            this.selectedElements.push(elem.parentElement);\n        }\n    }\n\n    deleteSelectedMessages = () => {\n        this.selectedElements.map(function(item, index, arr) {\n            item.childNodes[0].className = item.childNodes[0].className.split(' ').filter(function(name, i, array) {\n                return name !== 'selectedMessage';\n            }).join(' ');\n        });\n        this.selectedElements = [];\n        this.setState({ isSelectionState: false });\n    }\n\n    render() {\n        return (\n            <div className='chatWrapper'>\n                <div className='chat'>\n                    <div className='chatHeader'>\n                        { !this.state.isSelectionState && <span>Group Chat</span> }\n                        { this.state.isSelectionState && <div className='selectionArea'>\n                            <span className='selectedElemsCount'>Selected items: { this.selectedElements.length } </span>\n                            <IconButton aria-label='delete' \n                                onClick={this.deleteSelectedMessages}\n                            >\n                                <Close />\n                            </IconButton>\n                        </div> }\n                    </div>\n                    <div className='messagesAreaWrapper' onScroll={ this.scrollWithButton } >\n                        <div className='messagesArea' ref={ this.messagesArea } \n                            onContextMenu={ this.showContextMenu }\n                            onClick={ this.state.isSelectionState ? this.selectMessage : false }\n                            onLoad={ this.scrollToRef }\n                        >\n                            {this.renderChat()}\n                        </div>\n                        <IconButton buttonRef={ this.scrollBtn }\n                            className='scrollButton scrollBtn-hidden'\n                            onClick={ this.scrollToRef }\n                        >\n                            <ArrowDownward />\n                        </IconButton>\n\n                        <Menu\n                            id=\"simple-menu\"\n                            anchorEl={ this.state.anchorEl }\n                            keepMounted\n                            open={ this.state.anchorEl && !this.state.isSelectionState }\n                            onClose={ this.handleContextMenuClose }\n                            anchorOrigin={ { vertical: 'bottom', horizontal: 'right' } }\n                        >\n                            <MenuItem onClick={ this.copyText } >Copy Text</MenuItem>\n                            { this.state.isMyMessage ? <MenuItem onClick={ this.editMessage } >Edit Message</MenuItem> : false }\n                            { this.state.isMyMessage ? <MenuItem onClick={ this.showDeleteMessageDialog } >Delete Message</MenuItem> : false }\n                            <MenuItem onClick={ this.selectMessage } >Select Message</MenuItem>\n                        </Menu>\n\n                        <Dialog\n                            // className={ this.classes.root }\n                            open={ this.state.isDialogOpen }\n                            onClose={ this.handleDialogClose }\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-title\">Are you sure you want to delete message?</DialogTitle>\n                            <DialogActions>\n                            <Button onClick={ this.deleteMessage } color=\"primary\">\n                                Yes, delete\n                            </Button>\n                            <Button onClick={ this.handleDialogClose } color=\"primary\" autoFocus>\n                                No\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                    <div className='inputArea'>\n                        <TextField\n                            id='standard-full-width'\n                            placeholder='Write a message...'\n                            margin='normal'\n                            variant='outlined'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputRef={ this.chatInput }\n                            onKeyDown={ this.handleKeyDown }\n                            onChange={ this.changeInput }\n                        />\n                        { this.state.message !== '' ? <IconButton aria-label='send'\n                            className='sendBtn'\n                            onClick={ this.onMessageSubmit }\n                        >\n                            <Send />\n                        </IconButton> : false }\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ChatPage;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { AppBar, Button, Toolbar } from '@material-ui/core';\nimport AuthPage from './components/authPage/authPage';\nimport ChatPage from './components/chatPage/chatPage';\nimport { callApiCheckToken } from './services/apiService';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuth: false,\n    }\n  }\n\n  checkToken = () => callApiCheckToken();\n\n  setAppState = async (state) => {\n    const { isAuth } = state;\n    if (!isAuth) this.logOut();\n    else {\n      this.setState({ isAuth: JSON.parse(isAuth) });\n      localStorage.setItem('isAuth', isAuth);\n    }\n  }\n\n  logOut = () => {\n    localStorage.removeItem('userName');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    \n    localStorage.setItem('isAuth', false);\n\n    this.setState({ isAuth: false });\n  }\n\n  componentDidMount = () => {\n    this.setState({ isAuth: JSON.parse(localStorage.getItem('isAuth')) || false });\n  }\n\n  render() {\n\n    return (\n        <div className='App'>\n          <AppBar position=\"static\">\n            <Toolbar>\n            { this.state.isAuth ? \n              <Button\n                className='checkTokenBtn' \n                variant='contained'\n                onClick={ this.checkToken }\n              >\n                Refresh Access Token\n              </Button> : false }\n\n            { this.state.isAuth ? \n              <Button\n                className='logOutBtn' \n                color='inherit' \n                onClick={ this.logOut }\n              >\n                Log out\n              </Button> : false }\n            </Toolbar>\n          </AppBar>\n          <BrowserRouter>\n          { this.state.isAuth ? <Redirect to='/chat' /> : <Redirect to='/signup' /> }\n            <Switch>\n              <Route path='/signup' component={() => <AuthPage updateState = { this.setAppState } />} />\n              <Route path='/chat' component={() => {\n                return this.state.isAuth ?\n                  <ChatPage updateState={ this.setAppState } /> \n                  : <AuthPage updateState={ this.setAppState } />;\n                }} />\n              <Route component={() => {\n                return this.state.isAuth ?\n                  <ChatPage updateState={ this.setAppState } /> \n                  : <AuthPage updateState={ this.setAppState } />;\n              }} />\n\n            </Switch>\n          </BrowserRouter>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}